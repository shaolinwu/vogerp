<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.wallet.dao.TokenmgmtDao">

	<select id="get" resultType="com.bootdo.wallet.domain.TokenmgmtDO">
		select `id`,`name`,`icon`,`ercaddress`,`enable`,`display`,`enablewithdraw`,`enablecharge`,`createdate` from wallet_tokenmgmt where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.wallet.domain.TokenmgmtDO">
		select `id`,`name`,`icon`,`ercaddress`,`enable`,`display`,`enablewithdraw`,`enablecharge`,`createdate` from wallet_tokenmgmt
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="ercaddress != null and ercaddress != ''"> and ercaddress = #{ercaddress} </if>
		  		  <if test="enable != null and enable != ''"> and enable = #{enable} </if>
                  <if test="display != null and display != ''"> and display = #{display} </if>
		  		  <if test="enablewithdraw != null and enablewithdraw != ''"> and enablewithdraw = #{enablewithdraw} </if>
		  		  <if test="enablecharge != null and enablecharge != ''"> and enablecharge = #{enablecharge} </if>
		  		  <if test="createdate != null and createdate != ''"> and createdate = #{createdate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from wallet_tokenmgmt
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="ercaddress != null and ercaddress != ''"> and ercaddress = #{ercaddress} </if>
		  		  <if test="enable != null and enable != ''"> and enable = #{enable} </if>
                  <if test="display != null and display != ''"> and display = #{display} </if>
		  		  <if test="enablewithdraw != null and enablewithdraw != ''"> and enablewithdraw = #{enablewithdraw} </if>
		  		  <if test="enablecharge != null and enablecharge != ''"> and enablecharge = #{enablecharge} </if>
		  		  <if test="createdate != null and createdate != ''"> and createdate = #{createdate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.wallet.domain.TokenmgmtDO">
		insert into wallet_tokenmgmt
		(
			`id`, 
			`name`, 
			`icon`, 
			`ercaddress`, 
			`display`, 
			`enable`, 
			`enablewithdraw`, 
			`enablecharge`, 
			`createdate`
		)
		values
		(
			#{id}, 
			#{name}, 
			#{icon}, 
			#{ercaddress}, 
			#{display}, 
			#{enable}, 
			#{enablewithdraw}, 
			#{enablecharge}, 
			#{createdate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.wallet.domain.TokenmgmtDO">
		update wallet_tokenmgmt 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="desc != null">`desc` = #{desc}, </if>
			<if test="icon != null">`icon` = #{icon}, </if>
			<if test="ercaddress != null">`ercaddress` = #{ercaddress}, </if>
			<if test="enable != null">`enable` = #{enable}, </if>
			<if test="display != null">`display` = #{display}, </if>
			<if test="enablewithdraw != null">`enablewithdraw` = #{enablewithdraw}, </if>
			<if test="enablecharge != null">`enablecharge` = #{enablecharge}, </if>
			<if test="createdate != null">`createdate` = #{createdate}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from wallet_tokenmgmt where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from wallet_tokenmgmt where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>