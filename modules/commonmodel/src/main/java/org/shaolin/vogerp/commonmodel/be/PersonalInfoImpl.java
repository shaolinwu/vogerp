/*
 *
 * This file is automatically generated on Thu Jul 23 13:15:09 CST 2015
 */

    
package org.shaolin.vogerp.commonmodel.be;
        
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

import org.shaolin.bmdp.datamodel.bediagram.*;
import org.shaolin.bmdp.datamodel.common.*;
import org.shaolin.bmdp.runtime.be.IBusinessEntity;
import org.shaolin.bmdp.runtime.be.IExtensibleEntity;
import org.shaolin.bmdp.runtime.be.IPersistentEntity;
import org.shaolin.bmdp.runtime.be.IHistoryEntity;
import org.shaolin.bmdp.runtime.be.BEExtensionInfo;

import org.shaolin.bmdp.runtime.spi.IConstantService;

import org.shaolin.bmdp.runtime.AppContext;

import org.shaolin.bmdp.runtime.ce.CEUtil;

import org.shaolin.vogerp.commonmodel.ce.*;


/**
 * null
 * 
 * This code is generated automatically, any change will be replaced after rebuild.
 * 
 *
 */

public class PersonalInfoImpl 
    extends PartyImpl
         implements org.shaolin.vogerp.commonmodel.be.IPersonalInfo
{
    private static final long serialVersionUID = 0x90B1123CE87B50FFL;

    private final IConstantService ceService = AppContext.get().getConstantService();

    protected String getBusinessEntityName()
    {
        return "org.shaolin.vogerp.commonmodel.be.PersonalInfo";
    }

    public PersonalInfoImpl()
    {
        
        addresses = new java.util.ArrayList<IAddressInfo>();
            
        contacts = new java.util.ArrayList<IContactInfo>();
            
        _extField = new BEExtensionInfo();
        
    }
    
    
        /**
     * Enable record
     */
    private boolean _enable = true;


    /**
     *  BEExtension _extType
     */
    protected String _extType;

    /**
     *  BEExtension _extField
     */
    protected BEExtensionInfo _extField;
        
   /**
     *  help is not available
     */    
    protected java.lang.String firstName;
    
   /**
     *  help is not available
     */    
    protected java.lang.String lastName;
    
   /**
     *  help is not available
     */    
    protected Gender gender = Gender.NOT_SPECIFIED;
    
    protected int genderInt = Gender.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected boolean married;
    
   /**
     *  help is not available
     */    
    protected java.lang.String identityCardId;
    
   /**
     *  help is not available
     */    
    protected java.lang.String discription;
    
   /**
     *  help is not available
     */    
    protected java.util.Date birthday;
    
   /**
     *  help is not available
     */    
    protected java.util.Date birthdayStart;
    
   /**
     *  help is not available
     */    
    protected java.util.Date birthdayEnd;
    
   /**
     *  help is not available
     */    
    protected LanguageType language = LanguageType.NOT_SPECIFIED;
    
    protected int languageInt = LanguageType.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected EducationLevel education = EducationLevel.NOT_SPECIFIED;
    
    protected int educationInt = EducationLevel.NOT_SPECIFIED.getIntValue();
    
   /**
     *  help is not available
     */    
    protected java.lang.String major;
    
   /**
     *  help is not available
     */    
    protected java.util.List<IAddressInfo> addresses;
    
   /**
     *  help is not available
     */    
    protected java.util.List<IContactInfo> contacts;
    
   /**
     *  help is not available
     */    
    protected java.lang.String comment;
    
        /**
     *  Is enable
     *
     *  @return boolean
     */
    public boolean isEnabled() {
        return _enable;
    }
            /**
     *  Is enable
     *
     *  @return boolean
     */
    private boolean get_enable() {
        return _enable;
    }
        
    /**
     *  get _extType
     *
     *  @return _extType
     */
    public String get_extType() {
        return _extType;
    }

    /**
     *  get _extField
     *
     *  @return _extField
     */
    public BEExtensionInfo get_extField() {
        return _extField;
    }
        
    /**
     *  get firstName
     *
     *  @return firstName
     */
    public java.lang.String getFirstName() {
        return firstName;
    }

    /**
     *  get lastName
     *
     *  @return lastName
     */
    public java.lang.String getLastName() {
        return lastName;
    }

    /**
     *  get gender
     *
     *  @return gender
     */
    public Gender getGender() {
        return gender;
    }

    /**
     *  get genderInt
     *
     *  @return genderInt
     */
    private int getGenderInt() {
        return genderInt;
    }

    /**
     *  get married
     *
     *  @return married
     */
    public boolean getMarried() {
        return married;
    }

    /**
     *  get identityCardId
     *
     *  @return identityCardId
     */
    public java.lang.String getIdentityCardId() {
        return identityCardId;
    }

    /**
     *  get discription
     *
     *  @return discription
     */
    public java.lang.String getDiscription() {
        return discription;
    }

    /**
     *  get birthday
     *
     *  @return birthday
     */
    public java.util.Date getBirthday() {
        return birthday;
    }

    /**
     *  get birthdayStart
     *
     *  @return birthdayStart
     */
    public java.util.Date getBirthdayStart() {
        return birthdayStart;
    }

    /**
     *  get birthdayEnd
     *
     *  @return birthdayEnd
     */
    public java.util.Date getBirthdayEnd() {
        return birthdayEnd;
    }

    /**
     *  get language
     *
     *  @return language
     */
    public LanguageType getLanguage() {
        return language;
    }

    /**
     *  get languageInt
     *
     *  @return languageInt
     */
    private int getLanguageInt() {
        return languageInt;
    }

    /**
     *  get education
     *
     *  @return education
     */
    public EducationLevel getEducation() {
        return education;
    }

    /**
     *  get educationInt
     *
     *  @return educationInt
     */
    private int getEducationInt() {
        return educationInt;
    }

    /**
     *  get major
     *
     *  @return major
     */
    public java.lang.String getMajor() {
        return major;
    }

    /**
     *  get addresses
     *
     *  @return addresses
     */
    public java.util.List<IAddressInfo> getAddresses() {
        return addresses;
    }

    /**
     *  get contacts
     *
     *  @return contacts
     */
    public java.util.List<IContactInfo> getContacts() {
        return contacts;
    }

    /**
     *  get comment
     *
     *  @return comment
     */
    public java.lang.String getComment() {
        return comment;
    }

        /**
     *  set enable
     *  @parameter true or false.
     */
    public void setEnabled(boolean enable) {
        _enable = enable;
    }

        /**
     *  set enable
     *  @parameter true or false.
     */
    private void set_enable(boolean enable) {
        _enable = enable;
    }

    /**
     *  set _extType
     *  @param _extType which is the extension type of be object.
     */
    public void set_extType(java.lang.String _extType) {
        this._extType = _extType;
    }
        
    /**
     *  set firstName
     */
    public void setFirstName(java.lang.String firstName) {
        this.firstName = firstName;
    }

    /**
     *  set lastName
     */
    public void setLastName(java.lang.String lastName) {
        this.lastName = lastName;
    }

    /**
     *  set gender
     */
    public void setGender(Gender gender) {
        this.gender = gender;
    if (genderInt != gender.getIntValue()) {
            genderInt = gender.getIntValue();
        }
    }

    /**
     *  set int gender
     */
    private void setGenderInt(int intValue) {
        this.genderInt = intValue;
        if (genderInt != gender.getIntValue()) {
            gender = (Gender)ceService.getConstantEntity(Gender.ENTITY_NAME).getByIntValue(genderInt);
        }
    }

    /**
     *  set married
     */
    public void setMarried(boolean married) {
        this.married = married;
    }

    /**
     *  set identityCardId
     */
    public void setIdentityCardId(java.lang.String identityCardId) {
        this.identityCardId = identityCardId;
    }

    /**
     *  set discription
     */
    public void setDiscription(java.lang.String discription) {
        this.discription = discription;
    }

    /**
     *  set birthday
     */
    public void setBirthday(java.util.Date birthday) {
        this.birthday = birthday;
    }

    /**
     *  set birthdayStart
     */
    public void setBirthdayStart(java.util.Date birthdayStart) {
        this.birthdayStart = birthdayStart;
    }

    /**
     *  set birthdayEnd
     */
    public void setBirthdayEnd(java.util.Date birthdayEnd) {
        this.birthdayEnd = birthdayEnd;
    }

    /**
     *  set language
     */
    public void setLanguage(LanguageType language) {
        this.language = language;
    if (languageInt != language.getIntValue()) {
            languageInt = language.getIntValue();
        }
    }

    /**
     *  set int language
     */
    private void setLanguageInt(int intValue) {
        this.languageInt = intValue;
        if (languageInt != language.getIntValue()) {
            language = (LanguageType)ceService.getConstantEntity(LanguageType.ENTITY_NAME).getByIntValue(languageInt);
        }
    }

    /**
     *  set education
     */
    public void setEducation(EducationLevel education) {
        this.education = education;
    if (educationInt != education.getIntValue()) {
            educationInt = education.getIntValue();
        }
    }

    /**
     *  set int education
     */
    private void setEducationInt(int intValue) {
        this.educationInt = intValue;
        if (educationInt != education.getIntValue()) {
            education = (EducationLevel)ceService.getConstantEntity(EducationLevel.ENTITY_NAME).getByIntValue(educationInt);
        }
    }

    /**
     *  set major
     */
    public void setMajor(java.lang.String major) {
        this.major = major;
    }

    /**
     *  set addresses
     */
    public void setAddresses(java.util.List<IAddressInfo> addresses) {
        this.addresses = addresses;
    }

    /**
     *  set contacts
     */
    public void setContacts(java.util.List<IContactInfo> contacts) {
        this.contacts = contacts;
    }

    /**
     *  set comment
     */
    public void setComment(java.lang.String comment) {
        this.comment = comment;
    }

    
    /**
     * Check different according to primary key.
     */
    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl))
            return false;
        org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl o = (org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl)obj;
        
        boolean result = super.equals(obj);

        boolean eq = true;
        
        return result;
    }

    /**
     * Generate hashCode according to primary key.
     */
    public int hashCode() {
        
        int result = super.hashCode();

        return result;
    }
        
    
     /**
     * Gets the String format of the business entity.
     *
     * @return String the business entity in String format.
     */
    public  String  toString() {
        StringBuffer aBuf = new StringBuffer();
        aBuf.append("org.shaolin.vogerp.commonmodel.be.PersonalInfo");
    
        aBuf.append(" extends ");
        aBuf.append(super.toString());
        
        aBuf.append("enable=").append(_enable).append(", ");
        
        aBuf.append("firstName");
        aBuf.append("=");
        aBuf.append(firstName);
        aBuf.append(", ");
        
        aBuf.append("lastName");
        aBuf.append("=");
        aBuf.append(lastName);
        aBuf.append(", ");
        
        aBuf.append("gender");
        aBuf.append("=");
        aBuf.append(gender);
        aBuf.append(", ");
        
        aBuf.append("married");
        aBuf.append("=");
        aBuf.append(married);
        aBuf.append(", ");
        
        aBuf.append("identityCardId");
        aBuf.append("=");
        aBuf.append(identityCardId);
        aBuf.append(", ");
        
        aBuf.append("discription");
        aBuf.append("=");
        aBuf.append(discription);
        aBuf.append(", ");
        
        aBuf.append("birthday");
        aBuf.append("=");
        aBuf.append(birthday);
        aBuf.append(", ");
        
        aBuf.append("birthdayStart");
        aBuf.append("=");
        aBuf.append(birthdayStart);
        aBuf.append(", ");
        
        aBuf.append("birthdayEnd");
        aBuf.append("=");
        aBuf.append(birthdayEnd);
        aBuf.append(", ");
        
        aBuf.append("language");
        aBuf.append("=");
        aBuf.append(language);
        aBuf.append(", ");
        
        aBuf.append("education");
        aBuf.append("=");
        aBuf.append(education);
        aBuf.append(", ");
        
        aBuf.append("major");
        aBuf.append("=");
        aBuf.append(major);
        aBuf.append(", ");
        
        aBuf.append("comment");
        aBuf.append("=");
        aBuf.append(comment);
        aBuf.append(", ");
        
        return aBuf.toString();
    }
    
    
     /**
     * Gets list of MemberType.
     *
     * @return List     the list of MemberType.
     */
    public List<MemberType> getMemberList() {
        List<MemberType> memberTypeList = new ArrayList<MemberType>();
        
        List<MemberType> parentList = super.getMemberList();
        for(int i=0, n=parentList.size(); i<n; i++)
            memberTypeList.add(parentList.get(i));
            
        MemberType member = null;
        
        org.shaolin.bmdp.datamodel.bediagram.StringType firstNameBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for firstName
        member = new MemberType();
        member.setName("firstName");
        member.setDescription("null");
        member.setType(firstNameBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType lastNameBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for lastName
        member = new MemberType();
        member.setName("lastName");
        member.setDescription("null");
        member.setType(lastNameBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType genderBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType genderTargetEntity = new TargetEntityType();
        genderBEType.setTargetEntity(genderTargetEntity);
        genderTargetEntity.setEntityName("org.shaolin.vogerp.commonmodel.ce.Gender");
            
        //MemberType Define for gender
        member = new MemberType();
        member.setName("gender");
        member.setDescription("null");
        member.setType(genderBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BooleanType marriedBEType = new org.shaolin.bmdp.datamodel.bediagram.BooleanType();
    
        //MemberType Define for married
        member = new MemberType();
        member.setName("married");
        member.setDescription("null");
        member.setType(marriedBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType identityCardIdBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for identityCardId
        member = new MemberType();
        member.setName("identityCardId");
        member.setDescription("null");
        member.setType(identityCardIdBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType discriptionBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for discription
        member = new MemberType();
        member.setName("discription");
        member.setDescription("null");
        member.setType(discriptionBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType birthdayBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for birthday
        member = new MemberType();
        member.setName("birthday");
        member.setDescription("null");
        member.setType(birthdayBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType birthdayStartBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for birthdayStart
        member = new MemberType();
        member.setName("birthdayStart");
        member.setDescription("null");
        member.setType(birthdayStartBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.DateTimeType birthdayEndBEType = new org.shaolin.bmdp.datamodel.bediagram.DateTimeType();
    
        //MemberType Define for birthdayEnd
        member = new MemberType();
        member.setName("birthdayEnd");
        member.setDescription("null");
        member.setType(birthdayEndBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType languageBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType languageTargetEntity = new TargetEntityType();
        languageBEType.setTargetEntity(languageTargetEntity);
        languageTargetEntity.setEntityName("org.shaolin.vogerp.commonmodel.ce.LanguageType");
            
        //MemberType Define for language
        member = new MemberType();
        member.setName("language");
        member.setDescription("null");
        member.setType(languageBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.CEObjRefType educationBEType = new org.shaolin.bmdp.datamodel.bediagram.CEObjRefType();
    
        TargetEntityType educationTargetEntity = new TargetEntityType();
        educationBEType.setTargetEntity(educationTargetEntity);
        educationTargetEntity.setEntityName("org.shaolin.vogerp.commonmodel.ce.EducationLevel");
            
        //MemberType Define for education
        member = new MemberType();
        member.setName("education");
        member.setDescription("null");
        member.setType(educationBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType majorBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for major
        member = new MemberType();
        member.setName("major");
        member.setDescription("null");
        member.setType(majorBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BEListType addressesBEType = new org.shaolin.bmdp.datamodel.bediagram.BEListType();
    
        org.shaolin.bmdp.datamodel.bediagram.BEObjRefType addressesElementBEType = new org.shaolin.bmdp.datamodel.bediagram.BEObjRefType();
    
        TargetEntityType addressesElementTargetEntity = new TargetEntityType();
        addressesElementTargetEntity.setEntityName("org.shaolin.vogerp.commonmodel.be.AddressInfo");
        addressesElementBEType.setTargetEntity(addressesElementTargetEntity);
            
        addressesBEType.setElementType(addressesElementBEType);
            
        //MemberType Define for addresses
        member = new MemberType();
        member.setName("addresses");
        member.setDescription("null");
        member.setType(addressesBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.BEListType contactsBEType = new org.shaolin.bmdp.datamodel.bediagram.BEListType();
    
        org.shaolin.bmdp.datamodel.bediagram.BEObjRefType contactsElementBEType = new org.shaolin.bmdp.datamodel.bediagram.BEObjRefType();
    
        TargetEntityType contactsElementTargetEntity = new TargetEntityType();
        contactsElementTargetEntity.setEntityName("org.shaolin.vogerp.commonmodel.be.ContactInfo");
        contactsElementBEType.setTargetEntity(contactsElementTargetEntity);
            
        contactsBEType.setElementType(contactsElementBEType);
            
        //MemberType Define for contacts
        member = new MemberType();
        member.setName("contacts");
        member.setDescription("null");
        member.setType(contactsBEType);
        memberTypeList.add(member);
            
        org.shaolin.bmdp.datamodel.bediagram.StringType commentBEType = new org.shaolin.bmdp.datamodel.bediagram.StringType();
    
        //MemberType Define for comment
        member = new MemberType();
        member.setName("comment");
        member.setDescription("null");
        member.setType(commentBEType);
        memberTypeList.add(member);
            
        return memberTypeList;
    }
    
    public IPersonalInfo createEntity ()
    {
        return new PersonalInfoImpl();
    }
    
}

        

