<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.commonmodel.form.ExpressQuery</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="query">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="query-20161216-2211">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.commonmodel.IExpressService;
        { 
            IExpressService expressService = (IExpressService)AppContext.get().getService(IExpressService.class);
            String result = expressService.query(@page.getHidden("idUI").getValue(), @page.getLabel("expressNumberUI").getValue());
            @page.getTextArea("expressRecordUI").setValue(result);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="idUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
      <ns2:component xsi:type="ns2:UILabelType" UIID="expressTypeUI">
        <ns2:UIStyle></ns2:UIStyle>
        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
          <ns2:key>快递公司</ns2:key>
        </ns2:widgetLabel>
      </ns2:component>
      <ns2:component xsi:type="ns2:UILabelType" UIID="expressNumberUI">
        <ns2:UIStyle></ns2:UIStyle>
        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
          <ns2:key>快递号</ns2:key>
        </ns2:widgetLabel>
      </ns2:component>
      <ns2:component xsi:type="ns2:UITextAreaType" UIID="expressRecordUI">
        <ns2:UIStyle></ns2:UIStyle>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>expressTypeUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL" cellUIClass=""></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>expressNumberUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL" cellUIClass=""></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>expressRecordUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL" cellUIClass=""></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
        { 
           eventsource = this.expressNumberUI;
           UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"query-20161216-2211",UIMaster.getValue(eventsource),o.__entityName);
        }
    ]]></ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="expressType" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="expressNumber" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="idUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="expressType" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="expressTypeUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="StringData">
         <ns2:expression>
          <expressionString>
          import org.shaolin.bmdp.runtime.ce.CEUtil;
          import org.shaolin.bmdp.runtime.spi.IServerServiceManager;
          {
             return IServerServiceManager.INSTANCE.getConstantService().getConstantEntity("ExpressVendor").get($expressType).getDisplayName();
          }</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping2">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
      <ns2:UIComponent componentPath="expressNumberUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="expressNumber" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>