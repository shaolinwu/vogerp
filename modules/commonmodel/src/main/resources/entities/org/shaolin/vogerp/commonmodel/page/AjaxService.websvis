<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:WebService xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.commonmodel.page.AjaxService</entityName>
	<systemVersion>0</systemVersion>
	<ns2:service name="functionList">
		<ns2:exp>
			<expressionString><![CDATA[
      import java.util.List;
        import java.util.ArrayList;
        import org.shaolin.vogerp.commonmodel.be.ModuleGroupImpl;
        import org.shaolin.vogerp.commonmodel.dao.ModularityModel;
        import org.shaolin.uimaster.page.ajax.TreeItem;
        import org.shaolin.uimaster.page.ajax.TreeItem.LinkAttribute;
        import org.shaolin.uimaster.page.ajax.TreeConditions;
        {
               ModuleGroupImpl condition = new ModuleGroupImpl();
               List all = ModularityModel.INSTANCE.searchModuleGroup(condition, null, 0, -1);
               if (all.size() == 0) {
                   throw new Exception("AdminConsoleTree data is not initialized!");
               } 
               // find root
               ModuleGroupImpl root = null;
               for (int i=0;i<all.size();i++) {
                ModuleGroupImpl mg = (ModuleGroupImpl)all.get(i);
                if ("uimaster".equals(mg.getName())) {
                    root = mg;
                    break;
                }
               }
               if (root == null) {
                   throw new Exception("Please give an empty name as the application root node!");
               }
               
               // list the nodes under the root node.
               ArrayList result = new ArrayList();
               for (int i=0;i<all.size();i++) {
                ModuleGroupImpl mg = (ModuleGroupImpl)all.get(i);
                if (mg.getParentId() != root.getId()) {
                 continue;
                }
                TreeItem gitem = new TreeItem();
                gitem.setId(""+mg.getId());
                gitem.setText(mg.getName());
                gitem.setIcon(mg.getSmallIcon());
                gitem.setState(new org.shaolin.uimaster.page.ajax.TreeItem.State());
                gitem.setA_attr(new org.shaolin.uimaster.page.ajax.TreeItem.LinkAttribute(mg.getAccessURL()));
                result.add(gitem);
                
                // find children
                for (int j=0;j<all.size();j++) {
                   if (mg.getId() == ((ModuleGroupImpl)all.get(j)).getParentId()) {
                     ModuleGroupImpl m = (ModuleGroupImpl)all.get(j);
                     TreeItem item = new TreeItem();
                     item.setId(""+m.getId());
                     item.setText(m.getName());
                     item.setA_attr(new org.shaolin.uimaster.page.ajax.TreeItem.LinkAttribute(m.getAccessURL()));
                     item.setState(new org.shaolin.uimaster.page.ajax.TreeItem.State());
                     item.setIcon(m.getSmallIcon());
                     
                     gitem.getChildren().add(item);
                    }
                 }
              }
            return result;
        }
     ]]></expressionString>
		</ns2:exp>
	</ns2:service>
</ns2:WebService>
