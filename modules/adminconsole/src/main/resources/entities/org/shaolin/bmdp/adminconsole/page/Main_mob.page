<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.bmdp.adminconsole.page.Main_mob</entityName>
	<systemVersion>0</systemVersion>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
		<ns2:eventHandler functionName="Submit"></ns2:eventHandler>
		<ns2:eventHandler functionName="logout">
			<ns2:ops xsi:type="ns2:OpCallAjaxType" name="logout-945221342">
		      <ns2:exp>
		        <expressionString><![CDATA[
		        import org.shaolin.uimaster.page.AjaxContext;
		        import org.shaolin.uimaster.page.ajax.*;
		        import org.shaolin.vogerp.commonmodel.IUserService;
		        import org.shaolin.bmdp.runtime.AppContext;
		        { 
		            IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
		            userService.logout(@page.getRequest().getSession());
		            @page.executeJavaScript("window.location.reload();");
		        }
		        ]]></expressionString>
		      </ns2:exp>
		    </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="clickTreeNode">
			<ns2:ops xsi:type="ns2:OpExecuteScriptType">
				<ns2:expressionString><![CDATA[
				{
				    var tree = $(eventsource).jstree(true);
                    var selectedId = tree.get_selected();
                    var node = tree.get_node(selectedId);
                    if (node && node.a_attr.href != window.location.href+"#") {
                        //TODO the maximum tabs allowed to be opened.
                        if (this.tabCounter >= 10) {
                           alert("请节约使用系统资源，关闭一些无需使用的页面，谢谢！");
                        }
                        $("#div-bottomPanel-2_1").hide('slide', {direction: 'left'}, 500);
						                  this.functionsTab.addFrameTab(node.text, node.a_attr.href);
                        this.tabCounter = this.functionsTab.getTabLength();
                        sideBar("middlePanel", "treePanel", "pagePanel");
                    }
				}
				]]></ns2:expressionString>
			</ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="showUserInfo">
		    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
                <ns2:expressionString><![CDATA[
                {
                    $("#div-bottomPanel-0_1").css("left", $(this.middlePanel).offset().left);
																				$("#div-bottomPanel-0_1").css("top", $(this.middlePanel).offset().top);
					
                    if ($("#div-bottomPanel-0_1").css("display") == "none") {
                        $("#div-bottomPanel-0_1").show('slide', {direction: 'left'}, 1000);
                    } else {
                        $("#div-bottomPanel-0_1").hide('slide', {direction: 'left'}, 1000);
                    }
                }
                ]]></ns2:expressionString>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="startMenuIcon">
		    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
                <ns2:expressionString><![CDATA[
                {
                    $("#div-bottomPanel-2_1").css("left", $(this.middlePanel).offset().left);
					               $("#div-bottomPanel-2_1").css("top", $(this.middlePanel).offset().top);
				
                    if ($("#div-bottomPanel-2_1").css("display") == "none") {
                        $("#div-bottomPanel-2_1").show('slide', {direction: 'left'}, 1000);
                    } else {
                        $("#div-bottomPanel-2_1").hide('slide', {direction: 'left'}, 1000);
                    }
                }
                ]]></ns2:expressionString>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>20</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>400</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>20</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UIPanelType" UIID="topPanel">
				<ns2:UISkin xsi:type="ns2:UISkinType">
					<ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
				</ns2:UISkin>
				<ns2:layout xsi:type="ns2:TableLayoutType">
					<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					<ns2:columnWidthWeight>-1.0</ns2:columnWidthWeight>
					<ns2:columnWidthWeight>-1.0</ns2:columnWidthWeight>
				</ns2:layout>
				<ns2:component xsi:type="ns2:UIImageType" UIID="vogerplogo">
		        <ns2:title xsi:type="ns2:StringPropertyType">
		            <ns2:value>Vogue ERP</ns2:value>
		        </ns2:title>
		        <ns2:src xsi:type="ns2:ImagePropertyType">
		            <ns2:location>/vogerp.jpg</ns2:location>
		        </ns2:src>
		  </ns2:component>
				<ns2:layoutConstraint>
							<ns2:componentId>vogerplogo</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="0" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
			</ns2:component>
			<ns2:component xsi:type="ns2:UIPanelType" UIID="middlePanel">
				<ns2:layout xsi:type="ns2:TableLayoutType">
					<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
				</ns2:layout>
				<ns2:component xsi:type="ns2:UIPanelType" UIID="pagePanel">
					<ns2:UISkin xsi:type="ns2:UISkinType">
						<ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
						<ns2:param name="text">
							<ns2:value xsi:type="ns2:StringPropertyType">
								<ns2:value></ns2:value>
							</ns2:value>
						</ns2:param>
					</ns2:UISkin>
					<ns2:layout xsi:type="ns2:TableLayoutType">
						<ns2:rowHeightWeight>1.0</ns2:rowHeightWeight>
						<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
					</ns2:layout>
					<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
					</ns2:component>
					<ns2:layoutConstraint>
						<ns2:componentId>functionsTab</ns2:componentId>
						<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
							x="0" y="0" align="FULL"></ns2:constraint>
					</ns2:layoutConstraint>
				</ns2:component>
				<ns2:layoutConstraint>
					<ns2:componentId>pagePanel</ns2:componentId>
					<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
						x="0" y="0" align="FULL"></ns2:constraint>
				</ns2:layoutConstraint>
			</ns2:component>
			<ns2:component xsi:type="ns2:UIPanelType" UIID="bottomPanel">
						<ns2:UISkin xsi:type="ns2:UISkinType">
							<ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
						</ns2:UISkin>
						<ns2:layout xsi:type="ns2:TableLayoutType">
							<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
							<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
							<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
							<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
							<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
							<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
						</ns2:layout>
		    <ns2:component xsi:type="ns2:UIImageType" UIID="startMenuIcon">
		        <ns2:title xsi:type="ns2:StringPropertyType">
		            <ns2:value>Start Menu</ns2:value>
		        </ns2:title>
		        <ns2:src xsi:type="ns2:ImagePropertyType">
		            <ns2:location>admin/tree/startmenu.gif</ns2:location>
		        </ns2:src>
		        <ns2:EventListener xsi:type="ns2:ClickListenerType">
		             <ns2:handler functionName="showStartMenu" />
		         </ns2:EventListener>
		    </ns2:component>
		    <ns2:component xsi:type="ns2:UIPanelType" UIID="treePanel">
							<ns2:UISkin xsi:type="ns2:UISkinType">
								<ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
								<ns2:param name="text">
									<ns2:value xsi:type="ns2:StringPropertyType">
										<ns2:value></ns2:value>
									</ns2:value>
								</ns2:param>
							</ns2:UISkin>
							<ns2:layout xsi:type="ns2:TableLayoutType">
								<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
								<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
							</ns2:layout>
							<ns2:component xsi:type="ns2:UIWebTreeType" UIID="functionTree">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>Functions Overview</ns2:value>
								</ns2:title>
								<ns2:opened>true</ns2:opened>
								<ns2:nodeIcon>/images/nodeicon.jpg</ns2:nodeIcon>
								<ns2:itemIcon>/images/itemicon.jpg</ns2:itemIcon>
								<ns2:selectMode>Multiple</ns2:selectMode>
								<ns2:expandTreeEvent>expandTree</ns2:expandTreeEvent>
		      <ns2:selectNodeEvent>clickTreeNode</ns2:selectNodeEvent>
								<ns2:initExpression xsi:type="ns2:ExpressionPropertyType">
									<ns2:expression xsi:type="ns2:ExpressionType">
										<ns2:expressionString><![CDATA[
										import java.util.List;
										import java.util.ArrayList;
										import org.shaolin.vogerp.commonmodel.be.ModuleGroupImpl;
		        import org.shaolin.vogerp.commonmodel.dao.ModularityModel;
		        import org.shaolin.uimaster.page.ajax.TreeItem;
		        import org.shaolin.uimaster.page.ajax.TreeItem.LinkAttribute;
										import org.shaolin.uimaster.page.ajax.TreeConditions;
										{
											      ModuleGroupImpl condition = new ModuleGroupImpl();
									        List all = ModularityModel.INSTANCE.searchModuleGroup(condition, null, 0, -1);
									        if (all.size() == 0) {
									            throw new Exception("AdminConsoleTree data is not initialized!");
									        } 
									        // find root
									        ModuleGroupImpl root = null;
									        for (int i=0;i<all.size();i++) {
									        	ModuleGroupImpl mg = (ModuleGroupImpl)all.get(i);
									        	if (mg.getName().length() == 0) {
									        		root = mg;
									        	    break;
									        	}
									        }
									        if (root == null) {
									            throw new Exception("Please give an empty name as the application root node!");
									        }
									        
									        // list the nodes under the root node.
											      ArrayList result = new ArrayList();
									        for (int i=0;i<all.size();i++) {
								                ModuleGroupImpl mg = (ModuleGroupImpl)all.get(i);
								                if (mg.getParentId() != root.getGroupId()) {
								                	continue;
								                }
		                TreeItem gitem = new TreeItem();
		                gitem.setId("mg_" + mg.getGroupId());
		                gitem.setText(mg.getName());
		                gitem.setIcon(mg.getSmallIcon());
		                gitem.setState(new org.shaolin.uimaster.page.ajax.TreeItem.State());
										        gitem.setA_attr(new org.shaolin.uimaster.page.ajax.TreeItem.LinkAttribute(mg.getAccessURL()));
		                result.add(gitem);
		                
		                // find children
		                for (int j=0;j<all.size();j++) {
		                	  if (mg.getGroupId() == ((ModuleGroupImpl)all.get(j)).getParentId()) {
		                		   ModuleGroupImpl m = (ModuleGroupImpl)all.get(j);
											            TreeItem item = new TreeItem();
											            item.setId("mg_" + m.getGroupId());
											            item.setText(m.getName());
											            item.setA_attr(new org.shaolin.uimaster.page.ajax.TreeItem.LinkAttribute(m.getAccessURL()));
											            item.setState(new org.shaolin.uimaster.page.ajax.TreeItem.State());
											            item.setIcon(m.getSmallIcon());
											            
											            gitem.getChildren().add(item);
		                    }
		                 }
									       }
											return result;
										}]]></ns2:expressionString>
									</ns2:expression>
								</ns2:initExpression>
					</ns2:component>
					<ns2:layoutConstraint>
						<ns2:componentId>functionTree</ns2:componentId>
						<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
							x="0" y="0" align="FULL"></ns2:constraint>
					</ns2:layoutConstraint>
				</ns2:component>
				  <ns2:component xsi:type="ns2:UIImageType" UIID="userIcon">
		        <ns2:title xsi:type="ns2:StringPropertyType">
		            <ns2:value>User Information</ns2:value>
		        </ns2:title>
		        <ns2:src xsi:type="ns2:ImagePropertyType">
		            <ns2:location>admin/tree/manager.png</ns2:location>
		        </ns2:src>
		        <ns2:EventListener xsi:type="ns2:ClickListenerType">
		             <ns2:handler functionName="showUserInfo" />
		         </ns2:EventListener>
		    </ns2:component>
		    <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="userForm">
		        <ns2:referenceEntity entityName="org.shaolin.vogerp.commonmodel.form.UserAccount"></ns2:referenceEntity>
		    </ns2:component>
		    <ns2:component xsi:type="ns2:UIImageType" UIID="userLogout">
		        <ns2:title xsi:type="ns2:StringPropertyType">
		            <ns2:value>Logout</ns2:value>
		        </ns2:title>
		        <ns2:src xsi:type="ns2:ImagePropertyType">
		            <ns2:location>admin/logout.png</ns2:location>
		        </ns2:src>
		        <ns2:EventListener xsi:type="ns2:ClickListenerType">
		             <ns2:handler functionName="logout" />
		         </ns2:EventListener>
		    </ns2:component>
						<ns2:layoutConstraint>
							<ns2:componentId>userIcon</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="0" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
						<ns2:layoutConstraint>
        <ns2:componentId>userForm</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
            x="0" y="1" align="FULL" cellUIClass="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"></ns2:constraint>
		     </ns2:layoutConstraint>
						<ns2:layoutConstraint>
							<ns2:componentId>startMenuIcon</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="2" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
				  <ns2:layoutConstraint>
							<ns2:componentId>treePanel</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="2" y="1" align="FULL" cellUIClass="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"></ns2:constraint>
						</ns2:layoutConstraint>
						<ns2:layoutConstraint>
							<ns2:componentId>userLogout</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="3" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
			</ns2:component>
			<ns2:layoutConstraint>
					<ns2:componentId>topPanel</ns2:componentId>
					<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
						x="0" y="0" align="FULL"></ns2:constraint>
				</ns2:layoutConstraint>
				<ns2:layoutConstraint>
					<ns2:componentId>middlePanel</ns2:componentId>
					<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
						x="0" y="1" align="FULL"></ns2:constraint>
				</ns2:layoutConstraint>
				<ns2:layoutConstraint>
					<ns2:componentId>bottomPanel</ns2:componentId>
					<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
						x="0" y="2" align="FULL"></ns2:constraint>
				</ns2:layoutConstraint>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
		<ns2:DataEntity category="JavaClass" name="treeCondition" scope="Internal">
			<ns2:type entityName="org.shaolin.uimaster.page.ajax.TreeConditions" />
			<ns2:default><ns2:expressionString><![CDATA[org.shaolin.uimaster.page.ajax.TreeConditions.createCondition()]]></ns2:expressionString></ns2:default>
		</ns2:DataEntity>
		<ns2:DataEntity category="BusinessEntity" name="userAccount" scope="In">
            <ns2:type entityName="org.shaolin.vogerp.commonmodel.be.PersonalAccount" />
        </ns2:DataEntity>
		<ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
	      <ns2:mappingRule entityName="org.shaolin.vogerp.commonmodel.form.UserAccount"></ns2:mappingRule>
	      <ns2:UIComponent componentPath="userForm" paramName="UIWidgetType"></ns2:UIComponent>
	      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="userAccount" paramName="beObject"></ns2:DataComponent>
	      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="editable">
	        <ns2:expression>
	          <expressionString>false</expressionString>
	        </ns2:expression>
            </ns2:DataComponent>
	    </ns2:ComponentMapping>
	</ns2:ODMapping>
	<ns2:in>
		<ns2:serverOperation xsi:type="ns2:ExpressionParamType">
			<ns2:expressionString><![CDATA[
			import org.shaolin.bmdp.runtime.AppContext;
		    import org.shaolin.vogerp.commonmodel.IUserService;
		    import org.shaolin.vogerp.commonmodel.be.PersonalAccountImpl;
		    import org.shaolin.uimaster.page.flow.WebflowConstants;
			{
			  $userAccount = (PersonalAccountImpl)@odContext.getRequest().getSession().getAttribute(WebflowConstants.USER_SESSION_KEY);
			  @odContext.executeAllMappings();
			}]]></ns2:expressionString>
		</ns2:serverOperation>
		<ns2:clientAction xsi:type="ns2:ExpressionParamType">
			<ns2:expressionString><![CDATA[
			{
			  this.tabCounter = this.functionsTab.getTabLength(); // performance counter
			  //$('#functionTree').on('select_node.jstree', function (e, data) {
			    //alert(data.selected.length);
			  //});
			  
			}]]></ns2:expressionString>
		</ns2:clientAction>
	</ns2:in>
</ns2:UIPage>
