<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.ecommercial.page.OnlineOrderList_mob</entityName>
	<systemVersion>0</systemVersion>
	<description>抢单达人页主</description>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
	    <ns2:eventHandler functionName="openGoldenOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openGoldenOrder-20160124-6546">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                        
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("saleOrder", "org.shaolin.vogerp.ecommercial.form.GoldenOrder", input);
                        @page.addElement(form);
                        
                        form.openInWindows("采购订单详情", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openSaleGoldenOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openSaleGoldenOrder-20160124-6546">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                        
                        Table orderInfoTable = (Table)@page.getElement("gsaleOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("saleOrder", "org.shaolin.vogerp.ecommercial.form.GoldenOrder", input);
                        @page.addElement(form);
                        
                        form.openInWindows("销售订单详情", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openRentOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openRentOrder-20160124-15435">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                        
                        Table orderInfoTable = (Table)@page.getElement("rentOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("gorderForm", "org.shaolin.vogerp.ecommercial.form.RentOrLoanOrder", input);
                        @page.addElement(form);
                        
                        form.openInWindows("出租订单详情", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openLoanOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openLoanOrder-20160124-15435">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                        
                        Table orderInfoTable = (Table)@page.getElement("loanOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("gorderForm", "org.shaolin.vogerp.ecommercial.form.RentOrLoanOrder", input);
                        @page.addElement(form);
                        
                        form.openInWindows("求租订单详情", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<ns2:eventHandler functionName="takeGoldenOrder">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="takeGoldenOrder-20160124-1333645">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                        
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        if (defaultUser.getStatus() != OrderStatusType.PUBLISHED) {
                           @page.executeJavaScript("alert(\"\u8BE5\u8BA2\u5355\u4E0D\u53EF\u7ADF\u4EF7\");");
                           return;
                        }
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("saleOrder", "org.shaolin.vogerp.ecommercial.form.GOOfferPrice", input);
                        @page.addElement(form);
                        
                        form.openInWindows("\u7ADF\u4EF7", new TableCallBack("goldenOrderTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="takeGSaleOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="takeGSaleOrder-20160524-1333768">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                     
                        Table orderInfoTable = (Table)@page.getElement("gsaleOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        if (defaultUser.getStatus() != OrderStatusType.PUBLISHED) {
                           @page.executeJavaScript("alert(\"\u8BE5\u8BA2\u5355\u4E0D\u53EF\u7ADF\u4EF7\");");
                           return;
                        }
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("gorderForm", "org.shaolin.vogerp.ecommercial.form.GOOfferPrice", input);
                        @page.addElement(form);
                        
                        form.openInWindows("竟价", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<ns2:eventHandler functionName="publishOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="publishOrder-20160124-1333654">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
                        if (!userService.checkUserOnline(@page.getRequest().getSession())) {
                            @page.executeJavaScript("UIMaster.util.forwardToPage(\"/uimaster/jsp/index.jsp\");");
                            return;
                        }
                        
                        @page.executeJavaScript("javascript:alert('link to the purchase order.');");
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
		   <ns2:UISkin xsi:type="ns2:UISkinType">
		     <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
		     <ns2:param name="text">
		         <ns2:value xsi:type="ns2:StringPropertyType">
		             <ns2:value></ns2:value>
		         </ns2:value>
		     </ns2:param>
		   </ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UIHiddenType" UIID="defaultAction">
            </ns2:component>
            <ns2:component xsi:type="ns2:UIPanelType" UIID="searchConditionPanel">
              <ns2:layout xsi:type="ns2:TableLayoutType">
                <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
              </ns2:layout>
              <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="searchBar">
                <ns2:referenceEntity entityName="org.shaolin.vogerp.ecommercial.form.SearchBar_mob" />
              </ns2:component>
              <ns2:layoutConstraint>
                <ns2:componentId>searchBar</ns2:componentId>
                <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                    x="0" y="0" align="FULL"></ns2:constraint>
              </ns2:layoutConstraint>
            </ns2:component> 
            
            <ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
                <ns2:ajaxLoad>true</ns2:ajaxLoad>
                <ns2:tab uiid="goldenOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>采购订单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="goldenOrderInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="goldenOrderTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.GoldenOrder</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Normal</ns2:selectMode>
		                    <ns2:defaultRowSize>5</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext;
									import org.shaolin.bmdp.runtime.spi.IAppServiceManager;
									import org.shaolin.bmdp.runtime.spi.IServerServiceManager;
									import org.shaolin.vogerp.ecommercial.ce.*;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new GoldenOrderImpl());
		                                     $tableCondition.setCount(5);
		                                     $tableCondition.addOrder("statusInt", true);
		                                     $tableCondition.addOrder("createDate", false);
		                                  }
		                                  // switch to uimaster node.
		                                  IAppServiceManager masterApp = (IAppServiceManager)IServerServiceManager.INSTANCE.getApplication(
		                                                              IServerServiceManager.INSTANCE.getMasterNodeName());
								          IAppServiceManager currentContext = AppContext.get();
								          try {
								              AppContext.register(masterApp);
			                                  GoldenOrderImpl condition = (GoldenOrderImpl)$tableCondition.getCondition();
			                                  condition.setStatus(OrderStatusType.PUBLISHED);
			                                  condition.setType(GoldenOrderType.PURCHASE);
			                                  return OrderModel.INSTANCE.searchGoldenOrder(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                                  } finally {
								              AppContext.register(currentContext);
								          }
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>小图标</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.photos</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Image</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
					                    import org.shaolin.bmdp.runtime.Registry;
					                    import org.shaolin.uimaster.page.WebConfig;
					                    import org.shaolin.uimaster.page.widgets.HTMLImageType;
					                    { 
					                        return HTMLImageType.getFirst($rowBE.getPhotos()); 
					                    }
                                        ]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                            </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
			                    <ns2:title xsi:type="ns2:StringPropertyType">
			                        <ns2:value>订单详情</ns2:value>
			                    </ns2:title>
			                    <ns2:beFieldId>rowBE.id</ns2:beFieldId>
			                    <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>HTMLItem</ns2:type></ns2:uiType>
			                    <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
			                        <ns2:expression xsi:type="ns2:ExpressionType">
			                            <ns2:expressionString><![CDATA[
			                            import java.util.HashMap;
			                            import org.shaolin.uimaster.page.AjaxContext;
			                            import org.shaolin.uimaster.page.AjaxActionHelper;
			                            import org.shaolin.uimaster.page.ajax.*;
			                            import org.shaolin.uimaster.page.ajax.json.IDataItem;
			                            import org.shaolin.vogerp.productmodel.be.ProductImpl;
			                            {
			                                HashMap input = new HashMap();
			                                input.put("beObject", $rowBE);
			                                RefForm form = new RefForm("gOrderForm"+$rowBE.getId(), 
			                                  "org.shaolin.vogerp.ecommercial.form.GoldenOrderOverView_mob", input);
			                                StringBuffer sb = new StringBuffer();
			                                sb.append(form.generateHTML());
			                                sb.append("<script type=\"text/javascript\">UIMaster.pageInitFunctions.push(function(){");
			                                sb.append("getElementListSingle(document.getElementById(\"productBasicForm");
			                                sb.append($rowBE.getId());
			                                sb.append(".Form\"));\n");
			                                sb.append(form.generateJS());
			                                sb.append("});</script>");
			                                return sb.toString();
			                            }]]></ns2:expressionString>
			                        </ns2:expression>
			                    </ns2:rowExpression>
			                    <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
			                        <ns2:expression xsi:type="ns2:ExpressionType">
			                            <ns2:expressionString><![CDATA[
			                            import org.shaolin.bmdp.runtime.AppContext;
			                            {
			                            }]]></ns2:expressionString>
			                        </ns2:expression>
			                    </ns2:updateCondition>
			                </ns2:column>
		                    <ns2:defaultActions>
		                       <ns2:defaultOpenAction>openGoldenOrder</ns2:defaultOpenAction>
		                    </ns2:defaultActions>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>goldenOrderTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                
                <ns2:tab uiid="gsaleOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>销售订单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="gsaleOrderInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="gsaleOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.GoldenOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext;
                                    import org.shaolin.bmdp.runtime.spi.IAppServiceManager;
                                    import org.shaolin.bmdp.runtime.spi.IServerServiceManager;
                                    import org.shaolin.vogerp.ecommercial.ce.*;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new GoldenOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("statusInt", true);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          // switch to uimaster node.
                                          IAppServiceManager masterApp = (IAppServiceManager)IServerServiceManager.INSTANCE.getApplication(
                                                                      IServerServiceManager.INSTANCE.getMasterNodeName());
                                          IAppServiceManager currentContext = AppContext.get();
                                          try {
                                              AppContext.register(masterApp);
                                              GoldenOrderImpl condition = (GoldenOrderImpl)$tableCondition.getCondition();
                                              condition.setStatus(OrderStatusType.PUBLISHED);
                                              condition.setType(GoldenOrderType.SALE);
                                              return OrderModel.INSTANCE.searchGoldenOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                          } finally {
                                              AppContext.register(currentContext);
                                          }
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>小图标</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.photos</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Image</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.bmdp.runtime.Registry;
                                        import org.shaolin.uimaster.page.WebConfig;
                                        import org.shaolin.uimaster.page.widgets.HTMLImageType;
                                        { 
                                            return HTMLImageType.getFirst($rowBE.getPhotos()); 
                                        }
                                        ]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>订单详情</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.id</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>HTMLItem</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import java.util.HashMap;
                                        import org.shaolin.uimaster.page.AjaxContext;
                                        import org.shaolin.uimaster.page.AjaxActionHelper;
                                        import org.shaolin.uimaster.page.ajax.*;
                                        import org.shaolin.uimaster.page.ajax.json.IDataItem;
                                        import org.shaolin.vogerp.productmodel.be.ProductImpl;
                                        {
                                            HashMap input = new HashMap();
                                            input.put("beObject", $rowBE);
                                            RefForm form = new RefForm("gsOrderForm"+$rowBE.getId(), 
                                              "org.shaolin.vogerp.ecommercial.form.GoldenOrderOverView_mob", input);
                                            StringBuffer sb = new StringBuffer();
                                            sb.append(form.generateHTML());
                                            sb.append("<script type=\"text/javascript\">UIMaster.pageInitFunctions.push(function(){");
                                            sb.append("getElementListSingle(document.getElementById(\"productBasicForm");
                                            sb.append($rowBE.getId());
                                            sb.append(".Form\"));\n");
                                            sb.append(form.generateJS());
                                            sb.append("});</script>");
                                            return sb.toString();
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        {
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultOpenAction>openSaleGoldenOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>gsaleOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                
                <ns2:tab uiid="rentOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>出租设备</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="rentOrderInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="rentOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.RentOrLoanOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext;
                                    import org.shaolin.bmdp.runtime.spi.IAppServiceManager;
                                    import org.shaolin.bmdp.runtime.spi.IServerServiceManager;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new RentOrLoanOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("statusInt", true);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          // switch to uimaster node.
                                          IAppServiceManager masterApp = (IAppServiceManager)IServerServiceManager.INSTANCE.getApplication(
                                                                      IServerServiceManager.INSTANCE.getMasterNodeName());
                                          IAppServiceManager currentContext = AppContext.get();
                                          try {
                                              AppContext.register(masterApp);
                                              RentOrLoanOrderImpl condition = (RentOrLoanOrderImpl)$tableCondition.getCondition();
                                              condition.setType(RentOrLoanOrderType.RENT);
                                              return OrderModel.INSTANCE.searchRentOrLoanOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                          } finally {
                                              AppContext.register(currentContext);
                                          }
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>小图标</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.photos</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Image</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.bmdp.runtime.Registry;
                                        import org.shaolin.uimaster.page.WebConfig;
                                        import org.shaolin.uimaster.page.widgets.HTMLImageType;
                                        { 
                                            return HTMLImageType.getFirst($rowBE.getPhotos()); 
                                        }
                                        ]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>订单详情</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.id</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>HTMLItem</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import java.util.HashMap;
                                        import org.shaolin.uimaster.page.AjaxContext;
                                        import org.shaolin.uimaster.page.AjaxActionHelper;
                                        import org.shaolin.uimaster.page.ajax.*;
                                        import org.shaolin.uimaster.page.ajax.json.IDataItem;
                                        import org.shaolin.vogerp.productmodel.be.ProductImpl;
                                        {
                                            HashMap input = new HashMap();
                                            input.put("beObject", $rowBE);
                                            RefForm form = new RefForm("rOrderForm"+$rowBE.getId(), 
                                              "org.shaolin.vogerp.ecommercial.form.RentOrderOverView_mob", input);
                                            StringBuffer sb = new StringBuffer();
                                            sb.append(form.generateHTML());
                                            sb.append("<script type=\"text/javascript\">UIMaster.pageInitFunctions.push(function(){");
                                            sb.append("getElementListSingle(document.getElementById(\"productBasicForm");
                                            sb.append($rowBE.getId());
                                            sb.append(".Form\"));\n");
                                            sb.append(form.generateJS());
                                            sb.append("});</script>");
                                            return sb.toString();
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        {
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                               <ns2:defaultOpenAction>openRentOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>rentOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                
                <ns2:tab uiid="loanOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>求租设备</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="loanOrderInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="loanOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.RentOrLoanOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext;
                                    import org.shaolin.bmdp.runtime.spi.IAppServiceManager;
                                    import org.shaolin.bmdp.runtime.spi.IServerServiceManager;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new RentOrLoanOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("statusInt", true);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          // switch to uimaster node.
                                          IAppServiceManager masterApp = (IAppServiceManager)IServerServiceManager.INSTANCE.getApplication(
                                                                      IServerServiceManager.INSTANCE.getMasterNodeName());
                                          IAppServiceManager currentContext = AppContext.get();
                                          try {
                                              AppContext.register(masterApp);
                                              RentOrLoanOrderImpl condition = (RentOrLoanOrderImpl)$tableCondition.getCondition();
                                              condition.setType(RentOrLoanOrderType.LOAN);
                                              return OrderModel.INSTANCE.searchRentOrLoanOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                          } finally {
                                              AppContext.register(currentContext);
                                          }
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>小图标</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.photos</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Image</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.bmdp.runtime.Registry;
                                        import org.shaolin.uimaster.page.WebConfig;
                                        import org.shaolin.uimaster.page.widgets.HTMLImageType;
                                        { 
                                            return HTMLImageType.getFirst($rowBE.getPhotos()); 
                                        }
                                        ]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>订单详情</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.id</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>HTMLItem</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import java.util.HashMap;
                                        import org.shaolin.uimaster.page.AjaxContext;
                                        import org.shaolin.uimaster.page.AjaxActionHelper;
                                        import org.shaolin.uimaster.page.ajax.*;
                                        import org.shaolin.uimaster.page.ajax.json.IDataItem;
                                        import org.shaolin.vogerp.productmodel.be.ProductImpl;
                                        {
                                            HashMap input = new HashMap();
                                            input.put("beObject", $rowBE);
                                            RefForm form = new RefForm("rrOrderForm"+$rowBE.getId(), 
                                              "org.shaolin.vogerp.ecommercial.form.RentOrderOverView_mob", input);
                                            StringBuffer sb = new StringBuffer();
                                            sb.append(form.generateHTML());
                                            sb.append("<script type=\"text/javascript\">UIMaster.pageInitFunctions.push(function(){");
                                            sb.append("getElementListSingle(document.getElementById(\"productBasicForm");
                                            sb.append($rowBE.getId());
                                            sb.append(".Form\"));\n");
                                            sb.append(form.generateJS());
                                            sb.append("});</script>");
                                            return sb.toString();
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        {
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultOpenAction>openLoanOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>loanOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
            </ns2:component>
           <ns2:layoutConstraint>
             <ns2:componentId>searchConditionPanel</ns2:componentId>
             <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                 x="0" y="0" align="FULL"></ns2:constraint>
             </ns2:layoutConstraint>
	      <ns2:layoutConstraint>
             <ns2:componentId>functionsTab</ns2:componentId>
             <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                 x="0" y="1" align="FULL"></ns2:constraint>
         </ns2:layoutConstraint>
         <ns2:constructorCode><![CDATA[
	          {
			UIMaster.require("/js/org/shaolin/vogerp/ecommercial/form/GoldenOrderOverView_mob.js");
			UIMaster.require("/js/org/shaolin/vogerp/ecommercial/form/RentOrderOverView_mob.js");
			}
	         ]]></ns2:constructorCode>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
            <ns2:mappingRule entityName="org.shaolin.vogerp.ecommercial.form.SearchBar_mob"></ns2:mappingRule>
            <ns2:UIComponent componentPath="searchBar" paramName="UIWidgetType"></ns2:UIComponent>
        </ns2:ComponentMapping>
	</ns2:ODMapping>
	<ns2:in>
	    <ns2:clientAction xsi:type="ns2:ExpressionType">
			<ns2:expressionString><![CDATA[
			{
			}]]></ns2:expressionString>
		</ns2:clientAction>
	</ns2:in>
</ns2:UIPage>
