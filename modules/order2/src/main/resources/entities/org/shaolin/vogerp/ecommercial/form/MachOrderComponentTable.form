<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.ecommercial.form.MachOrderComponentTable</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="add">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="add-20160325-112849">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
        import org.shaolin.vogerp.ecommercial.be.MachOrderComponentImpl;
        import org.shaolin.vogerp.commonmodel.dao.CommonModel;
        import org.shaolin.vogerp.ecommercial.uiwidget.*;
        { 
            MachOrderComponentImpl defaultUser = new MachOrderComponentImpl();
            defaultUser.setCategory(MachiningCategoryType.MATERIAL);
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("editable", new Boolean(true));
            RefForm form = new RefForm("cmForm", "org.shaolin.vogerp.ecommercial.form.MachOrderComponent", input);
            @page.addElement(form);
            
            Table t = (Table)@page.getElement("itemTable");
            CreateComponentCallBack callback = new CreateComponentCallBack(t);
            form.openInWindows("添加材料", callback, true);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="open">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="open-20160325-112849">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
        import org.shaolin.vogerp.ecommercial.be.MachOrderComponentImpl;
        import org.shaolin.vogerp.commonmodel.dao.CommonModel;
        import org.shaolin.vogerp.ecommercial.uiwidget.*;
        { 
            Table orderInfoTable = (Table)@page.getElement("itemTable");
            if (orderInfoTable.getSelectedRow() == null) {
                Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                return;
            }
            MachOrderComponentImpl defaultUser = (MachOrderComponentImpl)orderInfoTable.getSelectedRow();
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("editable", new Boolean(true));
            RefForm form = new RefForm("cmForm", "org.shaolin.vogerp.ecommercial.form.MachOrderComponent", input);
            @page.addElement(form);
            
            UpdateComponentCallBack callback = new UpdateComponentCallBack(orderInfoTable);
            form.openInWindows("配制材料", callback, true);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="delete">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="delete-20160325-112849">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
        import org.shaolin.vogerp.ecommercial.be.MachOrderComponentImpl;
        import org.shaolin.vogerp.commonmodel.dao.CommonModel;
        { 
            Table table = (Table)@page.getElement("itemTable");
            if (table.getSelectedRow() == null) {
                Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                return;
            }
            MachOrderComponentImpl defaultUser = (MachOrderComponentImpl)table.getSelectedRow();
            table.deleteRow(table.getSelectedIndex());
            
            table.refresh();
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="selectOne">
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="parentIdUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
      <ns2:component xsi:type="ns2:UITableType" UIID="itemTable">
        <ns2:Property name="disableRefreshClear">
          <ns2:value xsi:type="ns2:BooleanPropertyType">
	        <ns2:value>true</ns2:value>
	      </ns2:value>
        </ns2:Property>
        <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachOrderComponent</ns2:beElement>
        <ns2:defaultRowSize>10</ns2:defaultRowSize>
        <ns2:showBigItem>false</ns2:showBigItem>
        <ns2:showActionBar>true</ns2:showActionBar>
        <ns2:showFilter>false</ns2:showFilter>
        <ns2:initQuery>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $list;
        }]]></expressionString>
          </ns2:expression>
        </ns2:initQuery>
        <ns2:query>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $table.getListData();
        }]]></expressionString>
          </ns2:expression>
        </ns2:query>
        <ns2:totalCount>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $table.getListData().size();
        }]]></expressionString>
          </ns2:expression>
        </ns2:totalCount>
        <ns2:column>
          <ns2:title xsi:type="ns2:StringPropertyType">
            <ns2:value>材料名称</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.name</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Label</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import java.lang.StringBuffer;
                 import org.shaolin.bmdp.utils.DateUtil;
                 import org.shaolin.bmdp.runtime.AppContext;
                 {
                     if ($rowBE.getCode() != null) {
                        return $rowBE.getName() + $rowBE.getCode();
                     }
                     return $rowBE.getName();
                 }]]></ns2:expressionString>
             </ns2:expression>
         </ns2:rowExpression>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:StringPropertyType">
            <ns2:value>用量(千克)</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.estiWeight</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Label</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import java.lang.StringBuffer;
                 {
                     return $rowBE.getEstiWeight();
                 }]]></ns2:expressionString>
             </ns2:expression>
         </ns2:rowExpression>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:StringPropertyType">
            <ns2:value>单价</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.price</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Label</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import java.lang.StringBuffer;
                 import org.shaolin.uimaster.page.od.formats.FormatUtil;
                 {
                     return FormatUtil.getCurrency($rowBE.getPrice(), null, true) ;
                 }]]></ns2:expressionString>
             </ns2:expression>
         </ns2:rowExpression>
        </ns2:column>
        <ns2:defaultActions>
          <ns2:defaultNewAction>add</ns2:defaultNewAction>
          <ns2:defaultOpenAction>open</ns2:defaultOpenAction>
          <ns2:defaultDeleteAction>delete</ns2:defaultDeleteAction>
        </ns2:defaultActions>
        <ns2:actionGroup>
          <ns2:type>radio</ns2:type>
          <ns2:action>
              <ns2:uiid>selectOne</ns2:uiid>
              <ns2:title xsi:type="ns2:StringPropertyType">
                  <ns2:value>选择一个</ns2:value>
              </ns2:title>
              <ns2:icon>ui-icon-note</ns2:icon>
              <ns2:function>selectOne</ns2:function>
          </ns2:action>
        </ns2:actionGroup>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>itemTable</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
      {
        var o = this;
        this.itemTable.callSelectedFunc = function() {
           o.itemTable.sync();
        };
      }
    ]]>
    </ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="list" category="JavaClass">
      <type entityName="java.util.List"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.MachiningOrder"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataToUIMappingOperation>
      <expressionString><![CDATA[
      import java.util.Set;
      import java.util.List;
      import java.util.ArrayList;
      import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
      import org.shaolin.vogerp.ecommercial.be.MachOrderComponentImpl;
      {
        $list = new ArrayList();
        Set components = $beObject.getComponents();
        if (components != null && components.size() > 0) {
           java.util.Iterator iter = components.iterator();
		   while (iter.hasNext()) {
              MachOrderComponentImpl component = (MachOrderComponentImpl)iter.next();
              if (component.getCategory() == MachiningCategoryType.MATERIAL) {
                 $list.add(component);
              }
           }
        }
        
		@odContext.executeAllMappings();
	  }
	  ]]></expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString><![CDATA[
      import java.util.HashSet;
      import java.util.List;
      import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
      import org.shaolin.vogerp.ecommercial.be.MachOrderComponentImpl;
      {
		@odContext.executeAllMappings();
		$list = @page.getTable("itemTable").getListData();
		if ($beObject.getComponents() == null) {
		   $beObject.setComponents(new HashSet());
		}
		$beObject.getComponents().addAll($list);
      }
     ]]></expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>