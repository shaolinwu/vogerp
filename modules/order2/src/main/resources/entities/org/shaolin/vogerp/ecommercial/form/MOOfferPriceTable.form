<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.ecommercial.form.MOOfferPriceTable</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail-20170225-1184">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="chat">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="chat-20170225-1129">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.uimaster.page.ajax.json.JSONObject;
        import org.shaolin.vogerp.ecommercial.be.*;
        import org.shaolin.vogerp.commonmodel.IUserService;
        import org.shaolin.bmdp.runtime.ce.CEUtil;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.bmdp.runtime.security.UserContext;
        import org.shaolin.bmdp.workflow.be.ChatHistoryImpl;
        import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
        import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
        import org.shaolin.uimaster.page.ajax.json.JSONObject;
        { 
            Table orderInfoTable = (Table)@page.getElement("itemTable");
            if (orderInfoTable.getSelectedRow() == null) {
                return;
            }
            IMOOfferPrice offer = (IMOOfferPrice)orderInfoTable.getSelectedRow();
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid());  
            
            ChatHistoryImpl defaultUser = new ChatHistoryImpl();
            defaultUser.setTaskId(((IMachiningOrder)form.getInputParameter("beObject")).getTaskId());
            if (UserContext.getUserContext().getUserId() == offer.getTakenCustomerId()) {
                defaultUser.setSentPartyId(offer.getTakenCustomerId());
	            defaultUser.setReceivedPartyId(UserContext.getUserContext().getUserId());
            } else {
	            defaultUser.setSentPartyId(UserContext.getUserContext().getUserId());
	            defaultUser.setReceivedPartyId(offer.getTakenCustomerId());
            }
            defaultUser.setOrgId(UserContext.getUserContext().getOrgId());
            defaultUser.setSessionId(offer.getSessionId());
            if (defaultUser.getSessionId() == null || defaultUser.getSessionId().length() == 0) {
                //throw new java.lang.IllegalArgumentException("Chat session id must be specified!");
                return;
            }
            
            IUserService userService = (IUserService)AppContext.get().getService(IUserService.class);
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("recievedPartyName", UserContext.getUserContext().getUserName() + "(" +CEUtil.getValue(UserContext.getUserContext().getCity())+")");
            input.put("sentPartyName", CustomerInfoUtil.getCustomerEnterpriseBasicInfo(offer.getTakenCustomer()) + "("+CEUtil.getValue(userService.getUserLocation(offer.getTakenCustomerId()))+")");
            if (((IMachiningOrder)form.getInputParameter("beObject")).getStatus() != OrderStatusType.PUBLISHED) {
               input.put("isEditable", Boolean.FALSE);
            }
            
            if (UserContext.isMobileRequest() && UserContext.isAppClient()) {
                //invokes App native javascript api.
                input.put("orgId", defaultUser.getOrgId() + "");
                input.put("taskId", defaultUser.getTaskId() + "");
                input.put("sessionId", defaultUser.getSessionId());
                input.put("sentPartyId", defaultUser.getSentPartyId()+ "");
                input.put("receivedPartyId", defaultUser.getReceivedPartyId()+ "");
                input.put("isAdmin", UserContext.getUserContext().isAdmin() + "");
                input.remove("beObject");
                String json = (new JSONObject(input)).toString();
                @page.executeJavaScript("var j=JSON.stringify("+ json +");_mobContext.openChatWindow(j);");
            } else {
	            RefForm chatForm = new RefForm("chatWindow", "org.shaolin.bmdp.workflow.form.ChatWindow", input);
	            @page.addElement(chatForm);
	            
	            chatForm.openInWindows("回复", null, true);
            }
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="parentIdUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="takenCustomerIdUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
      <ns2:component xsi:type="ns2:UITableType" UIID="itemTable">
        <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MOOfferPrice</ns2:beElement>
        <ns2:defaultRowSize>20</ns2:defaultRowSize>
        <ns2:showBigItem>false</ns2:showBigItem>
        <ns2:showActionBar>true</ns2:showActionBar>
        <ns2:showFilter>false</ns2:showFilter>
        <ns2:initQuery>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $list;
        }]]></expressionString>
          </ns2:expression>
        </ns2:initQuery>
        <ns2:query>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
        import org.shaolin.vogerp.ecommercial.dao.OrderModel;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        {
            long orderId = Long.valueOf(@page.getHidden("parentIdUI").getValue()).longValue();
            MachiningOrderImpl order = (MachiningOrderImpl)OrderModel.INSTANCE.get(orderId, MachiningOrderImpl.class);
            OrderUtil.markTakenStatus(order);
            return order.getOfferPrices();
        }]]></expressionString>
          </ns2:expression>
        </ns2:query>
        <ns2:totalCount>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $table.getListData().size();
        }]]></expressionString>
          </ns2:expression>
        </ns2:totalCount>
        <ns2:column>
          <ns2:title xsi:type="ns2:StringPropertyType">
            <ns2:value>出价客户</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.takenCustomer</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Label</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import java.lang.StringBuffer;
                 import org.shaolin.bmdp.utils.DateUtil;
                 import org.shaolin.bmdp.runtime.AppContext;
                 import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                 import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
                 {
                     String message = CustomerInfoUtil.getCustomerEnterpriseBasicInfo($rowBE.getTakenCustomer());
                     if ($rowBE.getIsTaken()) {
                         message = message + "(已拍下)";
                     }
                     return message;
                 }]]></ns2:expressionString>
             </ns2:expression>
         </ns2:rowExpression>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_ecommercial_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.ecommercial.be.GOOfferPrice.price</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.price</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Label</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import java.lang.StringBuffer;
                 import org.shaolin.uimaster.page.od.formats.FormatUtil;
                 {
                     return FormatUtil.getCurrency(rowBE.getPrice(), null, true);
                 }]]></ns2:expressionString>
             </ns2:expression>
         </ns2:rowExpression>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_ecommercial_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.ecommercial.be.GOOfferPrice.leaveWords</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.leaveWords</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Label</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                <ns2:expressionString><![CDATA[
                import org.shaolin.bmdp.utils.StringUtil;
                {
                   return StringUtil.getAbbreviatoryString($rowBE.getLeaveWords(), 70);
                }]]></ns2:expressionString>
            </ns2:expression>
          </ns2:rowExpression>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_ecommercial_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.ecommercial.be.GOOfferPrice.samplePhoto1</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.samplePhoto</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Image</ns2:type>
          </ns2:uiType>
        </ns2:column>
        <ns2:defaultActions>
          <ns2:defaultOpenAction>chat</ns2:defaultOpenAction>
        </ns2:defaultActions>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>itemTable</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="chatbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="chat"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>回复对话</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Closebtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>chatbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
      {
      }
    ]]>
    </ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="list" category="JavaClass">
      <type entityName="java.util.List"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.MachiningOrder"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="selectedPrice" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.MOOfferPrice"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="parentIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.id" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString><![CDATA[
      import org.shaolin.vogerp.ecommercial.be.MOOfferPriceImpl;
      import org.shaolin.vogerp.ecommercial.util.OrderUtil;
      {
        if ($selectedPrice == null) {
           $selectedPrice = new MOOfferPriceImpl();
        }
        OrderUtil.markTakenStatus($beObject);
		@odContext.executeAllMappings();
	  }
	  ]]></expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString><![CDATA[
      import org.shaolin.vogerp.ecommercial.be.MOOfferPriceImpl;
      {
		@odContext.executeAllMappings();
		$selectedPrice = (MOOfferPriceImpl)@page.getTable("itemTable").getSelectedRow();
      }
     ]]></expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>