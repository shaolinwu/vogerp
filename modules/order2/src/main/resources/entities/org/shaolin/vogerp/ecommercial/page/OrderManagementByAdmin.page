<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.ecommercial.page.OrderManagementByAdmin</entityName>
	<systemVersion>0</systemVersion>
	<description>在线订单管理</description>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
	    <ns2:eventHandler functionName="promoteGOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="promoteGOrder-20161017-2229">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("saleOrder", "org.shaolin.vogerp.ecommercial.form.OrderPromotion", input);
                        @page.addElement(form);
                        
                        form.openInWindows("在线客户营销", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="promoteRentOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="promoteRentOrder-20161017-2229">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        Table orderInfoTable = (Table)@page.getElement("rentOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("gorderForm", "org.shaolin.vogerp.ecommercial.form.OrderPromotion", input);
                        @page.addElement(form);
                        
                        form.openInWindows("在线客户营销", null, true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<ns2:eventHandler functionName="openGoldenOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openGoldenOrder-20161017-2229">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        
                        String orderName = "采购订单详情";
                        String formName = "org.shaolin.vogerp.ecommercial.form.GoldenOrderEditor";
                        if (defaultUser.getType() == GoldenOrderType.SALE) {
                            orderName = "销售订单详情";
                            formName = "org.shaolin.vogerp.ecommercial.form.GoldenSaleOrderEditor";
                        }
                        RefForm form = new RefForm("goldenOrderForm", formName, input);
                        @page.addElement(form);
                        
                        form.openInWindows(orderName, new TableCallBack("goldenOrderTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openRentOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openRentOrder-20161017-2229">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                    import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                    import org.shaolin.vogerp.commonmodel.IUserService;
                    {
                        Table orderInfoTable = (Table)@page.getElement("rentOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)orderInfoTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        
                        String formName = "org.shaolin.vogerp.ecommercial.form.RentOrderEditor";
                        if (defaultUser.getType() == RentOrLoanOrderType.LOAN) {
               	           formName = "org.shaolin.vogerp.ecommercial.form.RLoanOrderEditor";
               	        }
               	        if (defaultUser.getType() == RentOrLoanOrderType.FINDMASTER) {
                           formName = "org.shaolin.vogerp.ecommercial.form.RLoanMasterOrderEditor";
                        }
                        RefForm form = new RefForm("rentOrLoanOrder", formName, input);
                        @page.addElement(form);
                      
                        form.openInWindows("租赁订单详情", new TableCallBack("rentOrderTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="disableMOrder">
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		        	new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,message:'Are you sure continuing?',messageType:UIMaster.ui.dialog.Warning,optionType:UIMaster.ui.dialog.YES_NO_OPTION,title:'',height:150,width:300,handler: function() {
		        	
	        				UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"forbiddenMOrder",UIMaster.getValue(eventsource),o.__entityName);
			            }
			        }).open();
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="disableGoldenOrder">
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		        	new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,message:'Are you sure continuing?',messageType:UIMaster.ui.dialog.Warning,optionType:UIMaster.ui.dialog.YES_NO_OPTION,title:'',height:150,width:300,handler: function() {
		        	
	        				UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"forbiddenGOrder",UIMaster.getValue(eventsource),o.__entityName);
			            }
			        }).open();
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="disableRentOrder">
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {
		            new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,message:'Are you sure continuing?',messageType:UIMaster.ui.dialog.Warning,optionType:UIMaster.ui.dialog.YES_NO_OPTION,title:'',height:150,width:300,handler: function() {
		        	
	        				UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"forbiddenROrder",UIMaster.getValue(eventsource),o.__entityName);
			            }
			        }).open();   
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
        </ns2:eventHandler>
        
        <ns2:eventHandler functionName="openGOrderTracker">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openGOrderTracker-20161017-2229">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  {
                      Table personalInfoTable = (Table)@page.getElement("goldenOrderTable");
                      if (personalInfoTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      GoldenOrderImpl defaultUser = (GoldenOrderImpl)personalInfoTable.getSelectedRow();
                      ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                      
                      HashMap input = new HashMap();
                      input.put("sessionId", defaultUser.getSessionId());
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("goldenOrderForm", "org.shaolin.bmdp.workflow.form.SessionTracker", input);
                      @page.addElement(form);
                      
                      form.openInWindows("订单跟踪", null, true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
      </ns2:eventHandler>
        <ns2:eventHandler functionName="openRentOrderTracker">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openRentOrderTracker-20161017-2229">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  {
                      Table personalInfoTable = (Table)@page.getElement("rentOrderTable");
                      if (personalInfoTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)personalInfoTable.getSelectedRow();
                      ICoordinatorService service = (ICoordinatorService)AppContext.get().getService(ICoordinatorService.class);
                      
                      HashMap input = new HashMap();
                      input.put("sessionId", defaultUser.getSessionId());
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("goldenOrderForm", "org.shaolin.bmdp.workflow.form.SessionTracker", input);
                      @page.addElement(form);
                      
                      form.openInWindows("订单跟踪", null, true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openMachiningOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openMachiningOrder-20170125-1011">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.vogerp.ecommercial.ce.*;
                  import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  {
                      Table personalInfoTable = (Table)@page.getElement("machiningTable");
                      if (personalInfoTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      MachiningOrderImpl order = (MachiningOrderImpl)personalInfoTable.getSelectedRow();
                      
                      HashMap input = new HashMap();
                      input.put("beObject", order);
                      input.put("editable", new Boolean(true));
                      String formUI = "org.shaolin.vogerp.ecommercial.form.MachiningOrderByAdmin";
                      RefForm form = new RefForm("mOrderForm", formUI, input);
                      @page.addElement(form);
                      
                      form.openInWindows("编辑加工订单", new TableCallBack("machiningTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
		   <ns2:UISkin xsi:type="ns2:UISkinType">
		     <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
		     <ns2:param name="text">
		         <ns2:value xsi:type="ns2:StringPropertyType">
		             <ns2:value></ns2:value>
		         </ns2:value>
		     </ns2:param>
		   </ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UIPanelType" UIID="conditionPanel">
		       <ns2:layout xsi:type="ns2:TableLayoutType">
		          <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		          <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
		       </ns2:layout>
		       <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="citySelector">
		           <ns2:referenceEntity entityName="org.shaolin.vogerp.commonmodel.form.CityOnlySelelctor" />
		        </ns2:component>
		        <ns2:layoutConstraint>
	             <ns2:componentId>citySelector</ns2:componentId>
	             <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
	                 x="0" y="0" align="FULL"></ns2:constraint>
		       </ns2:layoutConstraint>
		    </ns2:component>  
			<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
			    <ns2:ajaxLoad>true</ns2:ajaxLoad>
			    <ns2:tab uiid="machiningInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>加工订单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="machiningInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="machiningTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachiningOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.ce.*;
                                    import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new MachiningOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          $tableCondition.addOrder("statusInt", true);
                                          MachiningOrderImpl condition = (MachiningOrderImpl)$tableCondition.getCondition();
                                          return OrderModel.INSTANCE.searchMachiningOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>序列号</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>描述</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.description</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return StringUtil.getAbbreviatoryString($rowBE.getDescription(), 70);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>发布人</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.publishedCustomerId</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
						                import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
						                import org.shaolin.vogerp.commonmodel.dao.CommonModel;
						                {
						                   if ($rowBE.getPublishedCustomer() == null) {
						                       PersonalInfoImpl pinfo = (PersonalInfoImpl)CommonModel.INSTANCE.get($rowBE.getPublishedCustomerId(), PersonalInfoImpl.class); 
						                       $rowBE.setPublishedCustomer(pinfo);
						                   }
						                   return "["+CustomerInfoUtil.getCustomerCity($rowBE.getPublishedCustomer()) +"]" + CustomerInfoUtil.getCustomerEnterpriseBasicInfo($rowBE.getPublishedCustomer()) ;
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>状态</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                        {
                                            $rowBE.setStatus((OrderStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.OrderStatusType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                  <ns2:type>DateRange</ns2:type>
                                  <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
                                  <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
                                </ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.uimaster.page.od.formats.FormatUtil;
                                        import java.util.Date;
                                        {
                                            if ($value == null || "".equals($value)) {
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(null);
                                                } else {
                                                    $rowBE.setEndCreateDate(null);
                                                }
                                            } else {
                                                Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(d);
                                                } else {
                                                    $rowBE.setEndCreateDate(d);
                                                }
                                            }
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultOpenAction>openMachiningOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                            <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>openMOrderTracker</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>状态</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>openMOrderTracker</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>verifiedMOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>验证通过</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>verifiedMOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>unverifiedMOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>验证不通过</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>unverifiedMOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>disableMOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>禁止该订单</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>disableMOrder</ns2:function>
                                </ns2:action>
                             </ns2:actionGroup>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>machiningTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                <ns2:tab uiid="goldenOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>抢购订单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="goldenOrderInfoPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="goldenOrderTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.GoldenOrder</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>10</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.ce.*;
		                            import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new GoldenOrderImpl());
		                                     $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
		                                  }
		                                  $tableCondition.addOrder("statusInt", true);
		                                  GoldenOrderImpl condition = (GoldenOrderImpl)$tableCondition.getCondition();
		                                  return OrderModel.INSTANCE.searchGoldenOrder(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>序列号</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>类型</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.type</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
                                        {
                                            $rowBE.setType((GoldenOrderType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.GoldenOrderType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>描述</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.description</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>状态</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.status</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                   <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import java.lang.StringBuffer;
                                        import org.shaolin.bmdp.utils.DateUtil;
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                        import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                                        import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
                                        import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                                        {
                                           if ($rowBE.getStatus() == OrderStatusType.TAKEN) {
                                              PersonalInfoImpl user = (PersonalInfoImpl)OrderModel.INSTANCE.get($rowBE.getTakenCustomerId(), PersonalInfoImpl.class);
                                              $rowBE.setTakenCustomer(user);
                                              return $rowBE.getStatus().getDisplayName() + "("+CustomerInfoUtil.getCustomerEnterpriseBasicInfo($rowBE.getTakenCustomer())+")";
                                           } else {
                                              return $rowBE.getStatus().getDisplayName();
                                           }
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                        {
                                            $rowBE.setStatus((OrderStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.OrderStatusType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>参与过营销</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.promoted</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                        {
                                            if ($value == null || $value.trim().length() == 0) {
                                            	$value = "0";
                                            }
                                            $rowBE.setPromoted(Integer.parseInt($value));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>建立时间</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType">
		                          <ns2:type>DateRange</ns2:type>
		                          <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
		                          <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
		                        </ns2:uiType>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.uimaster.page.od.formats.FormatUtil;
		                                import java.util.Date;
		                                {
		                                    if ($value == null || "".equals($value)) {
		                                        if ("rowBE.startCreateDate".equals($filterId)) {
		                                            $rowBE.setStartCreateDate(null);
		                                        } else {
		                                            $rowBE.setEndCreateDate(null);
		                                        }
		                                    } else {
		                                        Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
		                                        if ("rowBE.startCreateDate".equals($filterId)) {
		                                            $rowBE.setStartCreateDate(d);
		                                        } else {
		                                            $rowBE.setEndCreateDate(d);
		                                        }
		                                    }
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultOpenAction>openGoldenOrder</ns2:defaultOpenAction>
		                    </ns2:defaultActions>
		                    <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>verifiedGOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>验证通过</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>verifiedGOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>unverifiedGOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>验证不通过</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>unverifiedGOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>promoteGOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>在线客户营销</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>promoteGOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>openGOrderTracker</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>状态跟踪</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>openGOrderTracker</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>disableGoldenOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>禁止该订单</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>disableGoldenOrder</ns2:function>
                                </ns2:action>
                             </ns2:actionGroup>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>goldenOrderTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
                  <ns2:tab uiid="rentOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>租赁订单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="rentOrderInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="rentOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.RentOrLoanOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new RentOrLoanOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          $tableCondition.addOrder("statusInt", true);
                                          RentOrLoanOrderImpl condition = (RentOrLoanOrderImpl)$tableCondition.getCondition();
                                          return OrderModel.INSTANCE.searchRentOrLoanOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>序列号</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>类型</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.type</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                                        {
                                            $rowBE.setType((RentOrLoanOrderType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>描述</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.description</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>参与过营销</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.promoted</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                        {
                                            if ($value == null || $value.trim().length() == 0) {
                                            	$value = "0";
                                            }
                                            $rowBE.setPromoted(Integer.parseInt($value));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
		                    </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>状态</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                                        {
                                            $rowBE.setStatus((OrderStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.OrderStatusType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                  <ns2:type>DateRange</ns2:type>
                                  <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
                                  <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
                                </ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.uimaster.page.od.formats.FormatUtil;
                                        import java.util.Date;
                                        {
                                            if ($value == null || "".equals($value)) {
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(null);
                                                } else {
                                                    $rowBE.setEndCreateDate(null);
                                                }
                                            } else {
                                                Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(d);
                                                } else {
                                                    $rowBE.setEndCreateDate(d);
                                                }
                                            }
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultOpenAction>openRentOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                            <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>verifiedROrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>验证通过</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>verifiedROrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>unverifiedROrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>验证不通过</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>unverifiedROrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>promoteRentOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>在线客户营销</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>promoteRentOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>openRentOrderTracker</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>状态跟踪</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>openRentOrderTracker</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>disableRentOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>禁止该订单</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>disableRentOrder</ns2:function>
                                </ns2:action>
                             </ns2:actionGroup>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>rentOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                
          </ns2:component>
          <ns2:layoutConstraint>
             <ns2:componentId>conditionPanel</ns2:componentId>
             <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                 x="0" y="0" align="FULL"></ns2:constraint>
          </ns2:layoutConstraint>
          <ns2:layoutConstraint>
             <ns2:componentId>functionsTab</ns2:componentId>
             <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                 x="0" y="1" align="FULL"></ns2:constraint>
          </ns2:layoutConstraint>
          <ns2:constructorCode><![CDATA[
		    {
		       var o = this;
               var UIEntity = this;
		       // workflow dynamic actions
		       Form.verifiedMOrder = function() {
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.INPUT_DIALOG2,message:"\u7559\u8A00\uFF1A",messageType:UIMaster.ui.dialog.Information,optionType:UIMaster.ui.dialog.OK_CANCEL_OPTION,title:'',height:200,width:300,handler: function() {
		             
			          UIMaster.actionComment = encodeURI(this.value);
			          UIMaster.triggerServerEvent(UIMaster.getUIID(Form.machiningTable),"verifiedMOrder",UIMaster.getValue(Form.machiningTable),o.__entityName);
		          
		          }}).open();
		       };
		       Form.unverifiedMOrder = function() {
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.INPUT_DIALOG2,message:"\u7559\u8A00\uFF1A",messageType:UIMaster.ui.dialog.Information,optionType:UIMaster.ui.dialog.OK_CANCEL_OPTION,title:'',height:200,width:300,handler: function() {
		          
		              UIMaster.actionComment = encodeURI(this.value);
		              UIMaster.triggerServerEvent(UIMaster.getUIID(Form.machiningTable),"unverifiedMOrder",UIMaster.getValue(Form.machiningTable),o.__entityName);
		          
		          }}).open();
		       };
		       Form.verifiedGOrder = function() {
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.INPUT_DIALOG2,message:"\u7559\u8A00\uFF1A",messageType:UIMaster.ui.dialog.Information,optionType:UIMaster.ui.dialog.OK_CANCEL_OPTION,title:'',height:200,width:300,handler: function() {
		          
		             UIMaster.actionComment = encodeURI(this.value);
		             UIMaster.triggerServerEvent(UIMaster.getUIID(Form.goldenOrderTable),"verifiedGOrder",UIMaster.getValue(Form.goldenOrderTable),o.__entityName);
		          
		          }}).open();
		       };
		       Form.unverifiedGOrder = function() {
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.INPUT_DIALOG2,message:"\u7559\u8A00\uFF1A",messageType:UIMaster.ui.dialog.Information,optionType:UIMaster.ui.dialog.OK_CANCEL_OPTION,title:'',height:200,width:300,handler: function() {
		          
			          UIMaster.actionComment = encodeURI(this.value);
			          UIMaster.triggerServerEvent(UIMaster.getUIID(Form.goldenOrderTable),"unverifiedGOrder",UIMaster.getValue(Form.goldenOrderTable),o.__entityName);
		          
		          }}).open();
		       };
		       Form.verifiedROrder = function() {
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.INPUT_DIALOG2,message:"\u7559\u8A00\uFF1A",messageType:UIMaster.ui.dialog.Information,optionType:UIMaster.ui.dialog.OK_CANCEL_OPTION,title:'',height:200,width:300,handler: function() {
		          
			          UIMaster.actionComment = encodeURI(this.value);
			          UIMaster.triggerServerEvent(UIMaster.getUIID(Form.rentOrderTable),"verifyROrder",UIMaster.getValue(Form.rentOrderTable),o.__entityName);
		          
		          }}).open();
		       };
		       Form.unverifiedROrder = function() {
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.INPUT_DIALOG2,message:"\u7559\u8A00\uFF1A",messageType:UIMaster.ui.dialog.Information,optionType:UIMaster.ui.dialog.OK_CANCEL_OPTION,title:'',height:200,width:300,handler: function() {
		          
		             UIMaster.actionComment = encodeURI(this.value);
		             UIMaster.triggerServerEvent(UIMaster.getUIID(Form.rentOrderTable),"unverifiedROrder",UIMaster.getValue(Form.rentOrderTable),o.__entityName);
		          
		          }}).open();
		       };
			}
	    ]]></ns2:constructorCode>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	   <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
          <ns2:mappingRule entityName="org.shaolin.vogerp.commonmodel.form.CityOnlySelelctor"></ns2:mappingRule>
          <ns2:UIComponent componentPath="citySelector" paramName="UIWidgetType"></ns2:UIComponent>
       </ns2:ComponentMapping>
	</ns2:ODMapping>
	<ns2:in>
		<ns2:serverOperation xsi:type="ns2:ExpressionType">
			<ns2:expressionString><![CDATA[
			import org.shaolin.bmdp.runtime.AppContext;
		    import org.shaolin.vogerp.commonmodel.IOrganizationService;
		    import org.shaolin.vogerp.commonmodel.be.OrganizationImpl;
		    import org.shaolin.vogerp.commonmodel.be.OrganizationContractImpl;
		    import org.shaolin.uimaster.page.flow.WebflowConstants;
			{
			  @odContext.executeAllMappings();
			}]]></ns2:expressionString>
		</ns2:serverOperation>
	</ns2:in>
</ns2:UIPage>
