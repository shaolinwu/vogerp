<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.ecommercial.page.MachiningComponentManager</entityName>
	<systemVersion>0</systemVersion>
	<description>加工组件配制</description>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
	    <ns2:eventHandler functionName="createComponent">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createComponent-20160602">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.commonmodel.IUserService; 
                  import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                  import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                  import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                  {
                      MachiningComponentImpl machiningComponent = new MachiningComponentImpl();
                      machiningComponent.setCategory(MachiningCategoryType.MATERIAL);
                      HashMap input = new HashMap();
                      input.put("beObject", machiningComponent);
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiningComponent", input);
                      @page.addElement(form);
                      
                      form.openInWindows("新建加工材料", new TableCallBack("mComponentTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
		<ns2:eventHandler functionName="openComponent">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openComponent-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        Table orderInfoTable = (Table)@page.getElement("mComponentTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiningComponent", input);
                        @page.addElement(form);
                        
                        form.openInWindows("加工材料详情", new TableCallBack("mComponentTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		
		<ns2:eventHandler functionName="createMachineTools">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createMachineTools-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        MachiningComponentImpl machiningComponent = new MachiningComponentImpl();
                        machiningComponent.setCategory(MachiningCategoryType.MACHININGTOOL);
                        HashMap input = new HashMap();
                        input.put("beObject", machiningComponent);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiCompTool", input);
                        @page.addElement(form);
                        
                        form.openInWindows("添加加工设备", new TableCallBack("mToolTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="openMachineTools">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openMachineTools-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        Table orderInfoTable = (Table)@page.getElement("mToolTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiCompTool", input);
                        @page.addElement(form);
                        
                        form.openInWindows("加工设备详情", new TableCallBack("mToolTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		
		<ns2:eventHandler functionName="createSkinHandler">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createSkinHandler-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        MachiningComponentImpl machiningComponent = new MachiningComponentImpl();
                        machiningComponent.setCategory(MachiningCategoryType.SKINHANDLING);
                        HashMap input = new HashMap();
                        input.put("beObject", machiningComponent);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiCompSkinHandler", input);
                        @page.addElement(form);
                        
                        form.openInWindows("添加加工表面处理", new TableCallBack("skinHandleTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="openSkinHandler">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openSkinHandler-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        Table orderInfoTable = (Table)@page.getElement("skinHandleTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiCompSkinHandler", input);
                        @page.addElement(form);
                        
                        form.openInWindows("加工表面处理详情", new TableCallBack("skinHandleTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		
		<ns2:eventHandler functionName="createThirdComponent">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createThirdComponent-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        MachiningComponentImpl machiningComponent = new MachiningComponentImpl();
                        machiningComponent.setCategory(MachiningCategoryType.THIRDPARTYCOMPONET);
                        HashMap input = new HashMap();
                        input.put("beObject", machiningComponent);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiCompThirdComp", input);
                        @page.addElement(form);
                        
                        form.openInWindows("添加标准辅件", new TableCallBack("thirdCompTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="openThirdComponent">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openThirdComponent-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    {
                        Table orderInfoTable = (Table)@page.getElement("thirdCompTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("mComponentForm", "org.shaolin.vogerp.ecommercial.form.MachiCompThirdComp", input);
                        @page.addElement(form);
                        
                        form.openInWindows("标准辅件详情", new TableCallBack("thirdCompTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="deleteComponent">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteComponent-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    import org.shaolin.vogerp.commonmodel.dao.CommonModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("mComponentTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        CommonModel.INSTANCE.delete(defaultUser);
                        orderInfoTable.refresh();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="deleteSkinHandler">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteSkinHandler-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    import org.shaolin.vogerp.commonmodel.dao.CommonModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("skinHandleTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        CommonModel.INSTANCE.delete(defaultUser);
                        orderInfoTable.refresh();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="deleteMachineTools">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteMachineTools-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    import org.shaolin.vogerp.commonmodel.dao.CommonModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("mToolTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        CommonModel.INSTANCE.delete(defaultUser);
                        orderInfoTable.refresh();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="deleteThirdComponent">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteThirdComponent-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
                    import org.shaolin.vogerp.commonmodel.dao.CommonModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("thirdCompTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        MachiningComponentImpl defaultUser = (MachiningComponentImpl)orderInfoTable.getSelectedRow();
                        CommonModel.INSTANCE.delete(defaultUser);
                        orderInfoTable.refresh();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		
        <ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
		   <ns2:UISkin xsi:type="ns2:UISkinType">
		     <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
		     <ns2:param name="text">
		         <ns2:value xsi:type="ns2:StringPropertyType">
		             <ns2:value></ns2:value>
		         </ns2:value>
		     </ns2:param>
		   </ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
			    <ns2:ajaxLoad>true</ns2:ajaxLoad>
			    
                <ns2:tab uiid="materialInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>材料配制</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="materialInfoPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="mComponentTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachiningComponent</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>20</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
		                            import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new MachiningComponentImpl());
		                                     $tableCondition.setCount(20);
                                             $tableCondition.addOrder("createDate", false);
		                                  }
		                                  MachiningComponentImpl condition = (MachiningComponentImpl)$tableCondition.getCondition();
		                                  condition.setCategory(MachiningCategoryType.MATERIAL);
		                                  return OrderModel.INSTANCE.searchMachiningComponent(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>名称</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.name</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>行业型号</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.code</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>单价</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.price</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getPrice() + "";
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>质量单位</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.weightUnit</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getWeightUnit().getDisplayName();
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createComponent</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openComponent</ns2:defaultOpenAction>
		                        <ns2:defaultDeleteAction>deleteComponent</ns2:defaultDeleteAction>
		                    </ns2:defaultActions>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>mComponentTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
                  
                  <ns2:tab uiid="mToolInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>加工设备</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="mToolInfoPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="mToolTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachiningComponent</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>20</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
		                            import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new MachiningComponentImpl());
		                                     $tableCondition.setCount(20);
                                             $tableCondition.addOrder("createDate", false);
		                                  }
		                                  MachiningComponentImpl condition = (MachiningComponentImpl)$tableCondition.getCondition();
		                                  condition.setCategory(MachiningCategoryType.MACHININGTOOL);
		                                  return OrderModel.INSTANCE.searchMachiningComponent(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>名称</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.name</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>工时价</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.price</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getPrice() + "";
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createMachineTools</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openMachineTools</ns2:defaultOpenAction>
		                        <ns2:defaultDeleteAction>deleteMachineTools</ns2:defaultDeleteAction>
		                    </ns2:defaultActions>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>mToolTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
                  
                  <ns2:tab uiid="skinInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>表面处理</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="skinInfoPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="skinHandleTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachiningComponent</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>20</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
		                            import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new MachiningComponentImpl());
		                                     $tableCondition.setCount(20);
                                             $tableCondition.addOrder("createDate", false);
		                                  }
		                                  MachiningComponentImpl condition = (MachiningComponentImpl)$tableCondition.getCondition();
		                                  condition.setCategory(MachiningCategoryType.SKINHANDLING);
		                                  return OrderModel.INSTANCE.searchMachiningComponent(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>名称</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.name</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>单价</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.price</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getPrice() + "";
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>质量单位</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.weightUnit</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getWeightUnit().getDisplayName();
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createSkinHandler</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openSkinHandler</ns2:defaultOpenAction>
		                        <ns2:defaultDeleteAction>deleteSkinHandler</ns2:defaultDeleteAction>
		                    </ns2:defaultActions>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>skinHandleTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
                  
                  <ns2:tab uiid="thirdCompInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>其它标准件</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="thirdCompInfoPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="thirdCompTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachiningComponent</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>20</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.ce.MachiningCategoryType;
		                            import org.shaolin.vogerp.ecommercial.be.MachiningComponentImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new MachiningComponentImpl());
		                                     $tableCondition.setCount(20);
                                             $tableCondition.addOrder("createDate", false);
		                                  }
		                                  MachiningComponentImpl condition = (MachiningComponentImpl)$tableCondition.getCondition();
		                                  condition.setCategory(MachiningCategoryType.THIRDPARTYCOMPONET);
		                                  return OrderModel.INSTANCE.searchMachiningComponent(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>名称</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.name</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>单价</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.price</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getPrice() + "";
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createThirdComponent</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openThirdComponent</ns2:defaultOpenAction>
		                        <ns2:defaultDeleteAction>deleteThirdComponent</ns2:defaultDeleteAction>
		                    </ns2:defaultActions>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>thirdCompTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
                  
               </ns2:component>
			   <ns2:layoutConstraint>
                  <ns2:componentId>functionsTab</ns2:componentId>
                  <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
		  </ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	</ns2:ODMapping>
	<ns2:in>
		<ns2:serverOperation xsi:type="ns2:ExpressionType">
			<ns2:expressionString><![CDATA[
			import org.shaolin.bmdp.runtime.AppContext;
		    import org.shaolin.bmdp.workflow.be.NotificationImpl;
			{
			  @odContext.executeAllMappings();
			}]]></ns2:expressionString>
		</ns2:serverOperation>
	</ns2:in>
</ns2:UIPage>
