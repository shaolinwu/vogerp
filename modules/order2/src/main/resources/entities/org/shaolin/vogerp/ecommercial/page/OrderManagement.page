<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.ecommercial.page.OrderManagement</entityName>
	<systemVersion>0</systemVersion>
	<description>抢单管理</description>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
	    <ns2:eventHandler functionName="createGOrder">
	    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
	        <ns2:expressionString><![CDATA[
	        {   
	          var o = this;
	          if (this.goldenOrderTable.selectedIndex >= 0) {
		          new UIMaster.ui.dialog({
		              dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,
		              message:'\u662F\u5426\u6309\u7167\u9009\u4E2D\u8BA2\u5355\u590D\u5236\u4E00\u6761\u5417?',
		              messageType:UIMaster.ui.dialog.Information,
		              optionType:UIMaster.ui.dialog.YES_NO_OPTION,
		              title:'',
		              height:150,
		              width:300,
		              handler: function() {
		                  UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"createCopyGOrder-20160602",UIMaster.getValue(eventsource),o.__entityName);
		              },
		              noHandler: function() {
		                  $(o.selectGTypePanel).css("display", "block");
	                      $(o.selectGTypePanel).dialog();
		              },
		          }).open();
		          return;
	          } else {
	              $(this.selectGTypePanel).css("display", "block");
	              $(this.selectGTypePanel).dialog();
	          }
	        }
	        ]]></ns2:expressionString>
	    </ns2:ops>
	    <!-- 
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createGOrder-20160602">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.commonmodel.IUserService; 
                  import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                  import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                  {
                      IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
                      if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                  
                      HashMap input = new HashMap();
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("goldenOrderForm", "org.shaolin.vogerp.ecommercial.form.GoldenOrderPreEditor", input);
                      @page.addElement(form);
                      
                      form.openInWindows("新建抢购订单", new TableCallBack("goldenOrderTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
           -->
        </ns2:eventHandler>
        <ns2:eventHandler functionName="selectedPurchaseOrder">
		    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		           $(this.selectGTypePanel).dialog("close");
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedPurchaseOrder-20170106-214008">
		      <ns2:exp>
		        <expressionString><![CDATA[
		        import java.util.HashMap;
		        import org.shaolin.bmdp.utils.DateUtil;
		        import org.shaolin.bmdp.runtime.AppContext;
		        import org.shaolin.bmdp.runtime.security.UserContext;
		        import org.shaolin.uimaster.page.AjaxContext;
		        import org.shaolin.uimaster.page.ajax.*;
		        import org.shaolin.vogerp.commonmodel.IUserService; 
		        import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
		        import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
		        import org.shaolin.vogerp.ecommercial.ce.*;
		        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
		        import org.shaolin.vogerp.productmodel.util.ProductUtil;
		        import org.shaolin.vogerp.productmodel.be.ProductPriceImpl;
		        { 
		            IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
		            if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                        Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                        return;
                    }
		            
		            GoldenOrderImpl order = new GoldenOrderImpl();
		            order.setOrgId(UserContext.getUserContext().getOrgId());
		            order.setSerialNumber(OrderUtil.genSerialNumber());
		            order.setStatus(OrderStatusType.CREATED);
		            order.setType(GoldenOrderType.PURCHASE);
		            order.setPublishedCustomerId(service.getUserId());
		            order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
		            order.setCreateDate(new java.util.Date());
		            order.setCount(1);
		            order.setCity(UserContext.getUserContext().getCity());
		            order.setLongitude(UserContext.getUserContext().getLongitude());
		            order.setLatitude(UserContext.getUserContext().getLatitude());
		            order.setInvoiceType(InvoiceType.NONEED);
		            
		            String resourceId = OrderUtil.genResourceId();
	                order.setHtmlDesc("/product/" + resourceId + "/desc.html");
	                order.setPhotos("/product/" + resourceId + "/images");
		            order.setCount(1);
		            
		            HashMap input = new HashMap();
		            input.put("beObject", order);
		            input.put("editable", new Boolean(true));
		            
		            RefForm form1 = new RefForm("goldenOrderForm1", "org.shaolin.vogerp.ecommercial.form.GoldenOrderEditor", input);
		            @page.addElement(form1);
		            
		            form1.openInWindows("新建采购订单", new TableCallBack("goldenOrderTable"), true);
		        }]]></expressionString>
		      </ns2:exp>
		    </ns2:ops>
		  </ns2:eventHandler>
		  <ns2:eventHandler functionName="selectedSaleOrder">
		    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		           $(this.selectGTypePanel).dialog("close");
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedSaleOrder-20170106-214008">
		      <ns2:exp>
		        <expressionString><![CDATA[
		        import java.util.HashMap;
		        import org.shaolin.bmdp.utils.DateUtil;
		        import org.shaolin.bmdp.runtime.AppContext;
		        import org.shaolin.bmdp.runtime.security.UserContext;
		        import org.shaolin.uimaster.page.AjaxContext;
		        import org.shaolin.uimaster.page.ajax.*;
		        import org.shaolin.vogerp.commonmodel.IUserService; 
		        import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
		        import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
		        import org.shaolin.vogerp.ecommercial.ce.*;
		        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
		        import org.shaolin.vogerp.productmodel.util.ProductUtil;
		        import org.shaolin.vogerp.productmodel.be.ProductPriceImpl;
		        { 
		            IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
		            if (!service.isEnterpriseUser(UserContext.getUserContext().getUserId())) {
		                Dialog.showMessageDialog("只有企业用户才能发销售订单!", "", Dialog.WARNING_MESSAGE, null);
		                return;
		            }
		            if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                        Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                        return;
                    }
		            
		            GoldenOrderImpl order = new GoldenOrderImpl();
		            order.setOrgId(UserContext.getUserContext().getOrgId());
		            order.setSerialNumber(OrderUtil.genSerialNumber());
		            order.setStatus(OrderStatusType.CREATED);
		            order.setType(GoldenOrderType.SALE);
		            order.setPublishedCustomerId(service.getUserId());
		            order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
		            order.setCreateDate(new java.util.Date());
		            order.setCount(1);
		            order.setCity(UserContext.getUserContext().getCity());
		            order.setLongitude(UserContext.getUserContext().getLongitude());
		            order.setLatitude(UserContext.getUserContext().getLatitude());
		            order.setInvoiceType(InvoiceType.NONEED);
		            
		            String resourceId = OrderUtil.genResourceId();
		            order.setHtmlDesc("/product/" + resourceId + "/desc.html");
		            order.setPhotos("/product/" + resourceId + "/images");
		            order.setCount(1);
		            
		            HashMap input = new HashMap();
		            input.put("beObject", order);
		            input.put("editable", new Boolean(true));
		            
		            RefForm form1 = new RefForm("goldenOrderForm1", "org.shaolin.vogerp.ecommercial.form.GoldenSaleOrderEditor", input);
		            @page.addElement(form1);
		            
		            form1.openInWindows("新建销售订单", new TableCallBack("goldenOrderTable"), true);
		        }]]></expressionString>
		      </ns2:exp>
		    </ns2:ops>
		  </ns2:eventHandler>
        
        <ns2:eventHandler functionName="createCopyGOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createCopyGOrder-20160602">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.bmdp.runtime.security.UserContext;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                    {
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        GoldenOrderImpl order = new GoldenOrderImpl();
                        order.setOrgId(UserContext.getUserContext().getOrgId());
                        order.setSerialNumber(OrderUtil.genSerialNumber());
                        order.setProductId(defaultUser.getProductId());
                        order.setDescription(defaultUser.getDescription());
                        order.setStatus(OrderStatusType.CREATED);
                        order.setType(defaultUser.getType());
                        order.setCreateDate(new java.util.Date());
                        order.setPublishedCustomerId(defaultUser.getPublishedCustomerId());
                        order.setPublishedCustomer(defaultUser.getPublishedCustomer());
                        order.setHtmlDesc(defaultUser.getHtmlDesc());
                        order.setPhotos(defaultUser.getPhotos());
                        order.setInvoiceType(defaultUser.getInvoiceType());
                        order.setInvoiceSign(defaultUser.getInvoiceSign());
                        order.setCount(defaultUser.getCount());
                        order.setEstimatedPrice(defaultUser.getEstimatedPrice());
                        
                        order.setCity(UserContext.getUserContext().getCity());
                        order.setLongitude(UserContext.getUserContext().getLongitude());
                        order.setLatitude(UserContext.getUserContext().getLatitude());
                      	
                        HashMap input = new HashMap();
                        input.put("beObject", order);
                       	input.put("editable", new Boolean(true));
                       	
                        String orderName = "新建采购订单";
                        String formName = "org.shaolin.vogerp.ecommercial.form.GoldenOrderEditor";
                        if (defaultUser.getType() == GoldenOrderType.SALE) {
                            orderName = "新建销售订单";
                            formName = "org.shaolin.vogerp.ecommercial.form.GoldenSaleOrderEditor";
                        }
                        RefForm form = new RefForm("goldenOrderForm", formName, input);
                        @page.addElement(form);
                        
                        form.openInWindows(orderName, new TableCallBack("goldenOrderTable"), true);
                    }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
		<ns2:eventHandler functionName="openGoldenOrder">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openGoldenOrder-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                    import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    {
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        if (defaultUser.getStatus() == OrderStatusType.CREATED) {
                        	input.put("editable", new Boolean(true));
                        } else {
                            input.put("editable", new Boolean(false));
                        }
                        String orderName = "采购订单详情";
                        String formName = "org.shaolin.vogerp.ecommercial.form.GoldenOrderEditor";
                        if (defaultUser.getType() == GoldenOrderType.SALE) {
                            orderName = "销售订单详情";
                            formName = "org.shaolin.vogerp.ecommercial.form.GoldenSaleOrderEditor";
                        }
                        if (defaultUser.getStatus() == OrderStatusType.TAKEN) {
                           formName = "org.shaolin.vogerp.ecommercial.form.OrderPaymentAndDeliveryTrack";
                           input.put("editable", new Boolean(true));
                           input.put("order", defaultUser);
                        }
                        RefForm form = new RefForm("goldenOrderForm", formName, input);
                        @page.addElement(form);
                        
                        form.openInWindows(orderName, new TableCallBack("goldenOrderTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="acceptGoldenOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="acceptGoldenOrder-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("goldenOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        GoldenOrderImpl defaultUser = (GoldenOrderImpl)orderInfoTable.getSelectedRow();
                        GoldenOrderImpl order = (GoldenOrderImpl)EOrderModel.INSTANCE.get(defaultUser.getId(), GoldenOrderImpl.class);
                        
                        HashMap input = new HashMap();
                        input.put("beObject", order);
                        input.put("priceItems", order.getOfferPrices());
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("offerPriceTable", "org.shaolin.vogerp.ecommercial.form.GOOfferPriceTable", input);
                        @page.addElement(form);
                        
                        form.openInWindows("抢购订单出价历史", new TableCallBack("goldenOrderTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="acceptRentOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="acceptRentOrder-2016-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("rentOrderTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)orderInfoTable.getSelectedRow();
                        RentOrLoanOrderImpl order = (RentOrLoanOrderImpl)EOrderModel.INSTANCE.get(defaultUser.getId(), RentOrLoanOrderImpl.class);
                        
                        HashMap input = new HashMap();
                        input.put("beObject", order);
                        input.put("priceItems", order.getOfferPrices());
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("offerPriceTable", "org.shaolin.vogerp.ecommercial.form.ROOfferPriceTable", input);
                        @page.addElement(form);
                        
                        form.openInWindows("租赁订单出价历史", new TableCallBack("rentOrderTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="acceptMachiningOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="acceptMachiningOrder-2017-0124-1351">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                    {
                        Table orderInfoTable = (Table)@page.getElement("machiningTable");
                        if (orderInfoTable.getSelectedRow() == null) {
                            Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                            return;
                        }
                        MachiningOrderImpl defaultUser = (MachiningOrderImpl)orderInfoTable.getSelectedRow();
                        
                        MachiningOrderImpl order = (MachiningOrderImpl)EOrderModel.INSTANCE.get(defaultUser.getId(), MachiningOrderImpl.class);
                        
                        HashMap input = new HashMap();
                        input.put("beObject", order);
                        input.put("priceItems", order.getOfferPrices());
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("offerPriceTable", "org.shaolin.vogerp.ecommercial.form.MOOfferPriceTable", input);
                        @page.addElement(form);
                        
                        form.openInWindows("加工订单出价历史", new TableCallBack("machiningTable"), true);
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        
      <ns2:eventHandler functionName="createRentOrder">
          <ns2:ops xsi:type="ns2:OpExecuteScriptType">
	        <ns2:expressionString><![CDATA[
	        {   
	           $(this.selectRentOrderTypePanel).css("display", "block");
	           $(this.selectRentOrderTypePanel).dialog();
	        }
	        ]]></ns2:expressionString>
	      </ns2:ops>
	  </ns2:eventHandler>
	  <ns2:eventHandler functionName="selectedLoanOrder">
	      <ns2:ops xsi:type="ns2:OpExecuteScriptType">
	        <ns2:expressionString><![CDATA[
	        {   
	           $(this.selectRentOrderTypePanel).dialog("close");
	        }
	        ]]></ns2:expressionString>
	      </ns2:ops>
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedLoanOrder-20160602">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import java.util.Date;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.commonmodel.IUserService; 
                  import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                  import org.shaolin.vogerp.ecommercial.ce.RentDateType;
                  import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                  import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                  {
                      IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
                      if (!service.isEnterpriseUser(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("只有企业用户才能发租赁订单!", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      
                      RentOrLoanOrderImpl order = new RentOrLoanOrderImpl();
                      order.setOrgId(UserContext.getUserContext().getOrgId());
                      order.setSerialNumber(OrderUtil.genSerialNumber());
                      order.setStatus(OrderStatusType.CREATED);
                      order.setType(RentOrLoanOrderType.LOAN);
                      order.setDateType(RentDateType.MONTHLY);
                      order.setDateCount(1);
                      order.setPublishedCustomerId(service.getUserId());
                      order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
                      String resourceId = OrderUtil.genResourceId();
                      order.setHtmlDesc("/product/" + resourceId + "/desc.html");
                      order.setPhotos("/product/" + resourceId + "/images");
                      order.setCreateDate(new java.util.Date());
                      order.setCity(UserContext.getUserContext().getCity());
                      order.setLongitude(UserContext.getUserContext().getLongitude());
                      order.setLatitude(UserContext.getUserContext().getLatitude());
                      
                      HashMap input = new HashMap();
                      input.put("beObject", order);
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("rentOrLoanOrder", "org.shaolin.vogerp.ecommercial.form.RentOrderEditor", input);
                      @page.addElement(form);
                      
                      form.openInWindows("新建设备求租订单", new TableCallBack("rentOrderTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
      </ns2:eventHandler>
      <ns2:eventHandler functionName="loanMasterOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="loanMasterOrder-20170613-234">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import java.util.Date;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.commonmodel.IUserService; 
                  import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                  import org.shaolin.vogerp.ecommercial.ce.RentDateType;
                  import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                  import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                  {
                      IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
                      if (!service.isEnterpriseUser(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("只有企业用户才能发租赁订单!", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      
                      RentOrLoanOrderImpl order = new RentOrLoanOrderImpl();
                      order.setOrgId(UserContext.getUserContext().getOrgId());
                      order.setSerialNumber(OrderUtil.genSerialNumber());
                      order.setStatus(OrderStatusType.CREATED);
                      order.setType(RentOrLoanOrderType.FINDMASTER);
                      order.setDateType(RentDateType.MONTHLY);
                      order.setDateCount(1);
                      order.setPublishedCustomerId(service.getUserId());
                      order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
                      order.setCreateDate(new java.util.Date());
                      order.setCity(UserContext.getUserContext().getCity());
                      order.setLongitude(UserContext.getUserContext().getLongitude());
                      order.setLatitude(UserContext.getUserContext().getLatitude());
                      
                      HashMap input = new HashMap();
                      input.put("beObject", order);
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("rentOrLoanOrder", "org.shaolin.vogerp.ecommercial.form.RLoanMasterOrderEditor", input);
                      @page.addElement(form);
                      
                      form.openInWindows("新建找个师傅订单", new TableCallBack("rentOrderTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
      </ns2:eventHandler>
      <ns2:eventHandler functionName="selectedRentOrder">
          <ns2:ops xsi:type="ns2:OpExecuteScriptType">
	        <ns2:expressionString><![CDATA[
	        {   
	           $(this.selectRentOrderTypePanel).dialog("close");
	        }
	        ]]></ns2:expressionString>
	      </ns2:ops>
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedRentOrder-20160602">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import java.util.Date;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.commonmodel.IUserService; 
                  import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                  import org.shaolin.vogerp.ecommercial.ce.RentDateType;
                  import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                  import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                  {
                      IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
                      if (!service.isEnterpriseUser(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("只有企业用户才能发租赁订单!", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      
                      RentOrLoanOrderImpl order = new RentOrLoanOrderImpl();
                      order.setOrgId(UserContext.getUserContext().getOrgId());
                      order.setSerialNumber(OrderUtil.genSerialNumber());
                      order.setStatus(OrderStatusType.CREATED);
                      order.setType(RentOrLoanOrderType.RENT);
                      order.setDateType(RentDateType.MONTHLY);
                      order.setDateCount(1);
                      order.setPublishedCustomerId(service.getUserId());
                      order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
                      String resourceId = OrderUtil.genResourceId();
                      order.setHtmlDesc("/product/" + resourceId + "/desc.html");
                      order.setPhotos("/product/" + resourceId + "/images");
                      order.setCreateDate(new java.util.Date());
                      order.setCity(UserContext.getUserContext().getCity());
                      order.setLongitude(UserContext.getUserContext().getLongitude());
                      order.setLatitude(UserContext.getUserContext().getLatitude());
                      
                      HashMap input = new HashMap();
                      input.put("beObject", order);
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("rentOrLoanOrder", "org.shaolin.vogerp.ecommercial.form.RLoanOrderEditor", input);
                      @page.addElement(form);
                      
                      form.openInWindows("新建空闲设备出租订单", new TableCallBack("rentOrderTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
      </ns2:eventHandler>
      <ns2:eventHandler functionName="openRentOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openRentOrder-201606023543">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
                  import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                  import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  {
                      Table personalInfoTable = (Table)@page.getElement("rentOrderTable");
                      if (personalInfoTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      RentOrLoanOrderImpl defaultUser = (RentOrLoanOrderImpl)personalInfoTable.getSelectedRow();
                      
                      HashMap input = new HashMap();
                      input.put("beObject", defaultUser);
                      if (defaultUser.getStatus() == OrderStatusType.CREATED) {
	                      input.put("editable", new Boolean(true));
                      } else {
                          input.put("editable", new Boolean(false));
                      }
                      String formName = "org.shaolin.vogerp.ecommercial.form.RentOrderEditor";
                      if (defaultUser.getType() == RentOrLoanOrderType.LOAN) {
               	         formName = "org.shaolin.vogerp.ecommercial.form.RLoanOrderEditor";
               	      }
               	      if (defaultUser.getStatus() == OrderStatusType.TAKEN) {
                         formName = "org.shaolin.vogerp.ecommercial.form.OrderPaymentAndDeliveryTrack";
                         input.put("editable", new Boolean(true));
                         input.put("order", defaultUser);
                      }
                      String title = "租赁订单详情";
                      if (defaultUser.getType() == RentOrLoanOrderType.FINDMASTER) {
                         title = "找个师傅订单";
                         formName = "org.shaolin.vogerp.ecommercial.form.RLoanMasterOrderEditor";
                         if (defaultUser.getStatus() == OrderStatusType.TAKEN) { 
                             formName = "org.shaolin.vogerp.ecommercial.form.OrderPaymentWithMasterTrack";
                         }
                      }
                      RefForm form = new RefForm("rentOrLoanOrder", formName, input);
                      @page.addElement(form);
                      
                      form.openInWindows(title, new TableCallBack("rentOrderTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="createMachiningOrder">
          <ns2:ops xsi:type="ns2:OpExecuteScriptType">
	        <ns2:expressionString><![CDATA[
	        {   
	          var o = this;
	          if (this.machiningTable.selectedIndex >= 0) {
		          new UIMaster.ui.dialog({
		              dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,
		              message:'\u662F\u5426\u6309\u7167\u9009\u4E2D\u8BA2\u5355\u590D\u5236\u4E00\u6761\u5417?',
		              messageType:UIMaster.ui.dialog.Information,
		              optionType:UIMaster.ui.dialog.YES_NO_OPTION,
		              title:'',
		              height:150,
		              width:300,
		              handler: function() {
		                  UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"createCopyMachiningOrder-20170125",UIMaster.getValue(eventsource),o.__entityName);
		              },
		              noHandler: function() {
		                  UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"createMachiningOrder-20170125",UIMaster.getValue(eventsource),o.__entityName);
		              },
		          }).open();
		          return;
	          } 
	        }
	        ]]></ns2:expressionString>
	      </ns2:ops>
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createMachiningOrder-20170125">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.commonmodel.IUserService; 
                  import org.shaolin.vogerp.ecommercial.ce.*;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                  {
                      IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
                      if (!service.hasAddressConfigured(UserContext.getUserContext().getUserId())) {
                          Dialog.showMessageDialog("您没有配置默认地址！请到基本信息模块中添加您的地址信息。", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      
                      MachiningOrderImpl order = new MachiningOrderImpl();
                      order.setOrgId(UserContext.getUserContext().getOrgId());
                      order.setSerialNumber(OrderUtil.genSerialNumber());
                      order.setStatus(OrderStatusType.CREATED);
                      order.setPublishedCustomerId(service.getUserId());
                      order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
                      String resourceId = OrderUtil.genResourceId();
                      order.setHtmlDesc("/product/" + resourceId + "/desc.html");
                      order.setPhotos("/product/" + resourceId + "/images");
                      order.setModelFile("/morder/" + resourceId);
                      order.setCount(1);
                      order.setInvoiceType(InvoiceType.NONEED);
                      order.setCreateDate(new java.util.Date());
                      order.setCity(UserContext.getUserContext().getCity());
                      order.setLongitude(UserContext.getUserContext().getLongitude());
                      order.setLatitude(UserContext.getUserContext().getLatitude());
                      
                      HashMap input = new HashMap();
                      input.put("editable", new Boolean(true));
                      input.put("beObject", order);
                      RefForm form = new RefForm("mOrderForm", "org.shaolin.vogerp.ecommercial.form.MachiningOrder", input);
                      @page.addElement(form);
                      
                      form.openInWindows("建立加工订单", new TableCallBack("machiningTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="createCopyMachiningOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createCopyMachiningOrder-20170125">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  import org.shaolin.vogerp.ecommercial.ce.*;
                  import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  {
                      Table personalInfoTable = (Table)@page.getElement("machiningTable");
                      if (personalInfoTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      MachiningOrderImpl eorder = (MachiningOrderImpl)personalInfoTable.getSelectedRow();
                      MachiningOrderImpl order = new MachiningOrderImpl();
                      order.setOrgId(UserContext.getUserContext().getOrgId());
                      order.setSerialNumber(OrderUtil.genSerialNumber());
                      order.setDescription(eorder.getDescription());
                      order.setDifferentiation(eorder.getDifferentiation());
                      order.setStatus(OrderStatusType.CREATED);
                      order.setCreateDate(new java.util.Date());
                      order.setPublishedCustomerId(eorder.getPublishedCustomerId());
                      order.setPublishedCustomer(eorder.getPublishedCustomer());
                      order.setHtmlDesc(eorder.getHtmlDesc());
                      order.setPhotos(eorder.getPhotos());
                      order.setModelFile(eorder.getModelFile());
                      order.setMaterialType(eorder.getMaterialType());
                      order.setInvoiceType(eorder.getInvoiceType());
                      order.setInvoiceSign(eorder.getInvoiceSign());
                      order.setTaxRate(eorder.getTaxRate());
                      order.setEstimatedPrice(eorder.getEstimatedPrice());
                      //can't be copied easily here.
                      //order.setComponents(eorder.getComponents());
                      order.setCount(eorder.getCount());
                      order.setCity(UserContext.getUserContext().getCity());
                      order.setLongitude(UserContext.getUserContext().getLongitude());
                      order.setLatitude(UserContext.getUserContext().getLatitude());
                      
                      HashMap input = new HashMap();
                      input.put("beObject", order);
                      input.put("editable", new Boolean(true));
                      
                      String formUI = "org.shaolin.vogerp.ecommercial.form.MachiningOrder";
                      RefForm form = new RefForm("mOrderForm", formUI, input);
                      @page.addElement(form);
                      
                      form.openInWindows("新建加工订单", new TableCallBack("machiningTable"), true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="openMachiningOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openMachiningOrder-20170125">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.vogerp.ecommercial.ce.*;
                  import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  {
                      Table personalInfoTable = (Table)@page.getElement("machiningTable");
                      if (personalInfoTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      MachiningOrderImpl order = (MachiningOrderImpl)personalInfoTable.getSelectedRow();
                      
                      HashMap input = new HashMap();
                      input.put("beObject", order);
                      if (order.getStatus() == OrderStatusType.CREATED) {
	                      input.put("editable", new Boolean(true));
                      } else {
                          input.put("editable", new Boolean(false));
                      }
                      
                      String title = "加工订单详情";
                      String formUI = "org.shaolin.vogerp.ecommercial.form.MachiningOrder";
                      if ((order.getStatus() != OrderStatusType.CREATED && order.getStatus() != OrderStatusType.VERIFYING) 
                          && order.getEstimatedPrice() > 0) {
                         formUI = "org.shaolin.vogerp.ecommercial.form.MachiningOrderWithResult";
                         input.put("editable", new Boolean(false));
                      }
                      if (order.getStatus() == OrderStatusType.TAKEN) {
                         formUI = "org.shaolin.vogerp.ecommercial.form.OrderPaymentAndDeliveryTrack";
                         input.put("order", order);
                         input.put("editable", new Boolean(true));
                      }
                      RefForm form = new RefForm("mOrderForm", formUI, input);
                      @page.addElement(form);
                      
                      form.openInWindows(title, null, true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="responseOrder">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="responseOrder-20160618-2044">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.Set;
                  import java.util.List;
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
		          import org.shaolin.bmdp.json.JSONObject;
                  import org.shaolin.bmdp.runtime.AppContext;
		          import org.shaolin.bmdp.runtime.ce.CEUtil;
		          import org.shaolin.bmdp.runtime.AppContext;
		          import org.shaolin.bmdp.runtime.security.UserContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
		          import org.shaolin.bmdp.workflow.be.ChatHistoryImpl;
		          import org.shaolin.vogerp.commonmodel.IUserService;
		          import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
		          import org.shaolin.vogerp.ecommercial.ce.*;
                  import org.shaolin.vogerp.ecommercial.be.*;
                  import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                  {
                      Table interestEOrderTable = (Table)@page.getElement("interestEOrderTable");
                      if (interestEOrderTable.getSelectedRow() == null) {
                          Dialog.showMessageDialog("您没有选择任何表条目！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      InterestEOrderImpl item = (InterestEOrderImpl)interestEOrderTable.getSelectedRow();
                      OrderUtil.bindOrder(item);
                      if (item.getOrder().getStatus() == OrderStatusType.TAKEN && 
                          item.getOrder().getTakenCustomerId() != UserContext.getUserContext().getUserId()) {
                          Dialog.showMessageDialog("该订单已被客户拍下！", "", Dialog.WARNING_MESSAGE, null);
                          return;
                      }
                      if (UserContext.isMobileRequest() && UserContext.isAppClient()) {
                      	  //invokes App native javascript api.
                      	  IOfferPrice offeredPrice = null;
				      	  Set items = item.getOrder().getOfferPrices();
				      	  java.util.Iterator iter = items.iterator();
		                  while (iter.hasNext()) {
				      	     IOfferPrice price = (IOfferPrice)iter.next();
				      	     if (price.getTakenCustomerId() == UserContext.getUserContext().getUserId()) {
				      	         offeredPrice = price;
				      	         break;
				      	     }
				      	  }
				      	  String offeredPriceInfo = OrderUtil.getOfferPriceInfo(offeredPrice);
				          String recievedPartyName = CustomerInfoUtil.getCustomerEnterpriseBasicInfo(item.getOrder().getPublishedCustomer());
				      	  
					      ChatHistoryImpl chatItem = new ChatHistoryImpl();
				          chatItem.setOrgId(UserContext.getUserContext().getOrgId());
					      chatItem.setSentPartyId(UserContext.getUserContext().getUserId());
				          chatItem.setReceivedPartyId(item.getOrder().getPublishedCustomerId());
				          chatItem.setSessionId(offeredPrice.getSessionId());
                      	  
                      	  IUserService userService = (IUserService)AppContext.get().getService(IUserService.class); 
                      	  
                      	  HashMap input = new HashMap();
                      	  input.put("recievedPartyName", UserContext.getUserContext().getUserName() + "(" +CEUtil.getValue(UserContext.getUserContext().getCity())+")");
			              input.put("sentPartyName", CustomerInfoUtil.getCustomerEnterpriseBasicInfo(offeredPrice.getTakenCustomer()) + "("+CEUtil.getValue(userService.getUserLocation(offeredPrice.getTakenCustomerId()))+")");
			              if (item.getOrder().getStatus() != OrderStatusType.PUBLISHED) {
			                 input.put("isEditable", Boolean.FALSE);
                          }
                          input.put("orderInfo", item.getOrder().getDescription());
                          input.put("price", offeredPrice.getPrice() + "");
		                  input.put("orgId", chatItem.getOrgId() + "");
		                  input.put("taskId", chatItem.getTaskId() + "");
		                  input.put("sessionId", chatItem.getSessionId());
		                  input.put("sentPartyId", chatItem.getSentPartyId()+ "");
		                  input.put("receivedPartyId", chatItem.getReceivedPartyId()+ "");
		                  input.put("isAdmin", UserContext.getUserContext().isAdmin() + "");
		                  input.remove("beObject");
		                  String json = (new JSONObject(input)).toString();
		                  @page.executeJavaScript("var j=JSON.stringify("+ json +");_mobContext.openChatWindow(j);");
                      } else {
	                      HashMap input = new HashMap();
	                      input.put("beObject", item);
	                      input.put("editable", new Boolean(item.getOrder().getStatus() == OrderStatusType.PUBLISHED));
	                      RefForm form = new RefForm("goldenOrderForm", "org.shaolin.vogerp.ecommercial.form.InterestEOrder", input);
	                      @page.addElement(form);
	                      
	                      form.openInWindows("回复订单", null, true);
                      }
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="capSettings">
          <ns2:ops xsi:type="ns2:OpCallAjaxType" name="capSettings-20170404-1029">
              <ns2:exp>
                  <ns2:expressionString><![CDATA[
                  import java.util.HashMap;
                  import org.shaolin.uimaster.page.AjaxContext;
                  import org.shaolin.uimaster.page.ajax.*;
                  import org.shaolin.vogerp.ecommercial.be.InterestEOrderImpl;
                  import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
                  {
                      HashMap input = new HashMap();
                      input.put("editable", new Boolean(true));
                      RefForm form = new RefForm("settings", "org.shaolin.vogerp.ecommercial.form.InterestSettings", input);
                      @page.addElement(form);
                      
                      form.openInWindows("喜好设置", null, true);
                  }
                  ]]></ns2:expressionString>
              </ns2:exp>
          </ns2:ops>
        </ns2:eventHandler>
        <ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
		   <ns2:UISkin xsi:type="ns2:UISkinType">
		     <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
		     <ns2:param name="text">
		         <ns2:value xsi:type="ns2:StringPropertyType">
		             <ns2:value></ns2:value>
		         </ns2:value>
		     </ns2:param>
		   </ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
			    <ns2:ajaxLoad>true</ns2:ajaxLoad>
			    
                <ns2:tab uiid="machiningInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>我的加工单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="machiningInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="machiningTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.MachiningOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new MachiningOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          $tableCondition.addOrder("statusInt", false);
                                          MachiningOrderImpl condition = (MachiningOrderImpl)$tableCondition.getCondition();
                                          condition.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
                                          return EOrderModel.INSTANCE.searchMachiningOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>序列号</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>描述</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.description</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return StringUtil.getAbbreviatoryString($rowBE.getDescription(), 70);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>状态</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.vogerp.ecommercial.util.OrderUtil;
						                {
						                   return OrderUtil.getOrderStatusInfo($rowBE);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                  <ns2:type>DateRange</ns2:type>
                                  <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
                                  <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
                                </ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.uimaster.page.od.formats.FormatUtil;
                                        import java.util.Date;
                                        {
                                            if ($value == null || "".equals($value)) {
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(null);
                                                } else {
                                                    $rowBE.setEndCreateDate(null);
                                                }
                                            } else {
                                                Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(d);
                                                } else {
                                                    $rowBE.setEndCreateDate(d);
                                                }
                                            }
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultNewAction>createMachiningOrder</ns2:defaultNewAction>
                                <ns2:defaultOpenAction>openMachiningOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                             <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>acceptMachiningOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>竞价记录</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>acceptMachiningOrder</ns2:function>
                                </ns2:action>
                                <!-- 
                                <ns2:action>
                                    <ns2:uiid>capSettings</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>喜好设置</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>capSettings</ns2:function>
                                </ns2:action>
                                 -->
                             </ns2:actionGroup>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>machiningTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
			    
                <ns2:tab uiid="goldenOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>我的抢购单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="goldenOrderInfoPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="goldenOrderTable">
		                    <ns2:beElement>org.shaolin.vogerp.ecommercial.be.GoldenOrder</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>10</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
		                            import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
		                            import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new GoldenOrderImpl());
	                                         $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
		                                  }
	                                      $tableCondition.addOrder("statusInt", false);
		                                  GoldenOrderImpl condition = (GoldenOrderImpl)$tableCondition.getCondition();
		                                  if (!AppContext.isMasterNode()) {
			                                  condition.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
		                                  }
		                                  return EOrderModel.INSTANCE.searchGoldenOrder(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>序列号</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>类型</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.type</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
                                        {
                                            $rowBE.setType((GoldenOrderType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.GoldenOrderType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>描述</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.description</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return StringUtil.getAbbreviatoryString($rowBE.getDescription(), 70);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>状态</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.status</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.vogerp.ecommercial.util.OrderUtil;
						                {
						                   return OrderUtil.getOrderStatusInfo($rowBE);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>建立时间</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType">
		                          <ns2:type>DateRange</ns2:type>
		                          <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
		                          <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
		                        </ns2:uiType>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.uimaster.page.od.formats.FormatUtil;
		                                import java.util.Date;
		                                {
		                                    if ($value == null || "".equals($value)) {
		                                        if ("rowBE.startCreateDate".equals($filterId)) {
		                                            $rowBE.setStartCreateDate(null);
		                                        } else {
		                                            $rowBE.setEndCreateDate(null);
		                                        }
		                                    } else {
		                                        Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
		                                        if ("rowBE.startCreateDate".equals($filterId)) {
		                                            $rowBE.setStartCreateDate(d);
		                                        } else {
		                                            $rowBE.setEndCreateDate(d);
		                                        }
		                                    }
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createGOrder</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openGoldenOrder</ns2:defaultOpenAction>
		                        <ns2:defaultDisableAction>disableProduct</ns2:defaultDisableAction>
		                    </ns2:defaultActions>
		                    <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>acceptGoldenOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>竞价记录</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>acceptGoldenOrder</ns2:function>
                                </ns2:action>
                             </ns2:actionGroup>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>goldenOrderTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
                  
                  <ns2:tab uiid="rentOrderInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>我的租赁单</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="rentOrderInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="rentOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.RentOrLoanOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new RentOrLoanOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          $tableCondition.addOrder("statusInt", false);
                                          RentOrLoanOrderImpl condition = (RentOrLoanOrderImpl)$tableCondition.getCondition();
                                          condition.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
                                          return EOrderModel.INSTANCE.searchRentOrLoanOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>序列号</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>类型</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.type</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType;
                                        {
                                            $rowBE.setType((RentOrLoanOrderType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.RentOrLoanOrderType").getByIntValue(Integer.valueOf($value).intValue()));
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>描述</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.description</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return StringUtil.getAbbreviatoryString($rowBE.getDescription(), 70);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>状态</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.vogerp.ecommercial.util.OrderUtil;
						                {
						                   return OrderUtil.getOrderStatusInfo($rowBE);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                  <ns2:type>DateRange</ns2:type>
                                  <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
                                  <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
                                </ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.uimaster.page.od.formats.FormatUtil;
                                        import java.util.Date;
                                        {
                                            if ($value == null || "".equals($value)) {
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(null);
                                                } else {
                                                    $rowBE.setEndCreateDate(null);
                                                }
                                            } else {
                                                Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
                                                if ("rowBE.startCreateDate".equals($filterId)) {
                                                    $rowBE.setStartCreateDate(d);
                                                } else {
                                                    $rowBE.setEndCreateDate(d);
                                                }
                                            }
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultNewAction>createRentOrder</ns2:defaultNewAction>
                                <ns2:defaultOpenAction>openRentOrder</ns2:defaultOpenAction>
                                <ns2:defaultDisableAction>disableRentOrder</ns2:defaultDisableAction>
                            </ns2:defaultActions>
                            <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>loanMasterOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>租个师傅</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>loanMasterOrder</ns2:function>
                                </ns2:action>
                                <ns2:action>
                                    <ns2:uiid>acceptRentOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>竞价记录</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>acceptRentOrder</ns2:function>
                                </ns2:action>
                             </ns2:actionGroup>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>rentOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>

                <ns2:tab uiid="interestEOrderPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>我的出价历史</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="interestEOrderPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="interestEOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.ecommercial.be.InterestEOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>10</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.uimaster.page.ajax.TableConditions;
                                    import org.shaolin.vogerp.ecommercial.be.InterestEOrderImpl;
                                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
                                    {
                                          if ($tableCondition == null) {
                                             $tableCondition = TableConditions.createCondition(new InterestEOrderImpl());
                                             $tableCondition.setCount(10);
                                             $tableCondition.addOrder("createDate", false);
                                          }
                                          InterestEOrderImpl condition = (InterestEOrderImpl)$tableCondition.getCondition();
                                          condition.setOrgId(UserContext.getUserContext().getOrgId());
                                          return EOrderModel.INSTANCE.searchInterestEOrder(condition,
                                                        $tableCondition.getOrders(),
                                                        $tableCondition.getOffset(), 
                                                        $tableCondition.getCount());
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:rowFilter xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                    import java.util.List;
                                    import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
                                    import org.shaolin.bmdp.runtime.AppContext; 
                                    import org.shaolin.vogerp.commonmodel.IUserService;
                                    import org.shaolin.bmdp.runtime.security.UserContext;
                                    import org.shaolin.vogerp.ecommercial.ce.GOrderType;
                                    {
                                        //TODO:
                                        return true;
                                    }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:rowFilter>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>订单信息</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.orderId</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                        import org.shaolin.bmdp.runtime.AppContext;
                                        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                                        {
                                            return OrderUtil.getOrderInfo($rowBE);
                                        }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
                            </ns2:column>
                            <ns2:defaultActions>
                                <ns2:defaultOpenAction>responseOrder</ns2:defaultOpenAction>
                            </ns2:defaultActions>
                            <ns2:actionGroup>
                                <ns2:type>radio</ns2:type>
                                <ns2:action>
                                    <ns2:uiid>responseOrder</ns2:uiid>
                                    <ns2:title xsi:type="ns2:StringPropertyType">
                                        <ns2:value>回复</ns2:value>
                                    </ns2:title>
                                    <ns2:icon>ui-icon-note</ns2:icon>
                                    <ns2:function>responseOrder</ns2:function>
                                </ns2:action>
                             </ns2:actionGroup>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>interestEOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                  </ns2:tab>
               </ns2:component>
               
               <ns2:component xsi:type="ns2:UIPanelType" UIID="selectGTypePanel">
			      <ns2:layout xsi:type="ns2:TableLayoutType">
			        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
			        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
			        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
			        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			      </ns2:layout>
			      <ns2:Property name="style">
		             <ns2:value xsi:type="ns2:StringPropertyType">
		                 <value>display:none</value>
		             </ns2:value>
		          </ns2:Property>
			      <ns2:component xsi:type="ns2:UIButtonType" UIID="purchaseOrderLabel">
			        <ns2:UIStyle></ns2:UIStyle>
			        <ns2:text xsi:type="ns2:StringPropertyType">
			          <ns2:value>创建采购订单</ns2:value>
			        </ns2:text>
			        <ns2:EventListener xsi:type="ns2:ClickListenerType">
			          <ns2:handler functionName="selectedPurchaseOrder"></ns2:handler>
			        </ns2:EventListener>
			      </ns2:component>
			      <ns2:component xsi:type="ns2:UIButtonType" UIID="saleOrderLabel">
			        <ns2:UIStyle></ns2:UIStyle>
			        <ns2:text xsi:type="ns2:StringPropertyType">
			          <ns2:value>创建销售订单</ns2:value>
			        </ns2:text>
			        <ns2:EventListener xsi:type="ns2:ClickListenerType">
			          <ns2:handler functionName="selectedSaleOrder"></ns2:handler>
			        </ns2:EventListener>
			      </ns2:component>
			      <ns2:component xsi:type="ns2:UILabelType" UIID="hintsLabel">
			        <ns2:UIStyle></ns2:UIStyle>
			        <ns2:text xsi:type="ns2:StringPropertyType">
			          <ns2:value></ns2:value>
			        </ns2:text>
			        <ns2:Property name="htmlValue">
		               <ns2:value xsi:type="ns2:StringPropertyType">
		                   <value>您可以创建批量机械产品的采购或销售。加工零件请到“我的加工单”里添加订单。</value>
		               </ns2:value>
		            </ns2:Property>
			      </ns2:component>
			      <ns2:layoutConstraint>
			        <ns2:componentId>saleOrderLabel</ns2:componentId>
			        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
			      </ns2:layoutConstraint>
			      <ns2:layoutConstraint>
			        <ns2:componentId>purchaseOrderLabel</ns2:componentId>
			        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
			      </ns2:layoutConstraint>
			      <ns2:layoutConstraint>
			        <ns2:componentId>hintsLabel</ns2:componentId>
			        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL"></ns2:constraint>
			      </ns2:layoutConstraint>
			  </ns2:component>
               <ns2:component xsi:type="ns2:UIPanelType" UIID="selectRentOrderTypePanel">
			      <ns2:layout xsi:type="ns2:TableLayoutType">
			        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
			        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
			        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			      </ns2:layout>
			      <ns2:Property name="style">
		             <ns2:value xsi:type="ns2:StringPropertyType">
		                 <value>display:none</value>
		             </ns2:value>
		          </ns2:Property>
			      <ns2:component xsi:type="ns2:UIButtonType" UIID="loanOrderLabel">
			        <ns2:UIStyle></ns2:UIStyle>
			        <ns2:text xsi:type="ns2:StringPropertyType">
			          <ns2:value>创建设备求租订单</ns2:value>
			        </ns2:text>
			        <ns2:EventListener xsi:type="ns2:ClickListenerType">
			          <ns2:handler functionName="selectedLoanOrder"></ns2:handler>
			        </ns2:EventListener>
			      </ns2:component>
			      <ns2:component xsi:type="ns2:UIButtonType" UIID="rentOrderLabel">
			        <ns2:UIStyle></ns2:UIStyle>
			        <ns2:text xsi:type="ns2:StringPropertyType">
			          <ns2:value>创建设备出租订单</ns2:value>
			        </ns2:text>
			        <ns2:EventListener xsi:type="ns2:ClickListenerType">
			          <ns2:handler functionName="selectedRentOrder"></ns2:handler>
			        </ns2:EventListener>
			      </ns2:component>
			      <ns2:layoutConstraint>
			        <ns2:componentId>loanOrderLabel</ns2:componentId>
			        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
			      </ns2:layoutConstraint>
			      <ns2:layoutConstraint>
			        <ns2:componentId>rentOrderLabel</ns2:componentId>
			        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
			      </ns2:layoutConstraint>
			  </ns2:component>
			   <ns2:layoutConstraint>
                  <ns2:componentId>functionsTab</ns2:componentId>
                  <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
               <ns2:layoutConstraint>
                  <ns2:componentId>selectGTypePanel</ns2:componentId>
                  <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
               <ns2:layoutConstraint>
                  <ns2:componentId>selectRentOrderTypePanel</ns2:componentId>
                  <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL"></ns2:constraint>
               </ns2:layoutConstraint>
		  </ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	</ns2:ODMapping>
	<ns2:in>
		<ns2:serverOperation xsi:type="ns2:ExpressionType">
			<ns2:expressionString><![CDATA[
			import org.shaolin.bmdp.runtime.AppContext;
		    import org.shaolin.bmdp.workflow.be.NotificationImpl;
			{
			  @odContext.executeAllMappings();
			}]]></ns2:expressionString>
		</ns2:serverOperation>
	</ns2:in>
</ns2:UIPage>
