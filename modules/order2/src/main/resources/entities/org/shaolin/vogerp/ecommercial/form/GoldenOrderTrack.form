<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.ecommercial.form.GoldenOrderTrack</entityName>
  <systemVersion>0</systemVersion>
  
  <ns2:eventHandler functionName="openTakenGoldenOrder">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
            this.paymentTable.syncBodyDataToServer();
            this.paymentTable.sync();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openTakenGoldenOrder-2016-1214-1351">
        <ns2:exp>
            <ns2:expressionString><![CDATA[
            import java.util.HashMap;
            import org.shaolin.uimaster.page.AjaxContext;
            import org.shaolin.uimaster.page.ajax.*;
            import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
            import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
            {
                Table t = (Table)@page.getElement("paymentTable");
                if (t.getSelectedRow() == null) {
                    return;
                }
                GoldenOrderImpl defaultUser = (GoldenOrderImpl)t.getSelectedRow();
                
                HashMap input = new HashMap();
                input.put("beObject", defaultUser);
                input.put("editable", new Boolean(false));
                
                String formName = "org.shaolin.vogerp.ecommercial.form.GoldenOrderEditor";
                if (defaultUser.getType() == GoldenOrderType.SALE) {
                    formName = "org.shaolin.vogerp.ecommercial.form.GoldenSaleOrderEditor";
                }
                
                RefForm form = new RefForm("goldenOrderForm", formName, input);
                @page.addElement(form);
                
                form.openInWindows("抢购订单详情", null, true);
            }
            ]]></ns2:expressionString>
        </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="orderTrackDetail">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
            this.paymentTable.syncBodyDataToServer();
            this.paymentTable.sync();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="orderTrackDetail-2017-0219-1651">
        <ns2:exp>
            <ns2:expressionString><![CDATA[
            import java.util.HashMap;
            import org.shaolin.bmdp.runtime.AppContext;
            import org.shaolin.uimaster.page.AjaxContext;
            import org.shaolin.uimaster.page.ajax.*;
            import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
            import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
            import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
            import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
            {
                Table t = (Table)@page.getElement("paymentTable");
                if (t.getSelectedRow() == null) {
                    return;
                }
                GoldenOrderImpl defaultUser = (GoldenOrderImpl)t.getSelectedRow();
                
                HashMap input = new HashMap();
                input.put("order", defaultUser);
                input.put("editable", new Boolean(true));
                RefForm form = new RefForm("goldenOrderForm", "org.shaolin.vogerp.ecommercial.form.OrderPaymentAndDeliveryTrack", input);
                @page.addElement(form);
                
                form.openInWindows("订单拍下详情", null, true);
            }
            ]]></ns2:expressionString>
        </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="updateAddress">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
            this.paymentTable.syncBodyDataToServer();
            this.paymentTable.sync();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="updateAddress-2017-0219-1141">
        <ns2:exp>
            <ns2:expressionString><![CDATA[
            import java.util.HashMap;
            import org.shaolin.bmdp.runtime.AppContext;
            import org.shaolin.uimaster.page.AjaxContext;
            import org.shaolin.uimaster.page.ajax.*;
            import org.shaolin.bmdp.runtime.security.UserContext;
            import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
            import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
            import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
            import org.shaolin.vogerp.commonmodel.be.DeliveryInfoImpl;
            {
                Table t = (Table)@page.getElement("paymentTable");
                if (t.getSelectedRow() == null) {
                    return;
                }
                GoldenOrderImpl defaultUser = (GoldenOrderImpl)t.getSelectedRow();
                DeliveryInfoImpl deliveryInfo = (DeliveryInfoImpl)OrderModel.INSTANCE.get(defaultUser.getDeliveryInfoId(), DeliveryInfoImpl.class);
                
                HashMap input = new HashMap();
                input.put("beObject", deliveryInfo);
                input.put("editable", new Boolean(true));
                String formName = "org.shaolin.vogerp.commonmodel.form.SelectDeliveryInfo";
                if (deliveryInfo.getToUserId() == UserContext.getUserContext().getUserId()) {
                   formName = "org.shaolin.vogerp.commonmodel.form.SelectReceiverInfo";
                }
                RefForm form = new RefForm("addressInfoForm", formName, input);
                @page.addElement(form);
                
                form.openInWindows("地址详情", null, true);
            }
            ]]></ns2:expressionString>
        </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    
    <ns2:component xsi:type="ns2:UITableType" UIID="paymentTable">
      <ns2:beElement>org.shaolin.vogerp.ecommercial.be.GoldenOrder</ns2:beElement>
      <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
      <ns2:defaultRowSize>10</ns2:defaultRowSize>
      <ns2:showActionBar>true</ns2:showActionBar>
      <ns2:showFilter>true</ns2:showFilter>
      <ns2:query xsi:type="ns2:ExpressionPropertyType">
          <ns2:expression xsi:type="ns2:ExpressionType">
              <ns2:expressionString><![CDATA[
              import java.util.List;
              import org.shaolin.uimaster.page.ajax.TableConditions;
              import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
              import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
              import org.shaolin.vogerp.ecommercial.dao.CustOrderModel;
              import org.shaolin.bmdp.runtime.AppContext; 
              import org.shaolin.vogerp.commonmodel.IUserService;
              import org.shaolin.bmdp.runtime.security.UserContext;
              import org.shaolin.vogerp.ecommercial.ce.GOrderType;
              import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
              import org.shaolin.vogerp.accounting.IPaymentService;
              import org.shaolin.vogerp.accounting.ce.PayOrderStatusType;
              {
                    if ($tableCondition == null) {
                       $tableCondition = TableConditions.createCondition(new GoldenOrderImpl());
                       $tableCondition.setCount(10);
                       $tableCondition.addOrder("statusInt", true);
                       $tableCondition.addOrder("createDate", false);
                    }
                    GoldenOrderImpl condition = (GoldenOrderImpl)$tableCondition.getCondition();
                    condition.setPublishedCustomerId(UserContext.getUserContext().getUserId());
                    condition.setTakenCustomerId(UserContext.getUserContext().getUserId());
                    condition.setStatus(OrderStatusType.TAKEN);
                    List result = CustOrderModel.INSTANCE.searchGoldenOrder(condition,
                                  $tableCondition.getOrders(),
                                  $tableCondition.getOffset(), 
                                  $tableCondition.getCount());
                    // sync payorder status.
                    IPaymentService payservice = (IPaymentService)AppContext.get().getService(IPaymentService.class);
                    for (int i=0; i<result.size(); i++) {
                        GoldenOrderImpl order = ((GoldenOrderImpl)result.get(i));
                        PayOrderStatusType state = payservice.queryForPayStatus(order.getSerialNumber());
                        order.setPayStatus("("+state.getDisplayName()+")");
                    }
                    return result;
              }]]></ns2:expressionString>
          </ns2:expression>
      </ns2:query>
      <ns2:column xsi:type="ns2:UITableColumnType">
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>序列号</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
          <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  {
                      return $rowBE.getSerialNumber() + $rowBE.getPayStatus();
                  }]]></ns2:expressionString>
              </ns2:expression>
          </ns2:rowExpression>
      </ns2:column>
      <ns2:column xsi:type="ns2:UITableColumnType">
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>类型</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.type</ns2:beFieldId>
          <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.vogerp.ecommercial.ce.GoldenOrderType;
                  {
                      $rowBE.setType((GoldenOrderType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.ecommercial.ce.GoldenOrderType").getByIntValue(Integer.valueOf($value).intValue()));
                  }]]></ns2:expressionString>
              </ns2:expression>
          </ns2:updateCondition>
      </ns2:column>
      <ns2:column xsi:type="ns2:UITableColumnType">
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>拍下客户</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.publishedCustomerId</ns2:beFieldId>
          <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  import org.shaolin.bmdp.runtime.AppContext;
                  import org.shaolin.vogerp.ecommercial.dao.OrderModel;
                  import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
                  import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
                  {
                      if ($rowBE.getTakenCustomerId() > 0) {
                         PersonalInfoImpl pInfo = (PersonalInfoImpl)OrderModel.INSTANCE.get($rowBE.getTakenCustomerId(), PersonalInfoImpl.class);
                         $rowBE.setTakenCustomer(pInfo);
                         return CustomerInfoUtil.getCustomerEnterpriseBasicInfo($rowBE.getTakenCustomer());
                      }
                      return "";
                  }]]></ns2:expressionString>
              </ns2:expression>
          </ns2:rowExpression>
          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  import org.shaolin.bmdp.runtime.AppContext;
                  {
                      if (!"".equals($value) && !"null".equals($value)) {
                          //$rowBE.getCustomer().setName($value);
                      } else {
                          //`$rowBE.getCustomer().setName(null);
                      }
                  }]]></ns2:expressionString>
              </ns2:expression>
          </ns2:updateCondition>
      </ns2:column>
      <ns2:column xsi:type="ns2:UITableColumnType">
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>描述</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.description</ns2:beFieldId>
          <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  import org.shaolin.bmdp.utils.StringUtil;
			      {
			         return StringUtil.escape(StringUtil.getAbbreviatoryString($rowBE.getDescription(), 10));
			      }
                  ]]></ns2:expressionString>
              </ns2:expression>
          </ns2:rowExpression>
      </ns2:column>
      <ns2:column xsi:type="ns2:UITableColumnType">
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>成交价格</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.endPrice</ns2:beFieldId>
          <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
      </ns2:column>
      <ns2:column xsi:type="ns2:UITableColumnType">
          <ns2:title xsi:type="ns2:StringPropertyType">
              <ns2:value>建立时间</ns2:value>
          </ns2:title>
          <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
          <ns2:uiType xsi:type="ns2:UITableColHTMLType">
            <ns2:type>DateRange</ns2:type>
            <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition> 
            <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
          </ns2:uiType>
          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
              <ns2:expression xsi:type="ns2:ExpressionType">
                  <ns2:expressionString><![CDATA[
                  import org.shaolin.uimaster.page.od.formats.FormatUtil;
                  import java.util.Date;
                  {
                      if ($value == null || "".equals($value)) {
                          if ("rowBE.startCreateDate".equals($filterId)) {
                              $rowBE.setStartCreateDate(null);
                          } else {
                              $rowBE.setEndCreateDate(null);
                          }
                      } else {
                          Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
                          if ("rowBE.startCreateDate".equals($filterId)) {
                              $rowBE.setStartCreateDate(d);
                          } else {
                              $rowBE.setEndCreateDate(d);
                          }
                      }
                  }]]></ns2:expressionString>
              </ns2:expression>
          </ns2:updateCondition>
      </ns2:column>
      <ns2:defaultActions>
          <ns2:defaultOpenAction>orderTrackDetail</ns2:defaultOpenAction>
      </ns2:defaultActions>
      <ns2:actionGroup>
          <ns2:type>radio</ns2:type>
          <ns2:action>
              <ns2:uiid>orderTrackDetail</ns2:uiid>
              <ns2:title xsi:type="ns2:StringPropertyType">
                  <ns2:value>详情</ns2:value>
              </ns2:title>
              <ns2:icon>ui-icon-note</ns2:icon>
              <ns2:function>orderTrackDetail</ns2:function>
          </ns2:action>
          <ns2:action>
              <ns2:uiid>updateAddress</ns2:uiid>
              <ns2:title xsi:type="ns2:StringPropertyType">
                  <ns2:value>更新地址</ns2:value>
              </ns2:title>
              <ns2:icon>ui-icon-note</ns2:icon>
              <ns2:function>updateAddress</ns2:function>
          </ns2:action>
       </ns2:actionGroup>
     </ns2:component>
    
    <ns2:layoutConstraint>
      <ns2:componentId>paymentTable</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL" cellUIClass=""></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
	    {
		}
    ]]></ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.GoldenOrder"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataToUIMappingOperation>
      <expressionString>
      {
        @odContext.executeAllMappings();
      }</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
        @odContext.executeAllMappings();
      }</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>