<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram"
 xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page"
 xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
 <entityName>org.shaolin.vogerp.ecommercial.form.SearchBar_mob</entityName>
 <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="selectFilterCondition">
   <ns2:ops xsi:type="ns2:OpExecuteScriptType">
         <ns2:expressionString><![CDATA[
         {
           UIMaster.setCookie("scopeSelectFilter", UIEntity.selectFilterUI.getValue());
         }
         ]]></ns2:expressionString>
     </ns2:ops>
   <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectFilterCondition-20170409-1411">
    <ns2:exp>
     <expressionString><![CDATA[
          import java.util.HashMap;
          import org.shaolin.bmdp.runtime.AppContext;
          import org.shaolin.uimaster.page.AjaxContext;
          import org.shaolin.uimaster.page.ajax.*;
          import org.shaolin.vogerp.commonmodel.IUserService;
          import org.shaolin.bmdp.runtime.AppContext;
          import org.shaolin.bmdp.runtime.security.UserContext;
          { 
             RadioButtonGroup buttonGroup = @page.getRadioBtnGroup("selectFilterUI");
             if ("1".equals(buttonGroup.getValue())) {
                  HashMap input = new HashMap();
                  
                  input.put("selectedCity", @page.getHidden("citiesCbxUI").getValue());
	              input.put("parentUIID", @page.getEntityUiid() + ".citiesCbxUI");
	              input.put("editable", new Boolean(true));
	              RefForm form = new RefForm("cityListForm", "org.shaolin.vogerp.commonmodel.form.CitySelelctor_mob", input);
	              @page.addElement(form);
	              form.openInBottomDialog();
	              form.openInWindows("选择城市", new FunctionCallBack(@page, "selectedCity-201604102211"), true);
             } else if ("2".equals(buttonGroup.getValue())) {
                //TODO: allow to set a scope of longtitude and lantitudu.
                //@page.getHidden("areaScopeUI").setValue(100);
             } else if ("3".equals(buttonGroup.getValue())) {
                  @page.getHidden("citiesCbxUI").setValue(null);
                  @page.getHidden("productTypeUI").setValue(null);
                  @page.getHidden("productType1UI").setValue(null);
             }
             
             TabPane tab = (TabPane)@page.getElementByAbsoluteId("functionsTab", TabPane.class);
             if (tab != null) {
                 String tableUiid = "";
                 if (tab.getSelectedIndex() == 0) {
                    tableUiid = "machingOrderTable";
                 } else if (tab.getSelectedIndex() == 1) {
                    tableUiid = "goldenOrderTable";
                 } else if (tab.getSelectedIndex() == 2) {
                    tableUiid = "gsaleOrderTable";
                 } else if (tab.getSelectedIndex() == 3) {
                    tableUiid = "rentOrderTable";
                 } else if (tab.getSelectedIndex() == 4) {
                    tableUiid = "loanOrderTable";
                 } 
                 Table t = (Table)@page.getElementByAbsoluteId(tableUiid, Table.class);
                 t.refresh();
             }
          }
          ]]></expressionString>
    </ns2:exp>
   </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="selectedCity">
   <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedCity-201604102211">
    <ns2:exp>
     <expressionString><![CDATA[
          import java.util.HashMap;
          import org.shaolin.bmdp.runtime.AppContext;
          import org.shaolin.uimaster.page.AjaxContext;
          import org.shaolin.uimaster.page.ajax.*;
          {
              //TODO:
          }
          ]]></expressionString>
    </ns2:exp>
   </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="selectedProductType">
   <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedProductType-201604102211">
    <ns2:exp>
     <expressionString><![CDATA[
          import java.util.HashMap;
          import org.shaolin.bmdp.runtime.AppContext;
          import org.shaolin.uimaster.page.AjaxContext;
          import org.shaolin.uimaster.page.ajax.*;
          {
              //TODO:
          }
          ]]></expressionString>
    </ns2:exp>
   </ns2:ops>
  </ns2:eventHandler>
 <ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
  <ns2:layout xsi:type="ns2:TableLayoutType">
   <ns2:rowHeightWeight>0</ns2:rowHeightWeight>
   <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
  </ns2:layout>
  <ns2:component xsi:type="ns2:UIPanelType" UIID="root">
   <ns2:layout xsi:type="ns2:TableLayoutType">
     <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
     <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
   </ns2:layout>
   <ns2:component xsi:type="ns2:UIRadioButtonGroupType" UIID="selectFilterUI">
        <ns2:Property name="horizontalLayout" >
         <ns2:value xsi:type="ns2:BooleanPropertyType">
            <value>true</value>
         </ns2:value>
        </ns2:Property>
        <ns2:Property name="colCount" >
	         <ns2:value xsi:type="ns2:NumericPropertyType">
	            <type>int</type>
	            <value>3</value>
	         </ns2:value>
         </ns2:Property>
         <ns2:Property name="value" >
	         <ns2:value xsi:type="ns2:StringPropertyType">
	            <value>1</value>
	         </ns2:value>
         </ns2:Property>
         <ns2:Property name="optionValue">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
	         <ns2:expression>
	           <expressionString><![CDATA[
	           import java.util.ArrayList;
	           { 
	               ArrayList list = new ArrayList();
	               list.add("1");
	               list.add("2");
	               list.add("3");
	               return list; 
	           }]]></expressionString>
	         </ns2:expression>
           </ns2:value>
         </ns2:Property>
         <ns2:Property name="optionDisplayValue">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
	         <ns2:expression>
	           <expressionString><![CDATA[
	           import java.util.ArrayList;
	           { 
	               ArrayList list = new ArrayList();
	               list.add("按城市");
	               list.add("按登录区域");
	               list.add("按全国");
	               return list; 
	           }]]></expressionString>
	         </ns2:expression>
           </ns2:value>
        </ns2:Property>
        <!-- 
        <ns2:EventListener xsi:type="ns2:ItemChangeListenerType">
          <ns2:handler functionName="selectFilterCondition"></ns2:handler>
        </ns2:EventListener>
         -->
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="selectFilterCondition"></ns2:handler>
        </ns2:EventListener>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="citiesCbxUI">
       <ns2:text xsi:type="ns2:StringPropertyType">
           <ns2:value>选择城市</ns2:value>
        </ns2:text>
     </ns2:component>
     <ns2:component xsi:type="ns2:UIHiddenType" UIID="productTypeUI">
       <ns2:text xsi:type="ns2:StringPropertyType">
           <ns2:value>选择产品类型</ns2:value>
        </ns2:text>
     </ns2:component>
     <ns2:component xsi:type="ns2:UIHiddenType" UIID="productType1UI">
     </ns2:component>
     <ns2:component xsi:type="ns2:UIHiddenType" UIID="areaScopeUI">
     </ns2:component>
     <ns2:layoutConstraint>
         <ns2:componentId>selectFilterUI</ns2:componentId>
         <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
          x="0" y="0" align="FULL"></ns2:constraint>
     </ns2:layoutConstraint>
  </ns2:component>
  <ns2:layoutConstraint>
   <ns2:componentId>root</ns2:componentId>
   <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
    x="0" y="0" align="FULL"></ns2:constraint>
  </ns2:layoutConstraint>
  <ns2:constructorCode>
    <![CDATA[
    {
       var cachedValue = UIMaster.getCookie("scopeSelectFilter");
       if (cachedValue == null) {
          UIMaster.setCookie("scopeSelectFilter", this.selectFilterUI.getValue());
       } else {
          this.selectFilterUI.setValue(cachedValue);
          if (cachedValue != "1") {
             this.selectFilterCondition(this.selectFilterUI, event);
          }
       }
    }]]>
   </ns2:constructorCode>
 </ns2:body>
 <ns2:mapping>
 </ns2:mapping>
</ns2:UIEntity>
