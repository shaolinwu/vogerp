<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.ecommercial.form.GoldenOrderPreEditor</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail-20160106-214008">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="selectedPurchaseOrder">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.selectTypePanel).dialog("close");
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedPurchaseOrder-20170106-214008">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.bmdp.utils.DateUtil;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.bmdp.runtime.security.UserContext;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.commonmodel.IUserService; 
        import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
        import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
        import org.shaolin.vogerp.ecommercial.ce.*;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        import org.shaolin.vogerp.productmodel.util.ProductUtil;
        import org.shaolin.vogerp.productmodel.be.ProductPriceImpl;
        { 
            Tree tree = @page.getTree("priceSelector.productTree");
            ProductPriceImpl price = (ProductPriceImpl)tree.getSelectedObject();
            if (price == null) {
                Dialog.showMessageDialog("请配制或者选择一个产品价格包。", "Information", Dialog.INFORMATION_MESSAGE, null);
                return;
            }
            
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 

            IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
            GoldenOrderImpl order = new GoldenOrderImpl();
            order.setOrgId(UserContext.getUserContext().getOrgId());
            order.setSerialNumber(OrderUtil.genSerialNumber());
            order.setStatus(OrderStatusType.CREATED);
            order.setType(GoldenOrderType.PURCHASE);
            order.setPublishedCustomerId(service.getUserId());
            order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
            order.setCreateDate(new java.util.Date());
            order.setCount(1);
            order.setCity(UserContext.getUserContext().getCity());
            order.setLongitude(UserContext.getUserContext().getLongitude());
            order.setLatitude(UserContext.getUserContext().getLatitude());
            order.setProductId(price.getProduct().getId());
            order.setDescription(price.getProduct().getName() + "\n" + ProductUtil.getPricePackage(price));
            order.setInvoiceType(InvoiceType.NONEED);
            
            String resourceId = OrderUtil.genResourceId();
            if (price.getProduct().getHtmlDesc() != null && price.getProduct().getHtmlDesc().length() > 0) {
               order.setHtmlDesc(price.getProduct().getHtmlDesc());
            } else {
               order.setHtmlDesc("/product/" + resourceId + "/desc.html");
            }
            if (price.getProduct().getPhotos() != null && price.getProduct().getPhotos().length() > 0) {
               order.setPhotos(price.getProduct().getPhotos());
            } else {
               order.setPhotos("/product/" + resourceId + "/images");
            }
            
            order.setEstimatedPrice(price.getPrice());
            // java.util.Date expireDate = new java.util.Date();
            // DateUtil.increaseDays(expireDate, 7);
            // plus 7 days as default.
            // beObject.setExpiredDate(expireDate);
            order.setCount(1);
            
            HashMap input = new HashMap();
            input.put("beObject", order);
            input.put("editable", new Boolean(true));
            
            RefForm form1 = new RefForm("goldenOrderForm1", "org.shaolin.vogerp.ecommercial.form.GoldenOrderEditor", input);
            @page.addElement(form1);
            
            form1.openInWindows("新建采购订单", new TableCallBack("goldenOrderTable"), true);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="selectedSaleOrder">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.selectTypePanel).dialog("close");
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedSaleOrder-20170106-214008">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.bmdp.utils.DateUtil;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.bmdp.runtime.security.UserContext;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.commonmodel.IUserService; 
        import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
        import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
        import org.shaolin.vogerp.ecommercial.ce.*;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        import org.shaolin.vogerp.productmodel.util.ProductUtil;
        import org.shaolin.vogerp.productmodel.be.ProductPriceImpl;
        { 
            IUserService service = (IUserService)AppContext.get().getService(IUserService.class); 
            if (!service.isEnterpriseUser(UserContext.getUserContext().getUserId())) {
                Dialog.showMessageDialog("只有企业用户才能发销售订单!", "", Dialog.WARNING_MESSAGE, null);
                return;
            }
            
            Tree tree = @page.getTree("priceSelector.productTree");
            ProductPriceImpl price = (ProductPriceImpl)tree.getSelectedObject();
            if (price == null) {
                Dialog.showMessageDialog("请配制或者选择一个产品价格包。", "Information", Dialog.INFORMATION_MESSAGE, null);
                return;
            }
            
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 

            GoldenOrderImpl order = new GoldenOrderImpl();
            order.setOrgId(UserContext.getUserContext().getOrgId());
            order.setSerialNumber(OrderUtil.genSerialNumber());
            order.setStatus(OrderStatusType.CREATED);
            order.setType(GoldenOrderType.SALE);
            order.setPublishedCustomerId(service.getUserId());
            order.setPublishedCustomer((PersonalInfoImpl)service.getPersonalInfo(service.getUserId()));
            order.setCreateDate(new java.util.Date());
            order.setCount(1);
            order.setCity(UserContext.getUserContext().getCity());
            order.setLongitude(UserContext.getUserContext().getLongitude());
            order.setLatitude(UserContext.getUserContext().getLatitude());
            order.setProductId(price.getProduct().getId());
            order.setDescription(price.getProduct().getName() + "\n" + ProductUtil.getPricePackage(price));
            order.setInvoiceType(InvoiceType.NONEED);
            
            String resourceId = OrderUtil.genResourceId();
            if (price.getProduct().getHtmlDesc() != null && price.getProduct().getHtmlDesc().length() > 0) {
               order.setHtmlDesc(price.getProduct().getHtmlDesc());
            } else {
               order.setHtmlDesc("/product/" + resourceId + "/desc.html");
            }
            if (price.getProduct().getPhotos() != null && price.getProduct().getPhotos().length() > 0) {
               order.setPhotos(price.getProduct().getPhotos());
            } else {
               order.setPhotos("/product/" + resourceId + "/images");
            }
            
            order.setEstimatedPrice(price.getPrice());
            // java.util.Date expireDate = new java.util.Date();
            // DateUtil.increaseDays(expireDate, 7);
            // plus 7 days as default.
            // beObject.setExpiredDate(expireDate);
            order.setCount(1);
            
            HashMap input = new HashMap();
            input.put("beObject", order);
            input.put("editable", new Boolean(true));
            
            RefForm form1 = new RefForm("goldenOrderForm1", "org.shaolin.vogerp.ecommercial.form.GoldenSaleOrderEditor", input);
            @page.addElement(form1);
            
            form1.openInWindows("新建销售订单", new TableCallBack("goldenOrderTable"), true);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Next">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.selectTypePanel).css("display", "block");
           $(this.selectTypePanel).dialog();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="addProduct">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="addProduct-20170306-114008">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import java.util.ArrayList;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.AjaxActionHelper;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.runtime.security.UserContext;
        import org.shaolin.vogerp.productmodel.be.ProductImpl;
        import org.shaolin.vogerp.productmodel.be.ProductTemplateImpl;
        import org.shaolin.vogerp.productmodel.util.ProductUtil;
        {
            ProductImpl defaultUser = new ProductImpl();
            defaultUser.setSerialNumber(ProductUtil.genSerialNumber());
            defaultUser.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
            String resId = ProductUtil.genResourceId();
            defaultUser.setHtmlDesc("/product/" + resId + "/desc.html");
            defaultUser.setPhotos("/product/" + resId + "/images");
            
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("costList", new ArrayList());
            input.put("priceList", new ArrayList());
            input.put("editable", new Boolean(true));
            RefForm form = new RefForm("productInfoForm", "org.shaolin.vogerp.productmodel.form.Product", input);
            @page.addElement(form);
            
            form.openInWindows("\u6DFB\u52A0\u4EA7\u54C1", new FunctionCallBack(@page, "refreshProductTree-20170306-114008"), true);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="refreshProductTree">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="refreshProductTree-20170306-114008">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import java.util.ArrayList;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.AjaxActionHelper;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.runtime.security.UserContext;
        {
           Tree productTree = @page.getTree("priceSelector.productTree");
           productTree.refresh();
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="selectTypePanel">
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:Property name="style">
             <ns2:value xsi:type="ns2:StringPropertyType">
                 <value>display:none</value>
             </ns2:value>
          </ns2:Property>
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="purchaseOrderLabel">
	        <ns2:UIStyle></ns2:UIStyle>
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>创建采购订单</ns2:value>
	        </ns2:text>
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="selectedPurchaseOrder"></ns2:handler>
	        </ns2:EventListener>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="saleOrderLabel">
	        <ns2:UIStyle></ns2:UIStyle>
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>创建销售订单</ns2:value>
	        </ns2:text>
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="selectedSaleOrder"></ns2:handler>
	        </ns2:EventListener>
	      </ns2:component>
	      <ns2:layoutConstraint>
	        <ns2:componentId>saleOrderLabel</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
	      <ns2:layoutConstraint>
	        <ns2:componentId>purchaseOrderLabel</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
	  </ns2:component>
	  <ns2:component xsi:type="ns2:UIPanelType" UIID="productPanel">
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="addProductBtn">
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>添加产品...</ns2:value>
	        </ns2:text>
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="addProduct"></ns2:handler>
	        </ns2:EventListener>
	      </ns2:component>
	      <ns2:layoutConstraint>
	        <ns2:componentId>addProductBtn</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
	      <!-- 
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="refreshProductBtn">
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>刷新产品树</ns2:value>
	        </ns2:text>
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="refreshProductTree"></ns2:handler>
	        </ns2:EventListener>
	      </ns2:component>
	      <ns2:layoutConstraint>
	        <ns2:componentId>refreshProductBtn</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
	       -->
	  </ns2:component>   
      <ns2:component xsi:type="ns2:UILabelType" UIID="hintsUI">
        <ns2:UIStyle></ns2:UIStyle>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>请选择一个产品价格包来创建您的订单。</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="priceSelector">
        <ns2:referenceEntity entityName="org.shaolin.vogerp.productmodel.form.ProductPricePackageSelector" />
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>productPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>hintsUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>priceSelector</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>selectTypePanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="3" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="okbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Next"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>下一步</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Closebtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>okbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.GoldenOrder"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.vogerp.productmodel.form.ProductPricePackageSelector"></ns2:mappingRule>
      <ns2:UIComponent componentPath="priceSelector" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="editable">
        <ns2:expression>
          <expressionString>{return $editable;}</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>