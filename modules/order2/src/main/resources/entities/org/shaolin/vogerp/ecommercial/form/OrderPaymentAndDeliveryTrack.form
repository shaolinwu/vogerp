<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns7="http://bmdp.shaolin.org/datamodel/FlowDiagram" xmlns:ns6="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns5="http://bmdp.shaolin.org/datamodel/Workflow" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.ecommercial.form.OrderPaymentAndDeliveryTrack</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="payOrder">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="payOrder-20170218-2044">
        <ns2:exp>
            <ns2:expressionString><![CDATA[
            import java.util.HashMap;
            import org.shaolin.uimaster.page.AjaxContext;
            import org.shaolin.uimaster.page.ajax.*;
            import org.shaolin.bmdp.runtime.AppContext;
            import org.shaolin.bmdp.workflow.coordinator.ICoordinatorService;
            import org.shaolin.vogerp.ecommercial.be.IEOrder;
            import org.shaolin.vogerp.accounting.be.IPayOrder;
            import org.shaolin.vogerp.accounting.ce.PayOrderStatusType;
            import org.shaolin.vogerp.accounting.IPaymentService;
            {
                RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
                IEOrder order = (IEOrder)form.getInputParameter("order");
                
                IPaymentService accountingService = (IPaymentService)AppContext.get().getService(IPaymentService.class);
                IPayOrder payOrder = accountingService.queryForPayOrder(order.getSerialNumber());
                if (payOrder != null) {
                    if (payOrder.getStatus() == PayOrderStatusType.PAYED) {
                        Dialog.showMessageDialog("您的订单已支付成功！请刷新页面。", "", Dialog.INFORMATION_MESSAGE, null);
                        return;
                    }
                    HashMap input = new HashMap();
	                input.put("beObject", payOrder);
	                input.put("editable", new Boolean(true));
	                RefForm form1 = new RefForm("payorderForm", "org.shaolin.vogerp.accounting.form.PaymentMethod", input);
	                @page.addElement(form1);
	                form1.openInWindows("支付方式选择", null, true);
		        } else {
		        	Dialog.showMessageDialog("订单状态异常，支付不可用！", "", Dialog.WARNING_MESSAGE, null);
		        }
            }
            ]]></ns2:expressionString>
        </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  
  <ns2:eventHandler functionName="addProductionNote">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.addProductInfo).css("display", "block");
           $(this.addProductInfo).dialog();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="savePregressNote">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="savePregressNote-20170325-215225">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.ecommercial.uiwidget.OrderPaymentAndDeliveryUI;
        import org.shaolin.vogerp.ecommercial.be.*;
        import org.shaolin.vogerp.ecommercial.ce.*;
        import org.shaolin.vogerp.ecommercial.dao.*;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        import org.shaolin.vogerp.commonmodel.dao.CommonModel;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            IEOrder order = (IEOrder)form.getInputParameter("order");
            
            String note = @page.getTextArea("descProgressUI").getValue();
            OrderPaymentAndDeliveryUI.addProgressNote(order, note);
            @page.getTextArea("descProgressUI").setValue("");
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.addProductInfo).dialog("close");
        }
        ]]></ns2:expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="updateExpress">
     <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.addDeliveryInfo).css("display", "block");
           $(this.addDeliveryInfo).dialog();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  
  <ns2:eventHandler functionName="commentOrder">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.addCommentInfo).css("display", "block");
           $(this.addCommentInfo).dialog();
        }
        ]]></ns2:expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="saveComment">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="saveComment-20170325-215225">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.ecommercial.uiwidget.OrderPaymentAndDeliveryUI;
        import org.shaolin.vogerp.ecommercial.be.*;
        import org.shaolin.vogerp.ecommercial.ce.*;
        import org.shaolin.vogerp.ecommercial.dao.*;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        import org.shaolin.vogerp.commonmodel.dao.CommonModel;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            IEOrder order = (IEOrder)form.getInputParameter("order");
            
            String note = @page.getTextArea("descCommentUI").getValue();
            //TODO:
            
            //@page.getTextArea("descProgressUI").setValue("");
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
           $(this.addCommentInfo).dialog("close");
        }
        ]]></ns2:expressionString>
    </ns2:ops>
  </ns2:eventHandler>
  
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail-20170125-215225">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="RefreshTest">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="RefreshTest-20170125-215225">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.vogerp.ecommercial.ce.EOrderType;
        import org.shaolin.vogerp.ecommercial.be.EOrderImpl;
        import org.shaolin.vogerp.ecommercial.be.GoldenOrderImpl;
        import org.shaolin.vogerp.ecommercial.be.RentOrLoanOrderImpl;
        import org.shaolin.vogerp.ecommercial.be.MachiningOrderImpl;
        import org.shaolin.vogerp.ecommercial.dao.OrderModel;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid());
            EOrderImpl order = (EOrderImpl)form.getInputParameter("order");
            if (order.getClass() == GoldenOrderImpl.class) {
                GoldenOrderImpl gorder = (GoldenOrderImpl)OrderModel.INSTANCE.get(order.getId(), GoldenOrderImpl.class);
                form.setInputParameter("order", gorder);
            } else if (order.getClass() == RentOrLoanOrderImpl.class) {
                RentOrLoanOrderImpl rorder = (RentOrLoanOrderImpl)OrderModel.INSTANCE.get(order.getId(), RentOrLoanOrderImpl.class);
                form.setInputParameter("order", rorder);
            } else if (order.getClass() == MachiningOrderImpl.class) {
                MachiningOrderImpl morder = (MachiningOrderImpl)OrderModel.INSTANCE.get(order.getId(), MachiningOrderImpl.class);
                form.setInputParameter("order", morder);
            }
            
            form.refresh();
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="updateAddress">
    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
        <ns2:expressionString><![CDATA[
        {   
        }
        ]]></ns2:expressionString>
    </ns2:ops>
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="updateAddress-2017-0219-1131">
        <ns2:exp>
            <ns2:expressionString><![CDATA[
            import java.util.HashMap;
            import org.shaolin.bmdp.runtime.AppContext;
            import org.shaolin.uimaster.page.AjaxContext;
            import org.shaolin.uimaster.page.ajax.*;
            import org.shaolin.bmdp.runtime.security.UserContext;
            import org.shaolin.vogerp.ecommercial.be.*;
            import org.shaolin.vogerp.ecommercial.dao.OrderModel;
            import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
            import org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl;
            {
                RefForm form1 = (RefForm)@page.getElement(@page.getEntityUiid()); 
                IEOrder order = (IEOrder)form1.getInputParameter("order");
                DeliveryInfoImpl deliveryInfo = (DeliveryInfoImpl)OrderModel.INSTANCE.get(order.getDeliveryInfoId(), DeliveryInfoImpl.class);
                
                HashMap input = new HashMap();
                input.put("beObject", deliveryInfo);
                input.put("editable", new Boolean(true));
                String formName = "org.shaolin.vogerp.commonmodel.form.SelectDeliveryInfo";
                if (deliveryInfo.getToUserId() == UserContext.getUserContext().getUserId()) {
                   formName = "org.shaolin.vogerp.commonmodel.form.SelectReceiverInfo";
                }
                RefForm form = new RefForm("addressInfoForm", formName, input);
                @page.addElement(form);
                
                form.openInWindows("地址详情", null, true);
            }
            ]]></ns2:expressionString>
        </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  
  
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
       <ns2:layout xsi:type="ns2:TableLayoutType">
         <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
         <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
         <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
         <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
         <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
       </ns2:layout>
       <ns2:component xsi:type="ns2:UICustWidgetType" UIID="trackFormUI">
         <ns2:custType>org.shaolin.vogerp.ecommercial.uiwidget.OrderPaymentAndDeliveryUI</ns2:custType>
         <ns2:Property name="order">
            <ns2:value xsi:type="ns2:ExpressionPropertyType">
                 <ns2:expression>
                   <expressionString><![CDATA[
                   { 
                       return $order; 
                   }]]></expressionString>
                 </ns2:expression>
            </ns2:value>
         </ns2:Property>
       </ns2:component>
       <ns2:component xsi:type="ns2:UIPanelType" UIID="addProductInfo">
          <ns2:Property name="style">
             <ns2:value xsi:type="ns2:StringPropertyType">
                 <value>display:none</value>
             </ns2:value>
          </ns2:Property>
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UITextAreaType" UIID="descProgressUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
	          <ns2:value>添加生产进度描述</ns2:value>
	        </ns2:widgetLabel>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="descProgressbtn">
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="savePregressNote"></ns2:handler>
	        </ns2:EventListener>
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>确定</ns2:value>
	        </ns2:text>
	      </ns2:component>
	      <ns2:layoutConstraint>
		      <ns2:componentId>descProgressUI</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
		   <ns2:layoutConstraint>
		      <ns2:componentId>descProgressbtn</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
	    </ns2:component>
	    <ns2:component xsi:type="ns2:UIPanelType" UIID="addDeliveryInfo">
	      <ns2:Property name="style">
             <ns2:value xsi:type="ns2:StringPropertyType">
                 <value>display:none</value>
             </ns2:value>
          </ns2:Property>
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UIComboBoxType" UIID="expressVendorUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
	          <ns2:value>选择快递公司</ns2:value>
	        </ns2:widgetLabel>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UITextFieldType" UIID="expressNumberUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
	          <ns2:value>快递编号</ns2:value>
	        </ns2:widgetLabel>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="expressbtn">
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="deliveryOrder"></ns2:handler>
	        </ns2:EventListener>
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>保存</ns2:value>
	        </ns2:text>
	      </ns2:component>
	        <ns2:layoutConstraint>
		      <ns2:componentId>expressVendorUI</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
		    <ns2:layoutConstraint>
		      <ns2:componentId>expressNumberUI</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
		    <ns2:layoutConstraint>
		      <ns2:componentId>expressbtn</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
	    </ns2:component>
	    <ns2:component xsi:type="ns2:UIPanelType" UIID="addCommentInfo">
          <ns2:Property name="style">
             <ns2:value xsi:type="ns2:StringPropertyType">
                 <value>display:none</value>
             </ns2:value>
          </ns2:Property>
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UITextAreaType" UIID="descCommentUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
	          <ns2:value>描述</ns2:value>
	        </ns2:widgetLabel>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIComboBoxType" UIID="qualityUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
	          <ns2:value>物品质量评价</ns2:value>
	        </ns2:widgetLabel>
	        <ns2:Property name="optionValue">
	            <ns2:value xsi:type="ns2:ExpressionPropertyType">
			         <ns2:expression>
			           <expressionString><![CDATA[
			           import java.util.ArrayList;
			           { 
			               ArrayList items = new ArrayList();
			               items.add("1");
			               items.add("2");
			               items.add("3");
			               return items; 
			           }]]></expressionString>
			         </ns2:expression>
		        </ns2:value>
            </ns2:Property>
            <ns2:Property name="optionDisplayValue">
	            <ns2:value xsi:type="ns2:ExpressionPropertyType">
			         <ns2:expression>
			           <expressionString><![CDATA[
			           import java.util.ArrayList;
			           { 
			               ArrayList items = new ArrayList();
			               items.add("满意");
			               items.add("一般");
			               items.add("不满意");
			               return items; 
			           }]]></expressionString>
			         </ns2:expression>
		        </ns2:value>
            </ns2:Property>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIComboBoxType" UIID="serviceUI">
	        <ns2:widgetLabel xsi:type="ns2:StringPropertyType">
	          <ns2:value>服务评价</ns2:value>
	        </ns2:widgetLabel>
	        <ns2:Property name="optionValue">
	            <ns2:value xsi:type="ns2:ExpressionPropertyType">
			         <ns2:expression>
			           <expressionString><![CDATA[
			           import java.util.ArrayList;
			           { 
			               ArrayList items = new ArrayList();
			               items.add("1");
			               items.add("2");
			               items.add("3");
			               return items; 
			           }]]></expressionString>
			         </ns2:expression>
		        </ns2:value>
            </ns2:Property>
            <ns2:Property name="optionDisplayValue">
	            <ns2:value xsi:type="ns2:ExpressionPropertyType">
			         <ns2:expression>
			           <expressionString><![CDATA[
			           import java.util.ArrayList;
			           { 
			               ArrayList items = new ArrayList();
			               items.add("满意");
			               items.add("一般");
			               items.add("不满意");
			               return items; 
			           }]]></expressionString>
			         </ns2:expression>
		        </ns2:value>
            </ns2:Property>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIButtonType" UIID="descCommentbtn">
	        <ns2:EventListener xsi:type="ns2:ClickListenerType">
	          <ns2:handler functionName="saveComment"></ns2:handler>
	        </ns2:EventListener>
	        <ns2:text xsi:type="ns2:StringPropertyType">
	          <ns2:value>确定</ns2:value>
	        </ns2:text>
	      </ns2:component>
	      <ns2:layoutConstraint>
		      <ns2:componentId>descCommentUI</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
		    <ns2:layoutConstraint>
		      <ns2:componentId>qualityUI</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
		    <ns2:layoutConstraint>
		      <ns2:componentId>serviceUI</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
		   <ns2:layoutConstraint>
		      <ns2:componentId>descCommentbtn</ns2:componentId>
		      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="3" align="FULL"></ns2:constraint>
		    </ns2:layoutConstraint>
	    </ns2:component>
	    
        <ns2:layoutConstraint>
	      <ns2:componentId>trackFormUI</ns2:componentId>
	      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
	    </ns2:layoutConstraint>
	    <ns2:layoutConstraint>
	      <ns2:componentId>addProductInfo</ns2:componentId>
	      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
	    </ns2:layoutConstraint>
	    <ns2:layoutConstraint>
	      <ns2:componentId>addDeliveryInfo</ns2:componentId>
	      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL"></ns2:constraint>
	    </ns2:layoutConstraint>
	    <ns2:layoutConstraint>
	      <ns2:componentId>addCommentInfo</ns2:componentId>
	      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="3" align="FULL"></ns2:constraint>
	    </ns2:layoutConstraint>
    </ns2:component> 
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="refreshbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="RefreshTest"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>刷新</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="updateAddressbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="updateAddress"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>更新地址</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Closebtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>refreshbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>updateAddressbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="2" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
	    {
	       // workflow dynamic actions
	       Form.deliveryOrder = function() {
	          Form.invokeDynamicFunction(Form.trackFormUI, "deliveryOrder");
	          $(Form.addDeliveryInfo).dialog("close");
	       };
	       Form.receivedOrder = function() {
	          Form.invokeDynamicFunction(Form.trackFormUI, "receivedOrder");
	       };
		}
    ]]></ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="order" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.EOrder"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="Internal" name="values" category="JavaClass">
      <type entityName="java.util.ArrayList"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="Internal" name="displayItems" category="JavaClass">
      <type entityName="java.util.ArrayList"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UISingleChoice"></ns2:mappingRule>
      <ns2:UIComponent componentPath="expressVendorUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="values" paramName="OptionValues"></ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="displayItems" paramName="OptionDisplayValues"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString><![CDATA[
      import java.util.ArrayList;
      import java.util.List;
      import java.util.Map;
      import java.util.HashMap;
      import org.shaolin.bmdp.runtime.AppContext;
      import org.shaolin.vogerp.commonmodel.IExpressService;
      {
         IExpressService service = (IExpressService)AppContext.get().getService(IExpressService.class);
         Map result = service.queryVendorsList();
         $values = new ArrayList(result.keySet());
		 $displayItems = new ArrayList(result.values());
      
         @odContext.executeAllMappings();
      }]]></expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
       @odContext.executeAllMappings();
     }</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>