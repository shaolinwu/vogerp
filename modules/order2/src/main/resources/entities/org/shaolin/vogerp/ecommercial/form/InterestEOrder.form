<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns7="http://bmdp.shaolin.org/datamodel/FlowDiagram" xmlns:ns6="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns5="http://bmdp.shaolin.org/datamodel/Workflow" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.ecommercial.form.InterestEOrder</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="ChangePrice">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="ChangePrice-20170111-163402">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.Set;
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.runtime.security.UserContext;
        import org.shaolin.vogerp.ecommercial.be.*;
        import org.shaolin.vogerp.ecommercial.ce.OrderStatusType;
        import org.shaolin.vogerp.ecommercial.dao.EOrderModel;
        import org.shaolin.vogerp.ecommercial.util.OrderUtil;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            InterestEOrderImpl order = (InterestEOrderImpl)form.getInputParameter("beObject");
            OrderUtil.bindOrder(order);
            if (order.getOrder().getStatus() == OrderStatusType.PUBLISHED) {
	            IOfferPrice offeredPrice = null;
	      	    Set items = order.getOrder().getOfferPrices();
	      	    java.util.Iterator iter = items.iterator();
		        while (iter.hasNext()) {
		      	     IOfferPrice price = (IOfferPrice)iter.next();
		      	     if (price.getTakenCustomerId() == UserContext.getUserContext().getUserId()) {
		      	         offeredPrice = price;
		      	         break;
		      	     }
	      	    }
	      	    if (offeredPrice.getPriceChangedCount() == 0) {
	               String updatedValue = @page.getLabel("offerPriceInfoLabel").getValue();
	               offeredPrice.setPriceChangedCount(1);
	               offeredPrice.setPrice(Double.parseDouble(updatedValue));
	               EOrderModel.INSTANCE.update((Object)offeredPrice);
	               order = (InterestEOrderImpl)EOrderModel.INSTANCE.get(order.getId(), InterestEOrderImpl.class);
	               order.getOrder().getOfferPrices(); //refreshing.
	               @page.getLabel("offerPriceInfoLabel").setDisplayValue(OrderUtil.getOfferPriceInfo(offeredPrice));
	            } else {
	               Dialog.showMessageDialog("对不起，该订单已改过一次价格，不可再次更改！", "", Dialog.WARNING_MESSAGE, null);
	            }
            } else {
                Dialog.showMessageDialog("对不起，该订单处于不可更改状态！" + order.getOrder().getStatus().getDisplayName(), "", Dialog.WARNING_MESSAGE, null);
            }
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Save">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="saveDetail-20161111-163402">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.ecommercial.be.InterestEOrderImpl;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            HashMap out = (HashMap)form.ui2Data();

            form.closeIfinWindows();
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail-20161111-163402">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UILabelType" UIID="orderInfoLabel">
        <ns2:Property name="htmlValue">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
                 <ns2:expression>
                   <expressionString><![CDATA[
                   import org.shaolin.vogerp.ecommercial.util.OrderUtil;
                   { 
                       return OrderUtil.getOrderHTMLInfo($beObject.getOrder());
                   }]]></expressionString>
                 </ns2:expression>
            </ns2:value>
        </ns2:Property>
      </ns2:component>
      <ns2:component xsi:type="ns2:UILabelType" UIID="offerPriceInfoLabel">
        <ns2:Property name="oneditable">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
                 <ns2:expression>
                   <expressionString><![CDATA[
                   { 
                       return $editable;
                   }]]></expressionString>
                 </ns2:expression>
            </ns2:value>
        </ns2:Property>
        <ns2:Property name="editableValueType">
           <ns2:value xsi:type="ns2:StringPropertyType">
               <value>number</value>
           </ns2:value>
        </ns2:Property>
        <ns2:Property name="htmlValue">
           <ns2:value xsi:type="ns2:ExpressionPropertyType">
                 <ns2:expression>
                   <expressionString><![CDATA[
                   { 
                       return $offeredPriceInfo;
                   }]]></expressionString>
                 </ns2:expression>
            </ns2:value>
        </ns2:Property>
        <ns2:EventListener xsi:type="ns2:CustomListenerType" eventName="oneditable">
          <ns2:handler functionName="ChangePrice"></ns2:handler>
        </ns2:EventListener>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="chatUI">
        <ns2:UIStyle>uimaster_rightform_widget</ns2:UIStyle>
        <ns2:referenceEntity entityName="org.shaolin.bmdp.workflow.form.ChatWindow" />
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>orderInfoLabel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL" cellUIClass=""></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>offerPriceInfoLabel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL" cellUIClass=""></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>chatUI</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="2" align="FULL" cellUIClass=""></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Closebtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
        { 
           $("#div-goldenOrderForm-chatUI-actionPanel-1_0").css("display", "none");
           $("#div-goldenOrderForm-chatUI-actionPanel-2_0").css("display", "none");
        }
    ]]></ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="chatObject" category="BusinessEntity">
      <type entityName="org.shaolin.bmdp.workflow.be.ChatHistory"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.ecommercial.be.InterestEOrder"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="offeredPriceInfo" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="recievedPartyName" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.bmdp.workflow.form.ChatWindow"></ns2:mappingRule>
      <ns2:UIComponent componentPath="chatUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="chatObject" paramName="beObject"></ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="editable" paramName="isEditable"></ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="sentPartyName">
        <ns2:expression>
          <expressionString>{return org.shaolin.bmdp.runtime.security.UserContext.getUserContext().getUserName();}</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="recievedPartyName">
        <ns2:expression>
          <expressionString>{return $recievedPartyName;}</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString><![CDATA[
      import java.util.Set;
      import org.shaolin.vogerp.ecommercial.be.*;
      import org.shaolin.vogerp.commonmodel.IUserService;
      import org.shaolin.bmdp.runtime.AppContext;
      import org.shaolin.bmdp.runtime.security.UserContext;
      import org.shaolin.bmdp.workflow.be.ChatHistoryImpl;
      import org.shaolin.vogerp.ecommercial.util.OrderUtil;
      import org.shaolin.vogerp.commonmodel.util.CustomerInfoUtil;
      {
          IOfferPrice offeredPrice = null;
      	  Set items = $beObject.getOrder().getOfferPrices();
      	  java.util.Iterator iter = items.iterator();
		  while (iter.hasNext()) {
      	     IOfferPrice price = (IOfferPrice)iter.next();
      	     if (price.getTakenCustomerId() == UserContext.getUserContext().getUserId()) {
      	         offeredPrice = price;
      	         break;
      	     }
      	  }
      	  $offeredPriceInfo = OrderUtil.getOfferPriceInfo(offeredPrice);
          $recievedPartyName = CustomerInfoUtil.getCustomerEnterpriseBasicInfo($beObject.getOrder().getPublishedCustomerId());
      	  
	      ChatHistoryImpl defaultUser = new ChatHistoryImpl();
          defaultUser.setOrgId(UserContext.getUserContext().getOrgId());
	      defaultUser.setSentPartyId(UserContext.getUserContext().getUserId());
          defaultUser.setReceivedPartyId($beObject.getOrder().getPublishedCustomerId());
          defaultUser.setSessionId(offeredPrice.getSessionId());
	      $chatObject = defaultUser;
		  @odContext.executeAllMappings();
	  }
	  ]]></expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>