<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.productmodel.page.StorageManagement</entityName>
	<systemVersion>0</systemVersion>
	<description>库存管理</description>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
        <ns2:eventHandler functionName="createWarehouse">
		   <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createWarehouse324324">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.productmodel.be.WarehouseImpl;
                    {
                        WarehouseImpl defaultUser = new WarehouseImpl();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("userForm", "org.shaolin.vogerp.productmodel.form.Warehouse", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Create Warehouse", new TableCallBack("storageTable"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="openWarehouse">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openWarehouse45332">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.productmodel.be.WarehouseImpl;
                    import org.shaolin.vogerp.productmodel.dao.ProductModel;
                    {
                        Table productInfoTable = (Table)@page.getElement("storageTable");
                        if (productInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        WarehouseImpl defaultUser = (WarehouseImpl)productInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("userForm", "org.shaolin.vogerp.productmodel.form.Warehouse", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Check Warehouse", new TableCallBack("storageTable"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="createItem">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="createItem-45332">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.productmodel.be.StorageItemImpl;
                    import org.shaolin.vogerp.productmodel.dao.ProductModel;
                    {
                        Table productInfoTable = (Table)@page.getElement("storageItemTable");
                        StorageItemImpl defaultUser = new StorageItemImpl();
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("userForm", "org.shaolin.vogerp.productmodel.form.StorageItem", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Create Item", new TableCallBack("storageItemTable"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="openItem">
		    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openItem-45332">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.productmodel.be.StorageItemImpl;
                    import org.shaolin.vogerp.productmodel.dao.ProductModel;
                    {
                        Table productInfoTable = (Table)@page.getElement("storageItemTable");
                        if (productInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        StorageItemImpl defaultUser = (StorageItemImpl)productInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("userForm", "org.shaolin.vogerp.productmodel.form.StorageItem", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Open Item", new TableCallBack("storageItemTable"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="showMatrix">
      <ns2:ops xsi:type="ns2:OpCallAjaxType" name="showMatrix-45332">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.productmodel.be.WarehouseImpl;
                    import org.shaolin.vogerp.productmodel.dao.ProductModel;
                    {
                        Table productInfoTable = (Table)@page.getElement("storageTable");
                        if (productInfoTable.getSelectedRow() == null) {
                            return;
                        }
                        WarehouseImpl defaultUser = (WarehouseImpl)productInfoTable.getSelectedRow();
                        
                        HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        RefForm form = new RefForm("userForm", "org.shaolin.vogerp.productmodel.form.WarehouseMatrix", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Warehouse Matrix", new TableCallBack("storageTable"));
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
  </ns2:eventHandler>
		<ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
		    <ns2:UISkin xsi:type="ns2:UISkinType">
                <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
                <ns2:param name="text">
                    <ns2:value xsi:type="ns2:StringPropertyType">
                        <ns2:value></ns2:value>
                    </ns2:value>
                </ns2:param>
            </ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
			    <ns2:ajaxLoad>true</ns2:ajaxLoad>
                <ns2:tab uiid="storagePanel">
                    <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
                        <ns2:bundle>org_shaolin_vogerp_productmodel_i18n</ns2:bundle>
                        <ns2:key>org.shaolin.vogerp.productmodel.page.ProductManagement.storagePanel</ns2:key>
                    </ns2:title>
                    <ns2:panel UIID="storagePanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="storageTable">
		                    <ns2:beElement>org.shaolin.vogerp.productmodel.be.Warehouse</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>10</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.productmodel.be.IWarehouse;
		                            import org.shaolin.vogerp.productmodel.be.WarehouseImpl;
		                            import org.shaolin.vogerp.productmodel.dao.ProductModel;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new WarehouseImpl());
		                                  }
		                                  WarehouseImpl condition = (WarehouseImpl)$tableCondition.getCondition();
		                                  return ProductModel.INSTANCE.searchWarehouse(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:totalCount xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.productmodel.be.WarehouseImpl;
		                            import org.shaolin.vogerp.productmodel.dao.ProductModel;
		                            {
		                                 if ($tableCondition == null) {
		                                    $tableCondition = TableConditions.createCondition(new WarehouseImpl());
		                                 }
		                                 WarehouseImpl condition = (WarehouseImpl)$tableCondition.getCondition();
		                                 return ProductModel.INSTANCE.searchWarehouseCount(condition);
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:totalCount>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Name</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.name</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Description</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.description</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Photo</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.photoPath</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Location</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.location</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Container Type</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.containerType</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.vogerp.productmodel.ce.StorageContainerType;
		                                {
		                                    $rowBE.setContainerType((StorageContainerType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.productmodel.ce.StorageContainerType").getByIntValue(Integer.valueOf($value).intValue()));
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createWarehouse</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openWarehouse</ns2:defaultOpenAction>
		                        <!-- can be default actions. -->
		                        <ns2:defaultDeleteAction>deleteProduct</ns2:defaultDeleteAction>
		                        <ns2:defaultEnableAction>enableProduct</ns2:defaultEnableAction>
		                        <ns2:defaultDisableAction>disableProduct</ns2:defaultDisableAction> 
		                    </ns2:defaultActions>
		                    <ns2:actionGroup>
                          <ns2:type>radio</ns2:type>
                          <ns2:action>
                           <!-- first we have the cost, then we generate the price from the cost. -->
                              <ns2:uiid>showMatrix</ns2:uiid>
                              <ns2:title xsi:type="ns2:StringPropertyType">
                                  <ns2:value>Warehouse Matrix</ns2:value>
                              </ns2:title>
                              <ns2:icon>ui-icon-note</ns2:icon>
                              <ns2:function>showMatrix</ns2:function>
                          </ns2:action>
                      </ns2:actionGroup>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>storageTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                <ns2:tab uiid="storageItemPanel">
                    <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
                        <ns2:bundle>org_shaolin_vogerp_productmodel_i18n</ns2:bundle>
                        <ns2:key>org.shaolin.vogerp.productmodel.page.ProductManagement.storageItemPanel</ns2:key>
                    </ns2:title>
                    <ns2:panel UIID="storageItemPanel">
		                <ns2:layout xsi:type="ns2:TableLayoutType">
		                    <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
		                    <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
		                </ns2:layout>
		                <ns2:component xsi:type="ns2:UITableType" UIID="storageItemTable">
		                    <ns2:beElement>org.shaolin.vogerp.productmodel.be.StorageItem</ns2:beElement>
		                    <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
		                    <ns2:defaultRowSize>10</ns2:defaultRowSize>
		                    <ns2:showActionBar>true</ns2:showActionBar>
		                    <ns2:showFilter>true</ns2:showFilter>
		                    <ns2:query xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.productmodel.be.IStorageItem;
		                            import org.shaolin.vogerp.productmodel.be.StorageItemImpl;
		                            import org.shaolin.vogerp.productmodel.dao.ProductModel;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new StorageItemImpl());
		                                  }
		                                  StorageItemImpl condition = (StorageItemImpl)$tableCondition.getCondition();
		                                  return ProductModel.INSTANCE.searchStorageItems(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:query>
		                    <ns2:totalCount xsi:type="ns2:ExpressionPropertyType">
		                        <ns2:expression xsi:type="ns2:ExpressionType">
		                            <ns2:expressionString><![CDATA[
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.vogerp.productmodel.be.StorageItemImpl;
		                            import org.shaolin.vogerp.productmodel.dao.ProductModel;
		                            {
		                                 if ($tableCondition == null) {
		                                    $tableCondition = TableConditions.createCondition(new StorageItemImpl());
		                                 }
		                                 StorageItemImpl condition = (StorageItemImpl)$tableCondition.getCondition();
		                                 return ProductModel.INSTANCE.searchStorageItemsCount(condition);
		                            }]]></ns2:expressionString>
		                        </ns2:expression>
		                    </ns2:totalCount>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Warehouse</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.warehouseId</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
		                        <ns2:comboxExpression xsi:type="ns2:ExpressionPropertyType">
		                        	<ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.vogerp.productmodel.dao.CustProductModel;
		                                {
		                                	return CustProductModel.INSTANCE.getStorageItemWarehouseTypeGroup();
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:comboxExpression>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
		                        	<ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                {
		                                	return $rowBE.getWarehouse().getName();
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:rowExpression>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.bmdp.runtime.ce.IConstantEntity;
		                                {
		                                	if ("-1".equals($value)) {
		                                		$rowBE.setWarehouseId(-1);
		                                	} else {
		                                    	$rowBE.setWarehouseId(Long.valueOf($value).longValue());
		                                    }
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                         </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Product</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.productId</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
		                        <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
		                        	<ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                {
		                                	return $rowBE.getProduct().getName();
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:rowExpression>
		                        <ns2:comboxExpression xsi:type="ns2:ExpressionPropertyType">
		                        	<ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.vogerp.productmodel.dao.CustProductModel;
		                                {
		                                	return CustProductModel.INSTANCE.getStorageItemProductTypeGroup();
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:comboxExpression>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.bmdp.runtime.ce.IConstantEntity;
		                                {
		                                	if ("-1".equals($value)) {
		                                		$rowBE.setProductId(-1);
		                                	} else {
		                                    	$rowBE.setProductId(Long.valueOf($value).longValue());
		                                    }
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                         </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Serial Number</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Text</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Amount</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.number</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Coordinate</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.coordinate</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>Label</ns2:type></ns2:uiType>
		                    </ns2:column>
		                    <ns2:column xsi:type="ns2:UITableColumnType">
		                        <ns2:title xsi:type="ns2:StringPropertyType">
		                            <ns2:value>Status</ns2:value>
		                        </ns2:title>
		                        <ns2:beFieldId>rowBE.itemStatus</ns2:beFieldId>
		                        <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.vogerp.productmodel.ce.StorageItemStatusType;
		                                {
		                                    $rowBE.setItemStatus((StorageItemStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.productmodel.ce.StorageItemStatusType").getByIntValue(Integer.valueOf($value).intValue()));
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:updateCondition>
		                    </ns2:column>
		                    <ns2:defaultActions>
		                        <ns2:defaultNewAction>createItem</ns2:defaultNewAction>
		                        <ns2:defaultOpenAction>openItem</ns2:defaultOpenAction>
		                        <ns2:defaultEnableAction>enableProduct</ns2:defaultEnableAction>
		                        <ns2:defaultDisableAction>disableProduct</ns2:defaultDisableAction>
		                    </ns2:defaultActions>
		                </ns2:component>
		                <ns2:layoutConstraint>
		                    <ns2:componentId>storageItemTable</ns2:componentId>
		                    <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
		                        x="0" y="0" align="FULL"></ns2:constraint>
		                </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
            </ns2:component>
			<ns2:layoutConstraint>
                <ns2:componentId>functionsTab</ns2:componentId>
                <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                    x="0" y="0" align="FULL"></ns2:constraint>
            </ns2:layoutConstraint>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	</ns2:ODMapping>
	<ns2:in>
	</ns2:in>
</ns2:UIPage>
