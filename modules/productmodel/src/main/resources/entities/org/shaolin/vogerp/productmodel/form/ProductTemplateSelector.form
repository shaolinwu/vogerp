<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.productmodel.form.ProductTemplateSelector</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="selectProductType">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectProductType-20150604847">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.List;
        import java.util.ArrayList;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.productmodel.IProductService;
        {  
            // the event source is still from productTypeTree in fact this is the reconfigurable function!
            // that's why we see the @page.getEntityUiid is costForm.productTypeTree
        	AList tree = @page.getList("typeUI");
        	List values = tree.getValues();
        	if (values == null || values.size() == 0) {
        		return;
        	}
        	String selectedPType = (String)values.get(0);
        	IProductService productService = (IProductService)AppContext.get().getService(IProductService.class);
        	List result = productService.getProductTemplateInComboBox(selectedPType);
        	List displayValues = (List)result.get(0);
        	List optionValues = (List)result.get(1);
        	
        	String selectProductTypeUIId = "selectProductTypeUI";
        	String selectPTemplateIdUIId = "selectPTemplateIdUI";
        	String pTemplateListUI = "pTemplateListUI";
        	int lastDot = @page.getEntityUiid().lastIndexOf('.');
        	if (lastDot != -1) {
        	    String formId = @page.getEntityUiid().substring(0, lastDot + 1);
	        	selectProductTypeUIId = formId + selectProductTypeUIId;
	        	selectPTemplateIdUIId = formId + selectPTemplateIdUIId;
                pTemplateListUI = formId + pTemplateListUI;
        	} else {
        	    String formId = @page.getEntityUiid() + ".";
                selectProductTypeUIId = formId + selectProductTypeUIId;
                selectPTemplateIdUIId = formId + selectPTemplateIdUIId;
                pTemplateListUI = formId + pTemplateListUI;
        	}
        	
        	AList plist = (AList)@page.getElementByAbsoluteId(pTemplateListUI);
        	plist.setOptions(displayValues, optionValues);
        	
        	Hidden selectProductTypeUI = @page.getHidden(selectProductTypeUIId);
            if (selectProductTypeUI.getValue() != null && selectedPType.equals(selectProductTypeUI.getValue())) {
	            Hidden selectPTemplateIdUI = @page.getHidden(selectPTemplateIdUIId);
	            if (selectPTemplateIdUI.getValue() != null) {
	                ArrayList vs = new ArrayList();
	                vs.add(selectPTemplateIdUI.getValue());
	                plist.setValues(vs);
	            }
            }
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="selectPTemplate">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectPTemplate-20160109-2247">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.List;
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.productmodel.be.ProductTemplateImpl;
        import org.shaolin.vogerp.productmodel.dao.ProductModel;
        { 
           AList plist = (AList)@page.getList("pTemplateListUI");
           List values = plist.getValues();
           if (values == null || values.size() == 0) {
               return;
           }
           Hidden selectPTemplateIdUI = @page.getHidden("selectPTemplateIdUI");
           if (selectPTemplateIdUI.getAttribute("count") == null) {
               selectPTemplateIdUI.addAttribute("count", "1");
           } else {    
               selectPTemplateIdUI.addAttribute("count", "2");
           }
           if (selectPTemplateIdUI.getValue() != null 
               && selectPTemplateIdUI.getValue().equals(values.get(0).toString())
               && "2".equals(selectPTemplateIdUI.getAttribute("count"))) {
               selectPTemplateIdUI.removeAttribute("count");
               // double click event supported for selecting template.
               @page.executeJavaScript("$(defaultname." + @page.getEntityUiid() + ".okbtn).trigger('click');");
               return;
           }
           
           RefForm oldForm = @page.getRefForm("prodTempDetailOverview");
           if (oldForm != null) {
              oldForm.remove();
              @page.removeForm("prodTempDetailOverview");
           }
           
           AList typelist = (AList)@page.getList("productTypeTree.typeUI");
           Hidden selectProductTypeUI = @page.getHidden("selectProductTypeUI");
           selectProductTypeUI.setValue(typelist.getValues().get(0).toString());
           selectPTemplateIdUI.setValue(values.get(0).toString());
           
           ProductTemplateImpl condition = new ProductTemplateImpl();
           condition.setId(Long.valueOf(values.get(0).toString()));
           List tempList = ProductModel.INSTANCE.searchProductTemplate(condition, null, 0, -1);
           ProductTemplateImpl defaultUser = (ProductTemplateImpl)tempList.get(0);
           HashMap input = new HashMap();
           input.put("beObject", defaultUser);
           input.put("editable", new Boolean(false));
           RefForm form = new RefForm("prodTempDetailOverview", "org.shaolin.vogerp.productmodel.form.ProdTempDetailOverview", input);
           Panel secondPanel = @page.getPanel("secondPanel");
           secondPanel.append(form);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="addTemplate">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="addTemplate-20160109-2247">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.List;
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.productmodel.be.ProductTemplateImpl;
        import org.shaolin.vogerp.productmodel.dao.ProductModel;
        { 
           AList typelist = (AList)@page.getList("productTypeTree.typeUI");
           Hidden selectProductTypeUI = @page.getHidden("selectProductTypeUI");
           selectProductTypeUI.setValue(typelist.getValues().get(0).toString());
           
           ProductTemplateImpl newPTemplate = new ProductTemplateImpl();
           newPTemplate.setType(selectProductTypeUI.getValue());
           HashMap input = new HashMap();
           input.put("beObject", newPTemplate);
           input.put("editable", new Boolean(false));
           RefForm form = new RefForm("prodTempDetailOverview", "org.shaolin.vogerp.productmodel.form.ProductTemplate", input);
           @page.addElement(form);
           form.openInWindows("新建产品模板", null, 750, 600);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="searchTemplate">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="searchTemplate-20160109-2247">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.List;
        import java.util.HashMap;
        import org.shaolin.bmdp.runtime.AppContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.productmodel.be.ProductTemplateImpl;
        import org.shaolin.vogerp.productmodel.dao.ProductModel;
        import org.shaolin.vogerp.productmodel.IProductService;
        { 
            IProductService productService = (IProductService)AppContext.get().getService(IProductService.class);
            List result = productService.getProductTemplatesByName(@page.getTextField("searchTemplateUI").getValue());
            List displayValues = (List)result.get(0);
            List optionValues = (List)result.get(1);
            
            AList plist = (AList)@page.getElement("pTemplateListUI");
            plist.setOptions(displayValues, optionValues);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail1358686533">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Save">
  </ns2:eventHandler>
  <ns2:reconfigurableProperty functionName="selectPTemplate" xsi:type="ns2:ReconfigurableFunctionType"/>
  <ns2:reconfigurableProperty functionName="Save" xsi:type="ns2:ReconfigurableFunctionType"/>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="firstPanel">
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
	      </ns2:layout>
	      <ns2:component xsi:type="ns2:UIHiddenType" UIID="selectProductTypeUI" />
	      <ns2:component xsi:type="ns2:UIHiddenType" UIID="selectPTemplateIdUI" />
	      <ns2:component xsi:type="ns2:UITextFieldType" UIID="searchTemplateUI">
            <ns2:UIStyle>uimaster_rightform_widget</ns2:UIStyle>
            <ns2:Property name="placeholder" >
                <ns2:value xsi:type="ns2:StringPropertyType">
                    <value>搜索产品模板</value>
                </ns2:value>
            </ns2:Property>
            <ns2:EventListener xsi:type="ns2:KeyPressListenerType">
                <ns2:handler functionName="searchTemplate" />
            </ns2:EventListener>
          </ns2:component>
	      <ns2:component xsi:type="ns2:UIReferenceEntityType" UIID="productTypeTree">
	         <ns2:referenceEntity entityName="org.shaolin.vogerp.commonmodel.form.CEHierarchyWithList" />
	         <ns2:reconfiguration originFunctionName="selectItem" overrideFunctionName="selectProductType" xsi:type="ns2:FunctionReconfigurationType"/>
	      </ns2:component>
	      <ns2:component xsi:type="ns2:UIListType" UIID="pTemplateListUI">
	        <ns2:UIStyle>uimaster_rightform_widget</ns2:UIStyle>
	        <ns2:size xsi:type="ns2:ExpressionPropertyType">
	          <ns2:expression>
	            <expressionString>{return 8;}</expressionString>
	          </ns2:expression>
	        </ns2:size>
	        <ns2:multiple xsi:type="ns2:ExpressionPropertyType">
	          <ns2:expression>
	            <expressionString>{return true;}</expressionString>
	          </ns2:expression>
	        </ns2:multiple>
	        <ns2:EventListener xsi:type="ns2:ItemChangeListenerType">
	          <ns2:handler functionName="selectPTemplate"></ns2:handler>
	        </ns2:EventListener>
	      </ns2:component>
	      <ns2:layoutConstraint>
            <ns2:componentId>searchTemplateUI</ns2:componentId>
            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
          </ns2:layoutConstraint>
		  <ns2:layoutConstraint>
	        <ns2:componentId>productTypeTree</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
	      <ns2:layoutConstraint>
	        <ns2:componentId>pTemplateListUI</ns2:componentId>
	        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="1" align="FULL"></ns2:constraint>
	      </ns2:layoutConstraint>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIPanelType" UIID="secondPanel">
          <ns2:UISkin xsi:type="ns2:UISkinType">
             <ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
             <ns2:param name="text">
                 <ns2:value xsi:type="ns2:StringPropertyType">
                     <ns2:value></ns2:value>
                 </ns2:value>
             </ns2:param>
          </ns2:UISkin>
	      <ns2:layout xsi:type="ns2:TableLayoutType">
	        <ns2:rowHeightWeight>1.0</ns2:rowHeightWeight>
	        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
	      </ns2:layout>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>firstPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>secondPanel</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="actionPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="addTemplateBtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="addTemplate"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:StringPropertyType">
          <ns2:value>添加新模板...</ns2:value>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="okbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Save"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>OKbtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIButtonType" UIID="cancelbtn">
        <ns2:EventListener xsi:type="ns2:ClickListenerType">
          <ns2:handler functionName="Cancel"></ns2:handler>
        </ns2:EventListener>
        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
          <ns2:bundle>Common</ns2:bundle>
          <ns2:key>Cancelbtn</ns2:key>
        </ns2:text>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>addTemplateBtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>okbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
      <ns2:layoutConstraint>
        <ns2:componentId>cancelbtn</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="2" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:layoutConstraint>
      <ns2:componentId>actionPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
    <ns2:constructorCode><![CDATA[
        { 
        var o = this;
        window.setTimeout(function(){
            // any ajax operation must be settle down as delay after invoking user constructor code.
	        o.selectProductType(o.productTypeTree.typeUI);
	        o.selectPTemplate(o.pTemplateListUI);
        },500);
        }]]></ns2:constructorCode>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="selectProductType" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="selectPTempalteId" category="JavaPrimitive">
      <type entityName="java.lang.String"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
		<ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
		<ns2:UIComponent componentPath="selectProductTypeUI" paramName="UIWidgetType"></ns2:UIComponent>
		<ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="selectProductType" paramName="StringData"></ns2:DataComponent>
	</ns2:ComponentMapping>
	<ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
        <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
        <ns2:UIComponent componentPath="selectPTemplateIdUI" paramName="UIWidgetType"></ns2:UIComponent>
        <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="selectPTempalteId" paramName="StringData"></ns2:DataComponent>
    </ns2:ComponentMapping>
	<ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping2">
      <ns2:mappingRule entityName="org.shaolin.vogerp.commonmodel.form.CEHierarchyWithList"></ns2:mappingRule>
      <ns2:UIComponent componentPath="productTypeTree" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="ceName">
        <ns2:expression>
          <expressionString><![CDATA[
          import org.shaolin.vogerp.productmodel.IProductService;
          import org.shaolin.bmdp.runtime.AppContext;
          {
             IProductService productService = (IProductService)AppContext.get().getService(IProductService.class);
             return productService.getUserProductRoot();
          }]]></expressionString>
        </ns2:expression>
      </ns2:DataComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="values">
        <ns2:expression>
          <expressionString><![CDATA[
          import java.util.ArrayList;
          import org.shaolin.bmdp.runtime.AppContext;
          {
             ArrayList list = new ArrayList();
             if ($selectProductType != null) {
                list.add($selectProductType);
             }
             return list;
          }]]></expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString><![CDATA[
      {
	      @odContext.executeAllMappings();
      }   
    ]]></expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>
      {
		@odContext.executeAllMappings();
	  }
	  </expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>