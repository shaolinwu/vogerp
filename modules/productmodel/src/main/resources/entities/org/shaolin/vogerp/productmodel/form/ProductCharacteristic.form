<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.productmodel.form.ProductCharacteristic</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="Save">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="saveDetail1050829457">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.productmodel.be.ProductCharacteristicImpl;
        import org.shaolin.vogerp.productmodel.dao.ProductModel;
        { 
            ProductCharacteristicImpl defaultUser = new ProductCharacteristicImpl();
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("editable", new Boolean(true));
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.ui2Data(input);

            defaultUser = (ProductCharacteristicImpl)input.get("beObject");
            String v = @page.getHidden("idUI").getValue();
            String pid = @page.getHidden("productIdUI").getValue();
            if (v != null && v.length() > 0) {
            	   Long objectId = Long.valueOf(v);
            	   defaultUser.setId(objectId.longValue());
            }
            if (pid != null && pid.length() > 0) {
            	   Long objectId = Long.valueOf(pid);
            	   defaultUser.setProductId(objectId.longValue());
            }
            if (defaultUser.getId() == 0) {
                ProductModel.INSTANCE.create(defaultUser);
            } else {
                ProductModel.INSTANCE.update(defaultUser);
            }

            form.closeIfinWindows();
            @page.removeForm(@page.getEntityUiid()); 
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="Cancel">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="cancelDetail-884729403">
      <ns2:exp>
        <expressionString>
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        { 
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid()); 
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }</expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>-1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel" dynamicUI="true">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>-1.0</ns2:columnWidthWeight>
        <ns2:columnWidthWeight>-1.0</ns2:columnWidthWeight>
      </ns2:layout>
		<ns2:dynamicUIFilter xsi:type="ns2:ExpressionPropertyType">
			<ns2:expression>
			  <expressionString>
			  import org.shaolin.bmdp.runtime.AppContext;
			  { 
			  	return $product.getType(); 
			  }
			  </expressionString>
			</ns2:expression>
		</ns2:dynamicUIFilter>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="idUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="productIdUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="product" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.productmodel.be.Product"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="beObject" category="BusinessEntity">
      <type entityName="org.shaolin.vogerp.productmodel.be.ProductCharacteristic"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="idUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ExpressionParamType" paramName="Number">
        <ns2:expression>
          <expressionString>$beObject.getId()</expressionString>
        </ns2:expression>
      </ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping1">
      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UITextWithNumber"></ns2:mappingRule>
      <ns2:UIComponent componentPath="productIdUI" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.productId" paramName="Number"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:ComponentMapping xsi:type="ns2:DynamicUIMappingType" name="simpleMapping0">
      <ns2:UIComponent componentPath="fieldPanel" paramName="UIWidgetType"></ns2:UIComponent>
      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="beObject.ceValues" paramName="jsonValue"></ns2:DataComponent>
    </ns2:ComponentMapping>
    <ns2:DataToUIMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
}</expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>