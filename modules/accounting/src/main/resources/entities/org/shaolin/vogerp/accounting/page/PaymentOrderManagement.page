<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.accounting.page.PaymentOrderManagement</entityName>
	<systemVersion>0</systemVersion>
	<description>收入支出管理</description>
	<ns2:UIEntity xsi:type="ns2:UIEntityType">
		<ns2:eventHandler functionName="openPOrder">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openPOrder-20150904-1109">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.accounting.be.PayOrderImpl;
        {
            Table orderInfoTable = (Table)@page.getElement("receivePayOrderTable");
            if (orderInfoTable.getSelectedRow() == null) {
                return;
            }
            PayOrderImpl defaultUser = (PayOrderImpl)orderInfoTable.getSelectedRow();
            
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("editable", new Boolean(false));
            RefForm form = new RefForm("Voucher", "org.shaolin.vogerp.accounting.form.PayOrder", input);
            @page.addElement(form);
            
            form.openInWindows("\u652F\u4ED8\u8BA2\u5355", new TableCallBack("receivePayOrderTable"), true);
        }
        ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<ns2:eventHandler functionName="openPOrder1">
			<ns2:ops xsi:type="ns2:OpCallAjaxType" name="openPOrder1-20150904-1109">
				<ns2:exp>
					<ns2:expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.accounting.be.PayOrderImpl;
        {
            Table orderInfoTable = (Table)@page.getElement("payOrderTable");
            if (orderInfoTable.getSelectedRow() == null) {
                return;
            }
            PayOrderImpl defaultUser = (PayOrderImpl)orderInfoTable.getSelectedRow();
            
            HashMap input = new HashMap();
            input.put("beObject", defaultUser);
            input.put("editable", new Boolean(false));
            RefForm form = new RefForm("Voucher", "org.shaolin.vogerp.accounting.form.PayOrder", input);
            @page.addElement(form);
            
            form.openInWindows("\u652F\u4ED8\u8BA2\u5355", new TableCallBack("payOrderTable"), true);
        }
        ]]></ns2:expressionString>
				</ns2:exp>
			</ns2:ops>
		</ns2:eventHandler>
		<ns2:eventHandler functionName="pay">
		    <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		        	eventsource = this.payOrderTable;
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="pay-20160406-1109">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
		         import java.util.HashMap;
		         import java.util.ArrayList;
		         import java.util.Date;
		         import org.shaolin.bmdp.runtime.AppContext; 
		         import org.shaolin.uimaster.page.AjaxContext;
		         import org.shaolin.uimaster.page.ajax.*;
		         import org.shaolin.vogerp.accounting.be.PayOrderImpl;
		         import org.shaolin.vogerp.accounting.ce.PayOrderStatusType;
		         import org.shaolin.vogerp.accounting.IPaymentService;
		         {
		             Table orderInfoTable = (Table)@page.getElement("payOrderTable");
		             if (orderInfoTable.getSelectedRow() == null) {
		                 return;
		             }
		             PayOrderImpl order = (PayOrderImpl)orderInfoTable.getSelectedRow();
		             if (order.getStatus() == PayOrderStatusType.NOTPAYED) {
		                 HashMap input = new HashMap();
	                     input.put("beObject", order);
	                     input.put("editable", new Boolean(true));
	                     RefForm form2 = new RefForm("payorderForm", "org.shaolin.vogerp.accounting.form.PaymentMethod", input);
	                     @page.addElement(form2);
	                     form2.openInWindows("支付方式选择", null, true);
		             } else {
		                 @page.executeJavaScript("alert('"+order.getStatus().getDisplayName()+"');");  
		             }
		         }
		         ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {
		            event.stopPropagation();
		        	return false;   
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="ensurePayment">
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		        	eventsource = this.payOrderTable;
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="ensurePayment-20160406-1109">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                 import java.util.HashMap;
                 import java.util.ArrayList;
                 import java.util.Date;
                 import org.shaolin.uimaster.page.AjaxContext;
                 import org.shaolin.uimaster.page.AjaxActionHelper;
                 import org.shaolin.uimaster.page.ajax.*;
                 import org.shaolin.vogerp.accounting.be.PayOrderImpl;
                 import org.shaolin.vogerp.accounting.ce.PayOrderStatusType;
                 import org.shaolin.vogerp.accounting.IPaymentService;
                 import org.shaolin.bmdp.runtime.AppContext;
                 {
                     Table orderInfoTable = (Table)@page.getElement("payOrderTable");
                     if (orderInfoTable.getSelectedRow() == null) {
                         return;
                     }
                     PayOrderImpl payOrder = (PayOrderImpl)orderInfoTable.getSelectedRow();
                     if (payOrder.getStatus() == PayOrderStatusType.PAYED) {
                        IPaymentService accountingService = (IPaymentService)AppContext.get().getService(IPaymentService.class);
                        //String returnUrl = accountingService.ensurePayment(payOrder);
                        //@page.executeJavaScript("UIMaster.util.forwardToPage(\"" + returnUrl + "\");");
                     } else {
                        @page.executeJavaScript("alert(\"Pay Order is not payed state.\");");
                     }
                 }
                 ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {
		            event.stopPropagation();
		        	return false;   
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
        </ns2:eventHandler>
        <!-- workflow action -->
        <ns2:eventHandler functionName="askForRefund">
            <ns2:ops xsi:type="ns2:OpExecuteScriptType">
		        <ns2:expressionString><![CDATA[
		        {   
		          eventsource = this.payOrderTable;
		          new UIMaster.ui.dialog({dialogType: UIMaster.ui.dialog.CONFIRM_DIALOG,message:WORKFLOW_COMFORMATION_MSG,messageType:UIMaster.ui.dialog.Warning,optionType:UIMaster.ui.dialog.YES_NO_OPTION,title:'',height:150,width:300,
		          handler: function() {
		        
		        	UIMaster.triggerServerEvent(UIMaster.getUIID(eventsource),"refundPrepayment",UIMaster.getValue(eventsource),o.__entityName);
		        	
		        	}
                  }).open();
		        }
		        ]]></ns2:expressionString>
		    </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="requestForWithdraw">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="requestForWithdraw-20170406-1109">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.List;
                    import java.util.HashMap;
                    import java.util.Date;
                    import java.util.ArrayList;
                    import org.shaolin.bmdp.utils.DateUtil;
                    import org.shaolin.bmdp.runtime.Registry;
                    import org.shaolin.bmdp.runtime.AppContext; 
                    import org.shaolin.bmdp.runtime.security.UserContext;
			        import org.shaolin.bmdp.runtime.AppContext;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
			        import org.shaolin.vogerp.accounting.be.*;
			        import org.shaolin.vogerp.accounting.ce.*;
			        import org.shaolin.vogerp.accounting.IPaymentService;
		            import org.shaolin.vogerp.accounting.IAccountingService;
			        import org.shaolin.vogerp.accounting.dao.AccountingModel;
                    { 
			            // 之前一直没找到微信转账的接口，我现在才知道，微信是没有提供转账的api的，所以客户不能提现到微信. 客户只能提现到支付宝.
		                IAccountingService accountingService = (IAccountingService)AppContext.get().getService(IAccountingService.class);
						double availabeAmount = accountingService.queryUserTotalAvailableAmount(UserContext.getUserContext().getUserId());
                        if (availabeAmount > 0) {
	                        ICustomerAccount customerAccount = (ICustomerAccount)UserContext.getUserData("AccountInfo", true);
	                        if (customerAccount == null || customerAccount.getThirdPartyAccount() == null) {
	                           Dialog.showMessageDialog("您还没有配制支付宝帐号，请点击设置按钮！", "没有第三方交易帐号", Dialog.WARNING_MESSAGE, null);
	                           return;
	                        }
	                        PayOrderImpl condition = new PayOrderImpl();
							condition.setEndUserId(UserContext.getUserContext().getUserId());
							condition.setStatus(PayOrderStatusType.AGREEDPAYTOEND);
							condition.setWithdrawn(false);
							List orders = AccountingModel.INSTANCE.searchPaymentOrder(condition, null, 0, -1);
	                        IPaymentService payService = (IPaymentService)AppContext.get().getService(IPaymentService.class);
	                        if (!payService.isRequestedForWithdraw(customerAccount.getUserId())) {
			                   payService.requestForWithdraw(orders, customerAccount);
	                           Dialog.showMessageDialog("提现申请成功，系统将在5个工作日内完成提现申请,请您耐心等待。","提醒",Dialog.INFORMATION_MESSAGE, null);
	                        } else {
	                           Dialog.showMessageDialog("您已申请提现中...，请您耐心等待！", "", Dialog.INFORMATION_MESSAGE, null);
	                        }
                        } else {
                            Dialog.showMessageDialog("您没有余额提现，请多加油哟！", "", Dialog.WARNING_MESSAGE, null);
                        }
                    }
                 ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        <ns2:eventHandler functionName="withdrawSetting">
            <ns2:ops xsi:type="ns2:OpCallAjaxType" name="withdrawSetting-20170406-1109">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                 import java.util.HashMap;
                 import java.util.List;
                 import java.util.Date;
                 import org.shaolin.uimaster.page.AjaxContext;
                 import org.shaolin.uimaster.page.AjaxActionHelper;
                 import org.shaolin.uimaster.page.ajax.*;
                 import org.shaolin.vogerp.accounting.be.*;
                 import org.shaolin.vogerp.accounting.ce.*;
                 import org.shaolin.vogerp.accounting.dao.AccountingModel;
                 import org.shaolin.bmdp.runtime.security.UserContext;
                 {
                    HashMap input = new HashMap();
                    CustomerAccountImpl beObject = new CustomerAccountImpl();
                    beObject.setUserId(UserContext.getUserContext().getUserId());
                    List list = AccountingModel.INSTANCE.searchUserAccount(beObject, null, 0, 1);
                    if (list == null || list.size() == 0) {
                       beObject = new CustomerAccountImpl();
                    } else {
                       beObject = (CustomerAccountImpl)list.get(0);
                    }
                    input.put("beObject", beObject);
		            input.put("editable", new Boolean(true));
		            RefForm form = new RefForm("settingsForm", "org.shaolin.vogerp.accounting.form.CustomerAccount", input);
		            @page.addElement(form);
		            
		            form.openInWindows("提现帐号设置", null, true);
                 }
                 ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
			<ns2:UISkin xsi:type="ns2:UISkinType">
				<ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel</ns2:skinName>
				<ns2:param name="text">
					<ns2:value xsi:type="ns2:StringPropertyType">
						<ns2:value></ns2:value>
					</ns2:value>
				</ns2:param>
			</ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
				<ns2:ajaxLoad>true</ns2:ajaxLoad>
				<ns2:tab uiid="MyWalletPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>我的钱包</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="MyWalletPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UIPanelType" UIID="buttonPanel0">
					      <ns2:layout xsi:type="ns2:TableLayoutType">
					        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
					      </ns2:layout>
	                        <ns2:component xsi:type="ns2:UILabelType" UIID="totalAmountUI">
					          <ns2:Property name="text">
					            <ns2:value xsi:type="ns2:ExpressionPropertyType">
							         <ns2:expression>
							           <expressionString><![CDATA[
							           import org.shaolin.bmdp.runtime.AppContext;
							           import org.shaolin.bmdp.runtime.security.UserContext;
							           import org.shaolin.vogerp.accounting.IAccountingService;
							           { 
							               IAccountingService accountingService = (IAccountingService)AppContext.get().getService(IAccountingService.class);
							               double totalAmount = accountingService.queryUserTotalAmount(UserContext.getUserContext().getUserId());
							               return "总收入： " + totalAmount + "\uFFE5"; 
							           }]]></expressionString>
							         </ns2:expression>
						        </ns2:value>
				              </ns2:Property>
					        </ns2:component>
					        <ns2:component xsi:type="ns2:UILabelType" UIID="withdrawAmountUI">
					          <ns2:Property name="text">
					            <ns2:value xsi:type="ns2:ExpressionPropertyType">
							         <ns2:expression>
							           <expressionString><![CDATA[
							           import org.shaolin.bmdp.runtime.AppContext;
							           import org.shaolin.bmdp.runtime.security.UserContext;
							           import org.shaolin.vogerp.accounting.IAccountingService;
							           { 
							               IAccountingService accountingService = (IAccountingService)AppContext.get().getService(IAccountingService.class);
							               double availabeAmount = accountingService.queryUserTotalAvailableAmount(UserContext.getUserContext().getUserId());
							               return "可提现： " + availabeAmount + "\uFFE5"; 
							           }]]></expressionString>
							         </ns2:expression>
						        </ns2:value>
				              </ns2:Property>
					        </ns2:component>
					        <ns2:component xsi:type="ns2:UILabelType" UIID="hintUILabel2">
					          <ns2:text xsi:type="ns2:StringPropertyType">
					            <ns2:value>*： 目前加工达人只支持提现到支付宝和微信帐号提现，请您点击“设置”按钮进行提现帐号配制。谢谢！</ns2:value>
					          </ns2:text>
					        </ns2:component>
					        <ns2:layoutConstraint>
	                            <ns2:componentId>totalAmountUI</ns2:componentId>
	                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
	                                x="0" y="0" align="FULL"></ns2:constraint>
	                        </ns2:layoutConstraint>
	                        <ns2:layoutConstraint>
	                            <ns2:componentId>withdrawAmountUI</ns2:componentId>
	                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
	                                x="0" y="1" align="FULL"></ns2:constraint>
	                        </ns2:layoutConstraint>
	                        <ns2:layoutConstraint>
	                            <ns2:componentId>hintUILabel2</ns2:componentId>
	                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
	                                x="0" y="2" align="FULL"></ns2:constraint>
	                        </ns2:layoutConstraint>
					    </ns2:component>
				        <ns2:component xsi:type="ns2:UIPanelType" UIID="buttonPanel1">
					      <ns2:layout xsi:type="ns2:TableLayoutType">
					        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
					        <ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
					      </ns2:layout>
					        <ns2:component xsi:type="ns2:UIButtonType" UIID="settingBtnUI">
					          <ns2:text xsi:type="ns2:StringPropertyType">
						         <ns2:value>设置</ns2:value>
						      </ns2:text>
						      <ns2:EventListener xsi:type="ns2:ClickListenerType">
					            <ns2:handler functionName="withdrawSetting"></ns2:handler>
					          </ns2:EventListener>
					        </ns2:component>
					        <ns2:component xsi:type="ns2:UIButtonType" UIID="withdrawBtnUI">
					          <ns2:text xsi:type="ns2:StringPropertyType">
						         <ns2:value>提现</ns2:value>
						      </ns2:text>
						      <ns2:EventListener xsi:type="ns2:ClickListenerType">
					            <ns2:handler functionName="requestForWithdraw"></ns2:handler>
					          </ns2:EventListener>
					          <ns2:editable xsi:type="ns2:ExpressionPropertyType">
					            <ns2:expression>
					              <expressionString>{return true;}</expressionString>
					            </ns2:expression>
					          </ns2:editable>
					        </ns2:component>
					        <ns2:layoutConstraint>
                            <ns2:componentId>settingBtnUI</ns2:componentId>
	                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
	                                x="0" y="0" align="FULL"></ns2:constraint>
	                        </ns2:layoutConstraint>
	                        <ns2:layoutConstraint>
	                            <ns2:componentId>withdrawBtnUI</ns2:componentId>
	                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
	                                x="1" y="0" align="FULL"></ns2:constraint>
	                        </ns2:layoutConstraint>
					    </ns2:component>
				        
				        <ns2:layoutConstraint>
                            <ns2:componentId>buttonPanel0</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                        <ns2:layoutConstraint>
                            <ns2:componentId>buttonPanel1</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="1" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
				    </ns2:panel>
				</ns2:tab>
				
                <ns2:tab uiid="PayVoucherInfoPanel1">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>支出明细</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="PayVoucherInfoPanel1">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UILabelType" UIID="hintUILabel">
				          <ns2:text xsi:type="ns2:StringPropertyType">
				            <ns2:value>*： 如您选择在手机浏览器中进行微信支付。请看到的二维码后，需截屏保存，再用微信扫描即可。谢谢！</ns2:value>
				          </ns2:text>
				        </ns2:component>
                        <ns2:component xsi:type="ns2:UITableType" UIID="payOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.accounting.be.PayOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>20</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
                                     import java.util.List;
                                     import org.shaolin.uimaster.page.ajax.TableConditions;
                                     import org.shaolin.vogerp.accounting.be.*;
                                     import org.shaolin.vogerp.accounting.ce.*;
                                     import org.shaolin.vogerp.accounting.dao.AccountingModel;
                                     import org.shaolin.bmdp.runtime.security.UserContext;
                                     {
                                        if ($tableCondition == null) {
                                           $tableCondition = TableConditions.createCondition(new PayOrderImpl());
                                           $tableCondition.setCount(20);
                                           $tableCondition.addOrder("createDate", false);
                                        }
                                        PayOrderImpl condition = (PayOrderImpl)$tableCondition.getCondition();
						                condition.setEndUserId(UserContext.getUserContext().getUserId());
                                        return AccountingModel.INSTANCE.searchPaymentOrder(condition,
                                                      $tableCondition.getOrders(),
                                                      $tableCondition.getOffset(), 
                                                      $tableCondition.getCount());
                                     }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>支付订单号</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Label</ns2:type>
                                </ns2:uiType>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>金额</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.amount</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Label</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                import org.shaolin.uimaster.page.od.formats.FormatUtil;
						                {
						                   return FormatUtil.getCurrency($rowBE.getAmount() / 100, null, true);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>描述</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.description</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Text</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return StringUtil.escape(StringUtil.getAbbreviatoryString($rowBE.getDescription(), 20));
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                              <ns2:title xsi:type="ns2:StringPropertyType">
                                  <ns2:value>支付状态</ns2:value>
                              </ns2:title>
                              <ns2:beFieldId>rowBE.status</ns2:beFieldId>
                              <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                              <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                  <ns2:expression xsi:type="ns2:ExpressionType">
                                      <ns2:expressionString><![CDATA[
                                      import org.shaolin.bmdp.runtime.AppContext;
                                      import org.shaolin.vogerp.accounting.ce.PayOrderStatusType;
                                      {
                                          $rowBE.setStatus((PayOrderStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.accounting.ce.PayOrderStatusType").getByIntValue(Integer.valueOf($value).intValue()));
                                      }]]></ns2:expressionString>
                                  </ns2:expression>
                              </ns2:updateCondition>
                          </ns2:column>
                          <ns2:column xsi:type="ns2:UITableColumnType">
                              <ns2:title xsi:type="ns2:StringPropertyType">
                                  <ns2:value>支付类型</ns2:value>
                              </ns2:title>
                              <ns2:beFieldId>rowBE.payBusinessType</ns2:beFieldId>
                              <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                              <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                  <ns2:expression xsi:type="ns2:ExpressionType">
                                      <ns2:expressionString><![CDATA[
                                      import org.shaolin.bmdp.runtime.AppContext;
                                      import org.shaolin.vogerp.accounting.ce.PayBusinessType;
                                      {
                                          $rowBE.setPayBusinessType((PayBusinessType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.accounting.ce.PayBusinessType").getByIntValue(Integer.valueOf($value).intValue()));
                                      }]]></ns2:expressionString>
                                  </ns2:expression>
                              </ns2:updateCondition>
                          </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>DateRange</ns2:type>
                                    <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition>
                                    <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
                                </ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                      import org.shaolin.uimaster.page.od.formats.FormatUtil;
                                      import java.util.Date;
                                      {
                                          if ($value == null || "".equals($value)) {
                                              if ("rowBE.startCreateDate".equals($filterId)) {
                                                  $rowBE.setStartCreateDate(null);
                                              } else {
                                                  $rowBE.setEndCreateDate(null);
                                              }
                                          } else {
                                              Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
                                              if ("rowBE.startCreateDate".equals($filterId)) {
                                                  $rowBE.setStartCreateDate(d);
                                              } else {
                                                  $rowBE.setEndCreateDate(d);
                                              }
                                          }
                                      }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>操作</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.userId</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>HTML</ns2:type>
                                </ns2:uiType>
                                <ns2:cssStype>payActions</ns2:cssStype>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
		                           <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.vogerp.accounting.util.PaymentUtil;
		                                {
		                                   return PaymentUtil.getPayOperations($rowBE, $formId);
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:rowExpression>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                      {
                                      }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            
                            <ns2:defaultActions />
                        </ns2:component>
                        <ns2:layoutConstraint>
							<ns2:componentId>hintUILabel</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="0" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
                        <ns2:layoutConstraint>
                            <ns2:componentId>payOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="1" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
                
                <ns2:tab uiid="PayVoucherInfoPanel">
                    <ns2:title xsi:type="ns2:StringPropertyType">
                        <ns2:value>收入明细</ns2:value>
                    </ns2:title>
                    <ns2:panel UIID="PayVoucherInfoPanel">
                        <ns2:layout xsi:type="ns2:TableLayoutType">
                            <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
                            <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
                        </ns2:layout>
                        <ns2:component xsi:type="ns2:UITableType" UIID="receivePayOrderTable">
                            <ns2:beElement>org.shaolin.vogerp.accounting.be.PayOrder</ns2:beElement>
                            <ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
                            <ns2:defaultRowSize>20</ns2:defaultRowSize>
                            <ns2:showActionBar>true</ns2:showActionBar>
                            <ns2:showFilter>true</ns2:showFilter>
                            <ns2:query xsi:type="ns2:ExpressionPropertyType">
                                <ns2:expression xsi:type="ns2:ExpressionType">
                                    <ns2:expressionString><![CDATA[
						             import java.util.List;
						             import org.shaolin.uimaster.page.ajax.TableConditions;
						             import org.shaolin.vogerp.accounting.be.*;
						             import org.shaolin.vogerp.accounting.ce.*;
						             import org.shaolin.vogerp.accounting.dao.AccountingModel;
						             import org.shaolin.bmdp.runtime.security.UserContext;
						             {
						                if ($tableCondition == null) {
						                   $tableCondition = TableConditions.createCondition(new PayOrderImpl());
						                   $tableCondition.setCount(20);
						                   $tableCondition.addOrder("createDate", false);
						                }
						                PayOrderImpl condition = (PayOrderImpl)$tableCondition.getCondition();
						                condition.setUserId(UserContext.getUserContext().getUserId());
						                return AccountingModel.INSTANCE.searchPaymentOrder(condition,
						                              $tableCondition.getOrders(),
						                              $tableCondition.getOffset(), 
						                              $tableCondition.getCount());
						             }]]></ns2:expressionString>
                                </ns2:expression>
                            </ns2:query>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>支付订单号</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.serialNumber</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Label</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return $rowBE.getSerialNumber() + ($rowBE.getWithdrawn()? "(已提现)":"");
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>金额</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.amount</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Label</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                import org.shaolin.uimaster.page.od.formats.FormatUtil;
						                {
						                   return FormatUtil.getCurrency($rowBE.getAmount() / 100, null, true);
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>描述</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.description</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>Text</ns2:type>
                                </ns2:uiType>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
						            <ns2:expression xsi:type="ns2:ExpressionType">
						                <ns2:expressionString><![CDATA[
						                import org.shaolin.bmdp.utils.StringUtil;
						                {
						                   return StringUtil.escape(StringUtil.getAbbreviatoryString($rowBE.getDescription(), 20));
						                }]]></ns2:expressionString>
						            </ns2:expression>
						        </ns2:rowExpression>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
	                          <ns2:title xsi:type="ns2:StringPropertyType">
	                              <ns2:value>支付状态</ns2:value>
	                          </ns2:title>
	                          <ns2:beFieldId>rowBE.status</ns2:beFieldId>
	                          <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
	                          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
	                              <ns2:expression xsi:type="ns2:ExpressionType">
	                                  <ns2:expressionString><![CDATA[
	                                  import org.shaolin.bmdp.runtime.AppContext;
	                                  import org.shaolin.vogerp.accounting.ce.PayOrderStatusType;
	                                  {
	                                      $rowBE.setStatus((PayOrderStatusType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.accounting.ce.PayOrderStatusType").getByIntValue(Integer.valueOf($value).intValue()));
	                                  }]]></ns2:expressionString>
	                              </ns2:expression>
	                          </ns2:updateCondition>
	                      </ns2:column>
	                      <ns2:column xsi:type="ns2:UITableColumnType">
                              <ns2:title xsi:type="ns2:StringPropertyType">
                                  <ns2:value>支付类型</ns2:value>
                              </ns2:title>
                              <ns2:beFieldId>rowBE.payBusinessType</ns2:beFieldId>
                              <ns2:uiType xsi:type="ns2:UITableColHTMLType"><ns2:type>ComBox</ns2:type></ns2:uiType>
                              <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                  <ns2:expression xsi:type="ns2:ExpressionType">
                                      <ns2:expressionString><![CDATA[
                                      import org.shaolin.bmdp.runtime.AppContext;
                                      import org.shaolin.vogerp.accounting.ce.PayBusinessType;
                                      {
                                          $rowBE.setPayBusinessType((PayBusinessType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.accounting.ce.PayBusinessType").getByIntValue(Integer.valueOf($value).intValue()));
                                      }]]></ns2:expressionString>
                                  </ns2:expression>
                              </ns2:updateCondition>
                          </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>建立时间</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.createDate</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>DateRange</ns2:type>
                                    <ns2:startCondition>rowBE.startCreateDate</ns2:startCondition>
                                    <ns2:endCondition>rowBE.endCreateDate</ns2:endCondition>
                                </ns2:uiType>
                                <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
						              import org.shaolin.uimaster.page.od.formats.FormatUtil;
						              import java.util.Date;
						              {
						                  if ($value == null || "".equals($value)) {
						                      if ("rowBE.startCreateDate".equals($filterId)) {
						                          $rowBE.setStartCreateDate(null);
						                      } else {
						                          $rowBE.setEndCreateDate(null);
						                      }
						                  } else {
						                      Date d = (Date)FormatUtil.convertUIToData(FormatUtil.DATE, $value);
						                      if ("rowBE.startCreateDate".equals($filterId)) {
						                          $rowBE.setStartCreateDate(d);
						                      } else {
						                          $rowBE.setEndCreateDate(d);
						                      }
						                  }
						              }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:column xsi:type="ns2:UITableColumnType">
                                <ns2:title xsi:type="ns2:StringPropertyType">
                                    <ns2:value>操作</ns2:value>
                                </ns2:title>
                                <ns2:beFieldId>rowBE.userId</ns2:beFieldId>
                                <ns2:uiType xsi:type="ns2:UITableColHTMLType">
                                    <ns2:type>HTML</ns2:type>
                                </ns2:uiType>
                                <ns2:cssStype>payActions</ns2:cssStype>
                                <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
		                           <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.vogerp.accounting.util.PaymentUtil;
		                                {
		                                   return PaymentUtil.getReceivedPayOperations($rowBE, $formId);
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:rowExpression>
		                        <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
                                    <ns2:expression xsi:type="ns2:ExpressionType">
                                        <ns2:expressionString><![CDATA[
                                      {
                                      }]]></ns2:expressionString>
                                    </ns2:expression>
                                </ns2:updateCondition>
                            </ns2:column>
                            <ns2:defaultActions>
                            </ns2:defaultActions>
                        </ns2:component>
                        <ns2:layoutConstraint>
                            <ns2:componentId>receivePayOrderTable</ns2:componentId>
                            <ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
                                x="0" y="0" align="FULL"></ns2:constraint>
                        </ns2:layoutConstraint>
                    </ns2:panel>
                </ns2:tab>
			</ns2:component>
			<ns2:layoutConstraint>
				<ns2:componentId>functionsTab</ns2:componentId>
				<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
					x="0" y="0" align="FULL"></ns2:constraint>
			</ns2:layoutConstraint>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	</ns2:ODMapping>
	<ns2:in>
	    <ns2:serverOperation xsi:type="ns2:ExpressionType">
			<ns2:expressionString><![CDATA[
			import org.shaolin.bmdp.runtime.AppContext;
			{
			  @odContext.executeAllMappings();
			}]]></ns2:expressionString>
		</ns2:serverOperation>
        <ns2:clientAction xsi:type="ns2:ExpressionType">
            <ns2:expressionString><![CDATA[
			{
			}
			]]></ns2:expressionString>
        </ns2:clientAction>
	</ns2:in>
</ns2:UIPage>
