<?xml version="1.0" ?>
<ns2:UIEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns5="http://bmdp.shaolin.org/datamodel/PageDiagram" xmlns:ns4="http://bmdp.shaolin.org/datamodel/RDBDiagram" xmlns:ns3="http://bmdp.shaolin.org/datamodel/BEDiagram" xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common" xsi:schemaLocation="">
  <entityName>org.shaolin.vogerp.order.form.PurchaseItemTable</entityName>
  <systemVersion>0</systemVersion>
  <ns2:eventHandler functionName="addItem">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectedProduct0_49169030">
      <ns2:exp>
        <expressionString><![CDATA[
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.order.be.PurchaseItemImpl;
        { 
            PurchaseItemImpl item = new PurchaseItemImpl();
            Table tableWidget = (Table)@page.getElement("itemTable");
            tableWidget.addRow(item);
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="deleteItem">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteItem_839670735">
      <ns2:exp>
        <expressionString><![CDATA[
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.vogerp.order.be.PurchaseItemImpl;
        { 
            Table tableWidget = (Table)@page.getElement("itemTable");
            if (tableWidget.getSelectedRow() == null) {
                return;
            }
            tableWidget.deleteRow(tableWidget.getSelectedIndex());
        }]]></expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="openProductPriceSelector">
      <ns2:ops xsi:type="ns2:OpCallAjaxType" name="openProductPriceSelector-201601091120">
          <ns2:exp>
              <ns2:expressionString><![CDATA[
              import java.util.HashMap;
              import java.util.List;
              import org.shaolin.uimaster.page.AjaxContext;
              import org.shaolin.uimaster.page.ajax.*;
              import org.shaolin.vogerp.productmodel.util.ProductUtil;
              {
                  Hidden productTypeUI = @page.getHidden("productTypeUI");
                  HashMap input = new HashMap();
                  input.put("productId", productTypeUI.getValue());
                  input.put("editable", new Boolean(false));
                  input.put(RefForm.RECONFIG_ORIGINAL, "SelectProduct");
                  
                  String prefix =  @page.getEntityUiid();
                  input.put(RefForm.RECONFIG_OVERRIDE, prefix + ".SaveSelectedTemplate");
                  RefForm form = new RefForm("ptemplateForm", "org.shaolin.vogerp.productmodel.form.ProductPricePackageSelector", input);
                  @page.addElement(form);
                  
                  form.openInWindows("产品价格包选择", null, 690, 500);
              }
              ]]></ns2:expressionString>
          </ns2:exp>
      </ns2:ops>
  </ns2:eventHandler>
  <ns2:eventHandler functionName="SaveSelectedTemplate">
    <ns2:ops xsi:type="ns2:OpCallAjaxType" name="SaveSelectedTemplate-201504121132">
      <ns2:exp>
        <expressionString>
        import java.util.HashMap;
        import org.shaolin.uimaster.page.AjaxContext;
        import org.shaolin.uimaster.page.ajax.*;
        import org.shaolin.bmdp.runtime.ce.CEUtil;
        import org.shaolin.vogerp.order.be.PurchaseItemImpl;
        import org.shaolin.vogerp.productmodel.be.ProductPriceImpl;
        import org.shaolin.vogerp.productmodel.IProductService;
        { 
            Tree tree = @page.getTree("productTree");
            ProductPriceImpl prices = (ProductPriceImpl)tree.getSelectedObject();
            if (prices == null) {
                //TODO: please select a product.
                return;
            }
            
            // because this is a reconfigurable function, we have to get the right form id.
            String formId = "saleOrder.orderItemTable.";
            Table tableWidget = (Table)@page.getElement(formId + "itemTable");
            if (tableWidget.getSelectedRow() == null) {
                return;
            }
            
            PurchaseItemImpl selectedRow = (PurchaseItemImpl)tableWidget.getSelectedRow();
            selectedRow.setPricePackage(prices);
            selectedRow.setProductId(prices.getProduct().getId());
            selectedRow.setPriceId(prices.getId());
            selectedRow.setUnitPrice(prices.getPrice());
            tableWidget.refresh();
            
            RefForm form = (RefForm)@page.getElement(@page.getEntityUiid());
            form.closeIfinWindows(true);
            @page.removeForm(@page.getEntityUiid()); 
        }
        </expressionString>
      </ns2:exp>
    </ns2:ops>
  </ns2:eventHandler>
  <ns2:body xsi:type="ns2:UIPanelType" UIID="Form">
    <ns2:layout xsi:type="ns2:TableLayoutType">
      <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
      <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
    </ns2:layout>
    <ns2:component xsi:type="ns2:UIPanelType" UIID="fieldPanel">
      <ns2:layout xsi:type="ns2:TableLayoutType">
        <ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
        <ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
      </ns2:layout>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="parentIdUI">
        <ns2:secure>
          <ns2:value>true</ns2:value>
        </ns2:secure>
      </ns2:component>
      <ns2:component xsi:type="ns2:UIHiddenType" UIID="productTypeUI" />
      <ns2:component xsi:type="ns2:UITableType" UIID="itemTable">
        <ns2:editable xsi:type="ns2:BooleanPropertyType">
          <ns2:value>true</ns2:value>
        </ns2:editable>
        <ns2:beElement>org.shaolin.vogerp.order.be.PurchaseItem</ns2:beElement>
        <ns2:initQuery>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $list;
        }]]></expressionString>
          </ns2:expression>
        </ns2:initQuery>
        <ns2:query>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $table.getListData();
        }]]></expressionString>
          </ns2:expression>
        </ns2:query>
        <ns2:totalCount>
          <ns2:expression>
            <expressionString><![CDATA[
        import java.util.List;
        {
            return $table.getListData().size();
        }]]></expressionString>
          </ns2:expression>
        </ns2:totalCount>
        <ns2:defaultRowSize>20</ns2:defaultRowSize>
        <ns2:showActionBar>true</ns2:showActionBar>
        <ns2:showFilter>false</ns2:showFilter>
        <ns2:editableCell>true</ns2:editableCell>
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_order_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.order.be.OrderItem.product</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.product</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>HTML</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
          	<ns2:expression xsi:type="ns2:ExpressionType">
                <ns2:expressionString><![CDATA[
                import org.shaolin.bmdp.runtime.AppContext;
                import org.shaolin.vogerp.productmodel.be.ProductPriceImpl;
                import org.shaolin.vogerp.productmodel.IProductService;
                import org.shaolin.vogerp.productmodel.util.ProductUtil;
                {
                    String onclick = "javascript:defaultname.saleOrder.orderItemTable.openProductPriceSelector(defaultname.saleOrder.orderItemTable.productTypeUI,event);";
                	if ($rowBE.getPriceId() > 0) {
                	   if ($rowBE.getPricePackage() == null) {
	                	   IProductService service = (IProductService)AppContext.get().getService(IProductService.class);
	                	   $rowBE.setPricePackage((ProductPriceImpl)service.getPricePackage($rowBE.getPriceId()));
                	   }
                	   return "<span onclick='"+onclick+"'>"+ProductUtil.getPricePackage($rowBE.getPricePackage())+"</span>";
                	} else {
                	   return "<span onclick='"+onclick+"'>请选择...</span>";
                	}
                }]]></ns2:expressionString>
            </ns2:expression>
          </ns2:rowExpression>
          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
             <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import org.shaolin.bmdp.runtime.AppContext;
                 {
                 }]]></ns2:expressionString>
             </ns2:expression>
          </ns2:updateCondition>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_order_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.order.be.OrderItem.unitPrice</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.unitPrice</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Text</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
          	<ns2:expression xsi:type="ns2:ExpressionType">
                <ns2:expressionString><![CDATA[
                import org.shaolin.bmdp.runtime.AppContext;
                import org.shaolin.vogerp.productmodel.util.ProductUtil;
                {
                	return $rowBE.getUnitPrice();
                }]]></ns2:expressionString>
            </ns2:expression>
          </ns2:rowExpression>
          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
             <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import org.shaolin.bmdp.runtime.AppContext;
                 {
                     $rowBE.setUnitPrice(Double.valueOf($value).doubleValue());
                 }]]></ns2:expressionString>
             </ns2:expression>
          </ns2:updateCondition>
        </ns2:column>
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_order_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.order.be.OrderItem.amount</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.amount</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Text</ns2:type>
          </ns2:uiType>
          <ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
            <ns2:expression xsi:type="ns2:ExpressionType">
                <ns2:expressionString><![CDATA[
                import org.shaolin.bmdp.runtime.AppContext;
                import org.shaolin.vogerp.productmodel.util.ProductUtil;
                {
                    if ($rowBE.getAmount() == 0) {
                        $rowBE.setAmount(1);
                    }
                
                    return $rowBE.getAmount();
                }]]></ns2:expressionString>
            </ns2:expression>
          </ns2:rowExpression>
          <ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
             <ns2:expression xsi:type="ns2:ExpressionType">
                 <ns2:expressionString><![CDATA[
                 import org.shaolin.bmdp.runtime.AppContext;
                 {
                     $rowBE.setAmount(Integer.valueOf($value).intValue());
                 }]]></ns2:expressionString>
             </ns2:expression>
          </ns2:updateCondition>
        </ns2:column>
        <!-- 
        <ns2:column>
          <ns2:title xsi:type="ns2:ResourceBundlePropertyType">
            <ns2:bundle>org_shaolin_vogerp_order_i18n</ns2:bundle>
            <ns2:key>org.shaolin.vogerp.order.be.OrderItem.comment</ns2:key>
          </ns2:title>
          <ns2:beFieldId>rowBE.comment</ns2:beFieldId>
          <ns2:uiType>
            <ns2:type>Text</ns2:type>
          </ns2:uiType>
        </ns2:column>
         -->
        <ns2:defaultActions>
          <ns2:defaultNewAction>addItem</ns2:defaultNewAction>
          <ns2:defaultDeleteAction>deleteItem</ns2:defaultDeleteAction>
        </ns2:defaultActions>
      </ns2:component>
      <ns2:layoutConstraint>
        <ns2:componentId>itemTable</ns2:componentId>
        <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
      </ns2:layoutConstraint>
    </ns2:component>
    <ns2:layoutConstraint>
      <ns2:componentId>fieldPanel</ns2:componentId>
      <ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
    </ns2:layoutConstraint>
  </ns2:body>
  <ns2:mapping>
    <systemVersion>0</systemVersion>
    <ns2:DataEntity scope="InOut" name="list" category="JavaClass">
      <type entityName="java.util.List"></type>
    </ns2:DataEntity>
    <ns2:DataEntity scope="InOut" name="editable" category="JavaPrimitive">
      <type entityName="java.lang.Boolean"></type>
    </ns2:DataEntity>
    <ns2:DataToUIMappingOperation>
      <expressionString>{
@odContext.executeAllMappings();
      if ($list == null) {
          $list = new java.util.ArrayList();
      }
}</expressionString>
    </ns2:DataToUIMappingOperation>
    <ns2:UIToDataMappingOperation>
      <expressionString><![CDATA[
      import org.shaolin.uimaster.page.AjaxContext;
      import org.shaolin.uimaster.page.ajax.*;
      {
		@odContext.executeAllMappings();
		Table tableWidget = (Table)@page.getElement("itemTable");
		$list = tableWidget.getListData();
	  }]]></expressionString>
    </ns2:UIToDataMappingOperation>
  </ns2:mapping>
</ns2:UIEntity>