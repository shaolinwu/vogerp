<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.coupon.page.Test</entityName>
	<systemVersion>0</systemVersion>
	<description>前台抽奖</description>

	<ns2:UIEntity xsi:type="ns2:UIEntityType">
		<ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
	</ns2:ODMapping>
	<ns2:in>
		<ns2:serverOperation xsi:type="ns2:ExpressionType">
			<ns2:expressionString><![CDATA[
            import org.shaolin.vogerp.coupon.dao;
			import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
			import org.shaolin.bmdp.runtime.security.UserContext;
			import java.util.List;
			import org.shaolin.vogerp.coupon.util.CouponUtil;
			import java.util.Date;
			import org.shaolin.vogerp.coupon.dao.CouponModel;
			{
				CouponTypeImpl condition = new CouponTypeImpl();
				List couponTypes = CouponModel.INSTANCE.searchCouponType(condition, null, 0, 0);
				if (couponTypes != null && couponTypes.size() > 0) {
					for (int i = 0; i < couponTypes.size(); i++) {
						CouponTypeImpl couponType = (CouponTypeImpl)couponTypes.get(i);
						int resetInterval = couponType.getResetInterval().getIntValue();
						Date lastResetDate = couponType.getLastResetDate();
						Date nextResetDate = CouponUtil.addDays(lastResetDate, resetInterval);
						if (lastResetDate == null || nextResetDate.compareTo(new Date()) <= 0) {
							couponType.setRestNum(couponType.getTotalNum());
							couponType.setLastResetDate(new Date());
							CouponModel.INSTANCE.update(couponType);
						}
					}
				}
			}]]></ns2:expressionString>
		</ns2:serverOperation>
	</ns2:in>
</ns2:UIPage>