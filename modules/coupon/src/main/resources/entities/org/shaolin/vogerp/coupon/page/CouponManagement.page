<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:UIPage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ns2="http://bmdp.shaolin.org/datamodel/Page" xmlns="http://bmdp.shaolin.org/datamodel/Common"
	xsi:schemaLocation="">
	<entityName>org.shaolin.vogerp.coupon.page.CouponManagement</entityName>
	<systemVersion>0</systemVersion>
	<description>奖项设置</description>

	<ns2:UIEntity xsi:type="ns2:UIEntityType">
		<!-- 新建优惠类型 -->
		<ns2:eventHandler functionName="createCouponType">
			<ns2:ops xsi:type="ns2:OpCallAjaxType" name="createCouponType-20160302-3542">
				<ns2:exp>
					<ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
                    {
                    	CouponTypeImpl defaultUser = new CouponTypeImpl();
                    	
                    	HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        
                        String selectedOrgId = @page.getHidden("selectedOrgId").getValue();
                        if (null == selectedOrgId || selectedOrgId.length() <= 0) {
                        	@page.executeJavaScript("alert(\"请先选择一个公司\")");
                        	return ;
                        }
                        input.put("selectedOrgId", selectedOrgId);
                    	
                        RefForm form = new RefForm("couponForm", "org.shaolin.vogerp.coupon.form.CouponType", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Create Coupon Type", new TableCallBack("couponTypeTable"), 690, 500);
                    }
                    ]]></ns2:expressionString>
				</ns2:exp>
			</ns2:ops>
		</ns2:eventHandler>
		<!-- 优惠类型设置 -->
		<ns2:eventHandler functionName="openCouponType">
			<ns2:ops xsi:type="ns2:OpCallAjaxType" name="openCouponType-20160302-3542">
				<ns2:exp>
					<ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
                    {
                    	System.out.println("==========openCouponType===========");
                        Table couponTypeTable = (Table)@page.getElement("couponTypeTable");
                        String selectedOrgId = @page.getHidden("selectedOrgId").getValue();
                        if (null == selectedOrgId || selectedOrgId.length() <= 0) {
                        	@page.executeJavaScript("alert(\"请先选择一个公司\")");
                        	return;
                        }
                        
                        CouponTypeImpl couponType = (CouponTypeImpl)couponTypeTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", couponType);
                        input.put("editable", new Boolean(true));
                        input.put("selectedOrgId", selectedOrgId);
                        
                        RefForm form = new RefForm("couponForm", "org.shaolin.vogerp.coupon.form.CouponType", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Open Coupon Type", new TableCallBack("couponTypeTable"), 690, 500);
                    }
                    ]]></ns2:expressionString>
				</ns2:exp>
			</ns2:ops>
		</ns2:eventHandler>
		<!-- 删除优惠类型 -->
		<ns2:eventHandler functionName="deleteCouponType">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteCouponType-201511-2224">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
                    import org.shaolin.vogerp.coupon.dao.CouponModel;
                    {
                        Table couponTypeTable = (Table)@page.getElement("couponTypeTable");
                        if (couponTypeTable.getSelectedRow() == null) {
                            return;
                        }
                        CouponTypeImpl defaultUser = (CouponTypeImpl)couponTypeTable.getSelectedRow();
                        try {
	                        CouponModel.INSTANCE.delete(defaultUser);
	                        
	                        couponTypeTable.refresh();
                        } catch (com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException e) {
                        	e.printStackTrace();
                        	@page.executeJavaScript("alert('请先删除该奖项下的优惠产品')");
                        }
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		<!-- 新建优惠产品 -->
		<ns2:eventHandler functionName="createDiscountProduct">
			<ns2:ops xsi:type="ns2:OpCallAjaxType" name="createDiscountProduct-20160302-3542">
				<ns2:exp>
					<ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.AjaxActionHelper;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.coupon.be.DiscountProductImpl;
                    import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
                    import java.util.List;
                    import java.util.ArrayList;
                    import org.shaolin.vogerp.coupon.dao.CouponModel;
                    import org.shaolin.bmdp.runtime.security.UserContext;
                    {
                    	
                    	String selectedOrgId = @page.getHidden("selectedOrgId").getValue();
                        if (null == selectedOrgId || selectedOrgId.length() <= 0) {
                        	@page.executeJavaScript("alert(\"请先选择一个公司\")");
                        	return ;
                        }
                    	
                    	DiscountProductImpl defaultUser = new DiscountProductImpl();
                    	
                    	HashMap input = new HashMap();
                        input.put("beObject", defaultUser);
                        input.put("editable", new Boolean(true));
                        input.put("selectedOrgId", selectedOrgId);
                    	
                    	CouponTypeImpl condition = new CouponTypeImpl();
                    	condition.setOrgId(Long.valueOf(selectedOrgId));
                    	List couponTypes = CouponModel.INSTANCE.searchCouponType(condition, null, 0, 0);
                    	if (null != couponTypes && couponTypes.size() > 0) {
	                    	List couponTypeIds = new ArrayList();
	                    	List couponTypeNames = new ArrayList();
                    		for (int i = 0; i < couponTypes.size(); i++) {
                    			CouponTypeImpl couponType = (CouponTypeImpl)(couponTypes.get(i));
                    			couponTypeIds.add(Long.valueOf(couponType.getId()));
                    			couponTypeNames.add(couponType.getName());
                    		}
                    		input.put("couponTypeIds", couponTypeIds);
                    		input.put("couponTypeNames", couponTypeNames);
                    	}
                        
                        RefForm form = new RefForm("discountForm", "org.shaolin.vogerp.coupon.form.DiscountProduct", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Create Discount Product", new TableCallBack("discountProductTable"), 690, 500);
                    }
                    ]]></ns2:expressionString>
				</ns2:exp>
			</ns2:ops>
		</ns2:eventHandler>
		<!-- 打开优惠产品 -->
		<ns2:eventHandler functionName="openDiscountProduct">
			<ns2:ops xsi:type="ns2:OpCallAjaxType" name="openDiscountProduct-20160302-3542">
				<ns2:exp>
					<ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.coupon.be.DiscountProductImpl;
                    import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
                    import java.util.List;
                    import java.util.ArrayList;
                    import org.shaolin.vogerp.coupon.dao.CouponModel;
                    import org.shaolin.bmdp.runtime.security.UserContext;
                    {
                        Table discountProductTable = (Table)@page.getElement("discountProductTable");
                        
						String selectedOrgId = @page.getHidden("selectedOrgId").getValue();
                        if (null == selectedOrgId || selectedOrgId.length() <= 0) {
                        	@page.executeJavaScript("alert(\"请先选择一个公司\")");
                        	return ;
                        }

                        DiscountProductImpl discountProduct = (DiscountProductImpl)discountProductTable.getSelectedRow();
                        HashMap input = new HashMap();
                        input.put("beObject", discountProduct);
                        input.put("editable", new Boolean(true));
                        input.put("couponTypeId", Long.valueOf(discountProduct.getCouponType().getId()));
                        input.put("selectedOrgId", selectedOrgId);
                        
                        CouponTypeImpl condition = new CouponTypeImpl();
                        condition.setOrgId(Long.valueOf(selectedOrgId));
                    	List couponTypes = CouponModel.INSTANCE.searchCouponType(condition, null, 0, 0);
                    	if (null != couponTypes && couponTypes.size() > 0) {
	                    	List couponTypeIds = new ArrayList();
	                    	List couponTypeNames = new ArrayList();
                    		for (int i = 0; i < couponTypes.size(); i++) {
                    			CouponTypeImpl couponType = (CouponTypeImpl)(couponTypes.get(i));
                    			couponTypeIds.add(Long.valueOf(couponType.getId()));
                    			couponTypeNames.add(couponType.getName());
                    		}
                    		input.put("couponTypeIds", couponTypeIds);
                    		input.put("couponTypeNames", couponTypeNames);
                    	}
                        
                        RefForm form = new RefForm("discountForm", "org.shaolin.vogerp.coupon.form.DiscountProduct", input);
                        @page.addElement(form);
                        
                        form.openInWindows("Open Discount Product", new TableCallBack("discountProductTable"), 690, 500);
                    }
                    ]]></ns2:expressionString>
				</ns2:exp>
			</ns2:ops>
		</ns2:eventHandler>
		<!-- 删除优惠产品 -->
		<ns2:eventHandler functionName="deleteDiscountProduct">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="deleteDiscountProduct-201511-2224">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import org.shaolin.uimaster.page.ajax.*;
                    import org.shaolin.vogerp.coupon.be.DiscountProductImpl;
                    import org.shaolin.vogerp.coupon.dao.CouponModel;
                    {
                        Table discountProductTable = (Table)@page.getElement("discountProductTable");
                        if (discountProductTable.getSelectedRow() == null) {
                            return;
                        }
                        DiscountProductImpl defaultUser = (DiscountProductImpl)discountProductTable.getSelectedRow();
                        CouponModel.INSTANCE.delete(defaultUser);
                        
                        discountProductTable.refresh();
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
        
        <ns2:eventHandler functionName="selectOrg">
           <ns2:ops xsi:type="ns2:OpCallAjaxType" name="selectOrg-201508111433">
                <ns2:exp>
                    <ns2:expressionString><![CDATA[
                    import java.util.HashMap;
                    import org.shaolin.uimaster.page.AjaxContext;
                    import org.shaolin.uimaster.page.ajax.*;
                    import java.util.List;
                    import org.shaolin.vogerp.coupon.be.*;
                    import org.shaolin.vogerp.coupon.dao.CouponModel;
                    {
                    	String orgId = @page.getComboBox("orgNameUI").getValue();
                    	@page.getHidden("selectedOrgId").setValue(orgId);
                    	
                    	Table couponTypeTable = (Table)@page.getElement("couponTypeTable");
                    	if (null != couponTypeTable) {
	                        CouponTypeImpl condition1 = (CouponTypeImpl)couponTypeTable.getConditions().getCondition();
	                        condition1.setOrgId(Long.valueOf(orgId));
	                        couponTypeTable.refresh();
                    	}
                    	
                        Table discountProductTable = (Table)@page.getElement("discountProductTable");
                        if (null != discountProductTable) {
	                        DiscountProductImpl condition2 = (DiscountProductImpl)discountProductTable.getConditions().getCondition();
	                        condition2.setOrgId(Long.valueOf(orgId));
	                        discountProductTable.refresh();
                        }
                    }
                    ]]></ns2:expressionString>
                </ns2:exp>
            </ns2:ops>
        </ns2:eventHandler>
		
		<ns2:body UIID="Form" xsi:type="ns2:UIPanelType">
			<ns2:UISkin xsi:type="ns2:UISkinType">
				<ns2:skinName>org.shaolin.uimaster.page.skin.TitlePanel
				</ns2:skinName>
				<ns2:param name="text">
					<ns2:value xsi:type="ns2:StringPropertyType">
						<ns2:value></ns2:value>
					</ns2:value>
				</ns2:param>
			</ns2:UISkin>
			<ns2:layout xsi:type="ns2:TableLayoutType">
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
				<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
			</ns2:layout>
			<ns2:component UIID="selectOrgPanel" xsi:type="ns2:UIPanelType">
				<ns2:layout xsi:type="ns2:TableLayoutType">
					<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
					<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
					<ns2:columnWidthWeight>0.0</ns2:columnWidthWeight>
				</ns2:layout>
				<ns2:component xsi:type="ns2:UIHiddenType" UIID="selectedOrgId"></ns2:component>
				<ns2:component xsi:type="ns2:UILabelType" UIID="orgNameUILabel">
			        <ns2:UIStyle>uimaster_leftform_widget</ns2:UIStyle>
			        <ns2:text xsi:type="ns2:ResourceBundlePropertyType">
			          <ns2:bundle>org_shaolin_vogerp_coupon_i18n</ns2:bundle>
			          <ns2:key>org.shaolin.vogerp.coupon.be.UserManagement.orgName</ns2:key>
			        </ns2:text>
			    </ns2:component>
			    <ns2:component xsi:type="ns2:UIComboBoxType" UIID="orgNameUI">
			        <ns2:UIStyle>uimaster_rightform_widget</ns2:UIStyle>
			        <ns2:readOnly xsi:type="ns2:BooleanPropertyType">
			            <ns2:value xsi:type="ns2:ExpressionPropertyType">
					         <ns2:expression>
					           <expressionString>
					           import org.shaolin.bmdp.runtime.AppContext;
					           { 
					           	   if (AppContext.isMasterNode()) {
					           	   		return false;
					           	   } else {
					           	   		return true;
					           	   }
					           }</expressionString>
					         </ns2:expression>
				        </ns2:value>
			        </ns2:readOnly>
			        <ns2:EventListener xsi:type="ns2:ItemChangeListenerType">
	                    <ns2:handler functionName="selectOrg"></ns2:handler>
	                </ns2:EventListener>
			    </ns2:component>
			    <ns2:layoutConstraint>
					<ns2:componentId>orgNameUILabel</ns2:componentId>
					<ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
				</ns2:layoutConstraint>
				<ns2:layoutConstraint>
					<ns2:componentId>orgNameUI</ns2:componentId>
					<ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="1" y="0" align="FULL"></ns2:constraint>
				</ns2:layoutConstraint>
			</ns2:component>
			<ns2:component xsi:type="ns2:UITabPaneType" UIID="functionsTab">
				<ns2:ajaxLoad>true</ns2:ajaxLoad>
				<ns2:tab uiid="couponTypePanel">
					<ns2:title xsi:type="ns2:ResourceBundlePropertyType">
						<ns2:bundle>org_shaolin_vogerp_coupon_i18n</ns2:bundle>
						<ns2:key>org.shaolin.vogerp.coupon.page.CouponManagement.couponTypePanel</ns2:key>
					</ns2:title>
					<ns2:panel UIID="couponTypePanel">
						<ns2:layout xsi:type="ns2:TableLayoutType">
							<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
							<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
						</ns2:layout>
						<ns2:component xsi:type="ns2:UITableType" UIID="couponTypeTable">
							<ns2:beElement>org.shaolin.vogerp.coupon.be.CouponType</ns2:beElement>
							<ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
							<ns2:defaultRowSize>10</ns2:defaultRowSize>
							<ns2:showActionBar>true</ns2:showActionBar>
							<ns2:showFilter>true</ns2:showFilter>
							<ns2:query xsi:type="ns2:ExpressionPropertyType">
								<ns2:expression xsi:type="ns2:ExpressionType">
									<ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.bmdp.runtime.security.UserContext;
		                            import org.shaolin.vogerp.coupon.be.CouponTypeImpl;
		                            import org.shaolin.vogerp.coupon.dao.CouponModel;
		                            import java.util.List;
		                            import org.shaolin.bmdp.runtime.AppContext;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new CouponTypeImpl());
		                                     $tableCondition.setCount(10);
		                                     $tableCondition.addOrder("createDate", false);
		                                  }
		                                  CouponTypeImpl condition = (CouponTypeImpl)$tableCondition.getCondition();
		                                  if (!AppContext.isMasterNode()) {
			                                  condition.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
		                                  }
		                                  List couponTypes = CouponModel.INSTANCE.searchCouponType(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                                  if (null != couponTypes && couponTypes.size() > 0) {
			                                 	int totalNum = 0;
			                                 	for (int i = 0; i < couponTypes.size(); i++) {
			                                 		CouponTypeImpl couponType = (CouponTypeImpl)couponTypes.get(i);
			                                 		totalNum += couponType.getTotalNum();
			                                 	}
			                                 	
			                                 	double p = 0.0;
			                                 	for (int j = 0; j < couponTypes.size(); j++) {
			                                 		CouponTypeImpl couponType = (CouponTypeImpl) couponTypes.get(j);
			                                 		if (j == couponTypes.size() - 1) {
			                                 			couponType.setPercent(Math.round((100.0 - p) * 10) / 10.0);
			                                 			continue;
			                                 		}
			                                 		double per = Math.floor(couponType.getTotalNum() * 1000.0 / totalNum) / 10D;
			                                 		p += per;
			                                 		couponType.setPercent(per);
			                                 	}
			                               }
			                               return couponTypes;
		                            }]]></ns2:expressionString>
								</ns2:expression>
							</ns2:query>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>名称</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.name</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>图标</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.icon</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Image</ns2:type>
								</ns2:uiType>
								<ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
								<ns2:expression xsi:type="ns2:ExpressionType">
									<ns2:expressionString><![CDATA[
		                            {
		                                return $rowBE.getIcon();
		                            }
		                            ]]></ns2:expressionString>
								</ns2:expression>
							</ns2:rowExpression>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>总数量</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.totalNum</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>占比(%)</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.percent</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>优势信息</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.superiorityMessage</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>限制信息</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.limitMessage</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>重置间隔</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.resetInterval</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>ComBox</ns2:type>
								</ns2:uiType>
								<ns2:updateCondition xsi:type="ns2:ExpressionPropertyType">
		                            <ns2:expression xsi:type="ns2:ExpressionType">
		                                <ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                import org.shaolin.vogerp.coupon.ce.ResetIntervalType;
		                                {
		                                    $rowBE.setResetInterval((ResetIntervalType)AppContext.get().getConstantService().getConstantEntity("org.shaolin.vogerp.coupon.ce.ResetIntervalType").getByIntValue(Integer.valueOf($value).intValue()));
		                                }]]></ns2:expressionString>
		                            </ns2:expression>
		                        </ns2:updateCondition>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>是否为即时优惠</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.isImmediate</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
								<ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
									<ns2:expression xsi:type="ns2:ExpressionType">
										<ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                {
		                                	return $rowBE.getIsImmediate() ? "是" : "否";
		                                }]]></ns2:expressionString>
									</ns2:expression>
								</ns2:rowExpression>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>是否为谢谢惠顾</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.isThanks</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
								<ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
									<ns2:expression xsi:type="ns2:ExpressionType">
										<ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                {
		                                	return $rowBE.getIsThanks() ? "是" : "否";
		                                }]]></ns2:expressionString>
									</ns2:expression>
								</ns2:rowExpression>
							</ns2:column>
							<ns2:defaultActions>
								<ns2:defaultNewAction>createCouponType</ns2:defaultNewAction>
								<ns2:defaultOpenAction>openCouponType</ns2:defaultOpenAction>
								<ns2:defaultDeleteAction>deleteCouponType</ns2:defaultDeleteAction>
							</ns2:defaultActions>
						</ns2:component>
						<ns2:layoutConstraint>
							<ns2:componentId>couponTypeTable</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="0" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
					</ns2:panel>
				</ns2:tab>
				<ns2:tab uiid="discountProductPanel">
					<ns2:title xsi:type="ns2:ResourceBundlePropertyType">
						<ns2:bundle>org_shaolin_vogerp_coupon_i18n</ns2:bundle>
						<ns2:key>org.shaolin.vogerp.coupon.page.CouponManagement.discountProductPanel</ns2:key>
					</ns2:title>
					<ns2:panel UIID="discountProductPanel">
						<ns2:layout xsi:type="ns2:TableLayoutType">
							<ns2:rowHeightWeight>0.0</ns2:rowHeightWeight>
							<ns2:columnWidthWeight>1.0</ns2:columnWidthWeight>
						</ns2:layout>
						<ns2:component xsi:type="ns2:UITableType" UIID="discountProductTable">
							<ns2:beElement>org.shaolin.vogerp.coupon.be.DiscountProduct</ns2:beElement>
							<ns2:selectMode xsi:type="ns2:UITableSelectModeType">Single</ns2:selectMode>
							<ns2:defaultRowSize>10</ns2:defaultRowSize>
							<ns2:showActionBar>true</ns2:showActionBar>
							<ns2:showFilter>true</ns2:showFilter>
							<ns2:query xsi:type="ns2:ExpressionPropertyType">
								<ns2:expression xsi:type="ns2:ExpressionType">
									<ns2:expressionString><![CDATA[
		                            import java.util.List;
		                            import org.shaolin.uimaster.page.ajax.TableConditions;
		                            import org.shaolin.bmdp.runtime.security.UserContext;
		                            import org.shaolin.vogerp.coupon.be.DiscountProductImpl;
		                            import org.shaolin.vogerp.coupon.dao.CouponModel;
		                            import org.shaolin.bmdp.runtime.AppContext;
		                            {
		                                  if ($tableCondition == null) {
		                                     $tableCondition = TableConditions.createCondition(new DiscountProductImpl());
		                                     $tableCondition.setCount(10);
		                                     $tableCondition.addOrder("createDate", false);
		                                  }
		                                  DiscountProductImpl condition = (DiscountProductImpl)$tableCondition.getCondition();
		                                  if (!AppContext.isMasterNode()) {
			                                  condition.setOrgId((Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID));
		                                  }
		                                  return CouponModel.INSTANCE.searchDiscountProduct(condition,
		                                                $tableCondition.getOrders(),
		                                                $tableCondition.getOffset(), 
		                                                $tableCondition.getCount());
		                            }]]></ns2:expressionString>
								</ns2:expression>
							</ns2:query>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>名称</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.name</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>图标</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.icon</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Image</ns2:type>
								</ns2:uiType>
								<ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
									<ns2:expression xsi:type="ns2:ExpressionType">
										<ns2:expressionString><![CDATA[
			                            {
			                                return $rowBE.getIcon();
			                            }
			                            ]]></ns2:expressionString>
									</ns2:expression>
								</ns2:rowExpression>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>优惠类型</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.couponTypeId</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
								<ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
									<ns2:expression xsi:type="ns2:ExpressionType">
										<ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                {
		                                	if (null != $rowBE.getCouponType())
		                                	return $rowBE.getCouponType().getName();
		                                }]]></ns2:expressionString>
									</ns2:expression>
								</ns2:rowExpression>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>是否可重用</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.isShare</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
								<ns2:rowExpression xsi:type="ns2:ExpressionPropertyType">
									<ns2:expression xsi:type="ns2:ExpressionType">
										<ns2:expressionString><![CDATA[
		                                import org.shaolin.bmdp.runtime.AppContext;
		                                {
		                                	return $rowBE.getIsShared() ? "是" : "否";
		                                }]]></ns2:expressionString>
									</ns2:expression>
								</ns2:rowExpression>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>优惠力度</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.discount</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:StringPropertyType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>优势信息</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.superiorityMessage</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>限制信息</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.limitMessage</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Text</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:column xsi:type="ns2:UITableColumnType">
								<ns2:title xsi:type="ns2:StringPropertyType">
									<ns2:value>有效期</ns2:value>
								</ns2:title>
								<ns2:beFieldId>rowBE.validity</ns2:beFieldId>
								<ns2:uiType xsi:type="ns2:UITableColHTMLType">
									<ns2:type>Label</ns2:type>
								</ns2:uiType>
							</ns2:column>
							<ns2:defaultActions>
								<ns2:defaultNewAction>createDiscountProduct</ns2:defaultNewAction>
								<ns2:defaultOpenAction>openDiscountProduct</ns2:defaultOpenAction>
								<ns2:defaultDeleteAction>deleteDiscountProduct</ns2:defaultDeleteAction>
							</ns2:defaultActions>
						</ns2:component>
						<ns2:layoutConstraint>
							<ns2:componentId>discountProductTable</ns2:componentId>
							<ns2:constraint xsi:type="ns2:TableLayoutConstraintType"
								x="0" y="0" align="FULL"></ns2:constraint>
						</ns2:layoutConstraint>
					</ns2:panel>
				</ns2:tab>
			</ns2:component>
			<ns2:layoutConstraint>
				<ns2:componentId>selectOrgPanel</ns2:componentId>
				<ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="0" align="FULL"></ns2:constraint>
			</ns2:layoutConstraint>
			<ns2:layoutConstraint>
				<ns2:componentId>functionsTab</ns2:componentId>
				<ns2:constraint xsi:type="ns2:TableLayoutConstraintType" x="0" y="1" align="FULL"></ns2:constraint>
			</ns2:layoutConstraint>
		</ns2:body>
	</ns2:UIEntity>
	<ns2:ODMapping>
		<ns2:DataEntity scope="InOut" name="selectedOrgId" category="JavaClass">
			<type entityName="java.lang.String"></type>
		</ns2:DataEntity>
		<ns2:DataEntity scope="InOut" name="orgIds" category="JavaClass">
			<type entityName="java.util.List"></type>
		</ns2:DataEntity>
		<ns2:DataEntity scope="InOut" name="orgNames" category="JavaClass">
			<type entityName="java.util.List"></type>
		</ns2:DataEntity>
		<ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping0">
	      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UISingleChoice"></ns2:mappingRule>
	      <ns2:UIComponent componentPath="orgNameUI" paramName="UIWidgetType"></ns2:UIComponent>
	      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="orgIds" paramName="OptionValues"></ns2:DataComponent>
	      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="orgNames" paramName="OptionDisplayValues"></ns2:DataComponent>
	    </ns2:ComponentMapping>
	    <ns2:ComponentMapping xsi:type="ns2:SimpleComponentMappingType" name="simpleMapping10">
	      <ns2:mappingRule entityName="org.shaolin.uimaster.page.od.rules.UIText"></ns2:mappingRule>
	      <ns2:UIComponent componentPath="selectedOrgId" paramName="UIWidgetType"></ns2:UIComponent>
	      <ns2:DataComponent xsi:type="ns2:ComponentParamType" componentPath="selectedOrgId" paramName="StringData"></ns2:DataComponent>
	    </ns2:ComponentMapping>
	</ns2:ODMapping>
	<ns2:in>
		<ns2:serverOperation xsi:type="ns2:ExpressionType">
            <ns2:expressionString><![CDATA[
            import java.util.List;
            import org.shaolin.bmdp.runtime.AppContext;
            import org.shaolin.vogerp.commonmodel.be.OrganizationImpl;
            import org.shaolin.vogerp.commonmodel.dao.CommonModel;
            import java.util.ArrayList;
            import org.shaolin.bmdp.runtime.security.UserContext;
            {
            	$orgIds = new ArrayList();
            	$orgNames = new ArrayList();
            	if (AppContext.isMasterNode()) {
	            	OrganizationImpl condition = new OrganizationImpl();
	            	List orgs = CommonModel.INSTANCE.searchOrganization(condition, null, 0, 0);
	            	if (null != orgs && orgs.size() > 0) {
	            		$selectedOrgId = String.valueOf(((OrganizationImpl)orgs.get(0)).getId());
	            		for (int i = 0; i < orgs.size(); i++) {
		            		OrganizationImpl org = (OrganizationImpl) orgs.get(i);
		            		$orgIds.add(String.valueOf(org.getId()));
		            		$orgNames.add(org.getName());
	            		}
	            	}
            	} else {
            		long orgId = (Long)UserContext.getUserData(UserContext.CURRENT_USER_ORGID);
            		$selectedOrgId = String.valueOf(orgId);
            		OrganizationImpl condition = new OrganizationImpl();
            		condition.setId(orgId);
	            	List orgs = CommonModel.INSTANCE.searchOrganization(condition, null, 0, 0);
	            	if (null != orgs && orgs.size() > 0) {
	            		OrganizationImpl org = (OrganizationImpl) orgs.get(0);
	            		$orgIds.add(String.valueOf(org.getId()));
	            		$orgNames.add(org.getName());
	            	}
            	}
            	
            	@odContext.executeAllMappings();
            }
            ]]></ns2:expressionString>
        </ns2:serverOperation>
	</ns2:in>
</ns2:UIPage>
 